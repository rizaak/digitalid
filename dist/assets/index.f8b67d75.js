var Qf=(l,n)=>()=>(n||l((n={exports:{}}).exports,n),n.exports);var _I=Qf((al,sl)=>{const Yf=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const u of document.querySelectorAll('link[rel="modulepreload"]'))t(u);new MutationObserver(u=>{for(const r of u)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function e(u){const r={};return u.integrity&&(r.integrity=u.integrity),u.referrerpolicy&&(r.referrerPolicy=u.referrerpolicy),u.crossorigin==="use-credentials"?r.credentials="include":u.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(u){if(u.ep)return;u.ep=!0;const r=e(u);fetch(u.href,r)}};Yf();var pt=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function Xf(l){return l&&l.__esModule&&Object.prototype.hasOwnProperty.call(l,"default")?l.default:l}var W={exports:{}},y2={};/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var Tu=Object.getOwnPropertySymbols,Jf=Object.prototype.hasOwnProperty,Zf=Object.prototype.propertyIsEnumerable;function lh(l){if(l==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(l)}function nh(){try{if(!Object.assign)return!1;var l=new String("abc");if(l[5]="de",Object.getOwnPropertyNames(l)[0]==="5")return!1;for(var n={},e=0;e<10;e++)n["_"+String.fromCharCode(e)]=e;var t=Object.getOwnPropertyNames(n).map(function(r){return n[r]});if(t.join("")!=="0123456789")return!1;var u={};return"abcdefghijklmnopqrst".split("").forEach(function(r){u[r]=r}),Object.keys(Object.assign({},u)).join("")==="abcdefghijklmnopqrst"}catch{return!1}}var Ri=nh()?Object.assign:function(l,n){for(var e,t=lh(l),u,r=1;r<arguments.length;r++){e=Object(arguments[r]);for(var o in e)Jf.call(e,o)&&(t[o]=e[o]);if(Tu){u=Tu(e);for(var i=0;i<u.length;i++)Zf.call(e,u[i])&&(t[u[i]]=e[u[i]])}}return t};/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gt=Ri,n5=60103,Ii=60106;y2.Fragment=60107;y2.StrictMode=60108;y2.Profiler=60114;var Ni=60109,Mi=60110,Fi=60112;y2.Suspense=60113;var Li=60115,Di=60116;if(typeof Symbol=="function"&&Symbol.for){var I3=Symbol.for;n5=I3("react.element"),Ii=I3("react.portal"),y2.Fragment=I3("react.fragment"),y2.StrictMode=I3("react.strict_mode"),y2.Profiler=I3("react.profiler"),Ni=I3("react.provider"),Mi=I3("react.context"),Fi=I3("react.forward_ref"),y2.Suspense=I3("react.suspense"),Li=I3("react.memo"),Di=I3("react.lazy")}var Eu=typeof Symbol=="function"&&Symbol.iterator;function eh(l){return l===null||typeof l!="object"?null:(l=Eu&&l[Eu]||l["@@iterator"],typeof l=="function"?l:null)}function qe(l){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+l,e=1;e<arguments.length;e++)n+="&args[]="+encodeURIComponent(arguments[e]);return"Minified React error #"+l+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var $i={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ji={};function e5(l,n,e){this.props=l,this.context=n,this.refs=ji,this.updater=e||$i}e5.prototype.isReactComponent={};e5.prototype.setState=function(l,n){if(typeof l!="object"&&typeof l!="function"&&l!=null)throw Error(qe(85));this.updater.enqueueSetState(this,l,n,"setState")};e5.prototype.forceUpdate=function(l){this.updater.enqueueForceUpdate(this,l,"forceUpdate")};function Bi(){}Bi.prototype=e5.prototype;function mt(l,n,e){this.props=l,this.context=n,this.refs=ji,this.updater=e||$i}var vt=mt.prototype=new Bi;vt.constructor=mt;gt(vt,e5.prototype);vt.isPureReactComponent=!0;var yt={current:null},Ui=Object.prototype.hasOwnProperty,Hi={key:!0,ref:!0,__self:!0,__source:!0};function zi(l,n,e){var t,u={},r=null,o=null;if(n!=null)for(t in n.ref!==void 0&&(o=n.ref),n.key!==void 0&&(r=""+n.key),n)Ui.call(n,t)&&!Hi.hasOwnProperty(t)&&(u[t]=n[t]);var i=arguments.length-2;if(i===1)u.children=e;else if(1<i){for(var a=Array(i),s=0;s<i;s++)a[s]=arguments[s+2];u.children=a}if(l&&l.defaultProps)for(t in i=l.defaultProps,i)u[t]===void 0&&(u[t]=i[t]);return{$$typeof:n5,type:l,key:r,ref:o,props:u,_owner:yt.current}}function th(l,n){return{$$typeof:n5,type:l.type,key:n,ref:l.ref,props:l.props,_owner:l._owner}}function wt(l){return typeof l=="object"&&l!==null&&l.$$typeof===n5}function uh(l){var n={"=":"=0",":":"=2"};return"$"+l.replace(/[=:]/g,function(e){return n[e]})}var Cu=/\/+/g;function l8(l,n){return typeof l=="object"&&l!==null&&l.key!=null?uh(""+l.key):n.toString(36)}function V1(l,n,e,t,u){var r=typeof l;(r==="undefined"||r==="boolean")&&(l=null);var o=!1;if(l===null)o=!0;else switch(r){case"string":case"number":o=!0;break;case"object":switch(l.$$typeof){case n5:case Ii:o=!0}}if(o)return o=l,u=u(o),l=t===""?"."+l8(o,0):t,Array.isArray(u)?(e="",l!=null&&(e=l.replace(Cu,"$&/")+"/"),V1(u,n,e,"",function(s){return s})):u!=null&&(wt(u)&&(u=th(u,e+(!u.key||o&&o.key===u.key?"":(""+u.key).replace(Cu,"$&/")+"/")+l)),n.push(u)),1;if(o=0,t=t===""?".":t+":",Array.isArray(l))for(var i=0;i<l.length;i++){r=l[i];var a=t+l8(r,i);o+=V1(r,n,e,a,u)}else if(a=eh(l),typeof a=="function")for(l=a.call(l),i=0;!(r=l.next()).done;)r=r.value,a=t+l8(r,i++),o+=V1(r,n,e,a,u);else if(r==="object")throw n=""+l,Error(qe(31,n==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":n));return o}function E1(l,n,e){if(l==null)return l;var t=[],u=0;return V1(l,t,"","",function(r){return n.call(e,r,u++)}),t}function rh(l){if(l._status===-1){var n=l._result;n=n(),l._status=0,l._result=n,n.then(function(e){l._status===0&&(e=e.default,l._status=1,l._result=e)},function(e){l._status===0&&(l._status=2,l._result=e)})}if(l._status===1)return l._result;throw l._result}var Vi={current:null};function El(){var l=Vi.current;if(l===null)throw Error(qe(321));return l}var oh={ReactCurrentDispatcher:Vi,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:yt,IsSomeRendererActing:{current:!1},assign:gt};y2.Children={map:E1,forEach:function(l,n,e){E1(l,function(){n.apply(this,arguments)},e)},count:function(l){var n=0;return E1(l,function(){n++}),n},toArray:function(l){return E1(l,function(n){return n})||[]},only:function(l){if(!wt(l))throw Error(qe(143));return l}};y2.Component=e5;y2.PureComponent=mt;y2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=oh;y2.cloneElement=function(l,n,e){if(l==null)throw Error(qe(267,l));var t=gt({},l.props),u=l.key,r=l.ref,o=l._owner;if(n!=null){if(n.ref!==void 0&&(r=n.ref,o=yt.current),n.key!==void 0&&(u=""+n.key),l.type&&l.type.defaultProps)var i=l.type.defaultProps;for(a in n)Ui.call(n,a)&&!Hi.hasOwnProperty(a)&&(t[a]=n[a]===void 0&&i!==void 0?i[a]:n[a])}var a=arguments.length-2;if(a===1)t.children=e;else if(1<a){i=Array(a);for(var s=0;s<a;s++)i[s]=arguments[s+2];t.children=i}return{$$typeof:n5,type:l.type,key:u,ref:r,props:t,_owner:o}};y2.createContext=function(l,n){return n===void 0&&(n=null),l={$$typeof:Mi,_calculateChangedBits:n,_currentValue:l,_currentValue2:l,_threadCount:0,Provider:null,Consumer:null},l.Provider={$$typeof:Ni,_context:l},l.Consumer=l};y2.createElement=zi;y2.createFactory=function(l){var n=zi.bind(null,l);return n.type=l,n};y2.createRef=function(){return{current:null}};y2.forwardRef=function(l){return{$$typeof:Fi,render:l}};y2.isValidElement=wt;y2.lazy=function(l){return{$$typeof:Di,_payload:{_status:-1,_result:l},_init:rh}};y2.memo=function(l,n){return{$$typeof:Li,type:l,compare:n===void 0?null:n}};y2.useCallback=function(l,n){return El().useCallback(l,n)};y2.useContext=function(l,n){return El().useContext(l,n)};y2.useDebugValue=function(){};y2.useEffect=function(l,n){return El().useEffect(l,n)};y2.useImperativeHandle=function(l,n,e){return El().useImperativeHandle(l,n,e)};y2.useLayoutEffect=function(l,n){return El().useLayoutEffect(l,n)};y2.useMemo=function(l,n){return El().useMemo(l,n)};y2.useReducer=function(l,n,e){return El().useReducer(l,n,e)};y2.useRef=function(l){return El().useRef(l)};y2.useState=function(l){return El().useState(l)};y2.version="17.0.2";W.exports=y2;var $=W.exports,he={exports:{}},R3={},Wi={exports:{}},Gi={};/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(l){var n,e,t,u;if(typeof performance=="object"&&typeof performance.now=="function"){var r=performance;l.unstable_now=function(){return r.now()}}else{var o=Date,i=o.now();l.unstable_now=function(){return o.now()-i}}if(typeof window=="undefined"||typeof MessageChannel!="function"){var a=null,s=null,c=function(){if(a!==null)try{var x=l.unstable_now();a(!0,x),a=null}catch(N){throw setTimeout(c,0),N}};n=function(x){a!==null?setTimeout(n,0,x):(a=x,setTimeout(c,0))},e=function(x,N){s=setTimeout(x,N)},t=function(){clearTimeout(s)},l.unstable_shouldYield=function(){return!1},u=l.unstable_forceFrameRate=function(){}}else{var f=window.setTimeout,d=window.clearTimeout;if(typeof console!="undefined"){var h=window.cancelAnimationFrame;typeof window.requestAnimationFrame!="function"&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),typeof h!="function"&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var p=!1,y=null,m=-1,g=5,v=0;l.unstable_shouldYield=function(){return l.unstable_now()>=v},u=function(){},l.unstable_forceFrameRate=function(x){0>x||125<x?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<x?Math.floor(1e3/x):5};var w=new MessageChannel,S=w.port2;w.port1.onmessage=function(){if(y!==null){var x=l.unstable_now();v=x+g;try{y(!0,x)?S.postMessage(null):(p=!1,y=null)}catch(N){throw S.postMessage(null),N}}else p=!1},n=function(x){y=x,p||(p=!0,S.postMessage(null))},e=function(x,N){m=f(function(){x(l.unstable_now())},N)},t=function(){d(m),m=-1}}function I(x,N){var B=x.length;x.push(N);l:for(;;){var U=B-1>>>1,o2=x[U];if(o2!==void 0&&0<F(o2,N))x[U]=N,x[B]=o2,B=U;else break l}}function C(x){return x=x[0],x===void 0?null:x}function D(x){var N=x[0];if(N!==void 0){var B=x.pop();if(B!==N){x[0]=B;l:for(var U=0,o2=x.length;U<o2;){var g2=2*(U+1)-1,m2=x[g2],S2=g2+1,A2=x[S2];if(m2!==void 0&&0>F(m2,B))A2!==void 0&&0>F(A2,m2)?(x[U]=A2,x[S2]=B,U=S2):(x[U]=m2,x[g2]=B,U=g2);else if(A2!==void 0&&0>F(A2,B))x[U]=A2,x[S2]=B,U=S2;else break l}}return N}return null}function F(x,N){var B=x.sortIndex-N.sortIndex;return B!==0?B:x.id-N.id}var j=[],K=[],X=1,n2=null,Z=3,b=!1,L=!1,Y=!1;function c2(x){for(var N=C(K);N!==null;){if(N.callback===null)D(K);else if(N.startTime<=x)D(K),N.sortIndex=N.expirationTime,I(j,N);else break;N=C(K)}}function a2(x){if(Y=!1,c2(x),!L)if(C(j)!==null)L=!0,n(_);else{var N=C(K);N!==null&&e(a2,N.startTime-x)}}function _(x,N){L=!1,Y&&(Y=!1,t()),b=!0;var B=Z;try{for(c2(N),n2=C(j);n2!==null&&(!(n2.expirationTime>N)||x&&!l.unstable_shouldYield());){var U=n2.callback;if(typeof U=="function"){n2.callback=null,Z=n2.priorityLevel;var o2=U(n2.expirationTime<=N);N=l.unstable_now(),typeof o2=="function"?n2.callback=o2:n2===C(j)&&D(j),c2(N)}else D(j);n2=C(j)}if(n2!==null)var g2=!0;else{var m2=C(K);m2!==null&&e(a2,m2.startTime-N),g2=!1}return g2}finally{n2=null,Z=B,b=!1}}var A=u;l.unstable_IdlePriority=5,l.unstable_ImmediatePriority=1,l.unstable_LowPriority=4,l.unstable_NormalPriority=3,l.unstable_Profiling=null,l.unstable_UserBlockingPriority=2,l.unstable_cancelCallback=function(x){x.callback=null},l.unstable_continueExecution=function(){L||b||(L=!0,n(_))},l.unstable_getCurrentPriorityLevel=function(){return Z},l.unstable_getFirstCallbackNode=function(){return C(j)},l.unstable_next=function(x){switch(Z){case 1:case 2:case 3:var N=3;break;default:N=Z}var B=Z;Z=N;try{return x()}finally{Z=B}},l.unstable_pauseExecution=function(){},l.unstable_requestPaint=A,l.unstable_runWithPriority=function(x,N){switch(x){case 1:case 2:case 3:case 4:case 5:break;default:x=3}var B=Z;Z=x;try{return N()}finally{Z=B}},l.unstable_scheduleCallback=function(x,N,B){var U=l.unstable_now();switch(typeof B=="object"&&B!==null?(B=B.delay,B=typeof B=="number"&&0<B?U+B:U):B=U,x){case 1:var o2=-1;break;case 2:o2=250;break;case 5:o2=1073741823;break;case 4:o2=1e4;break;default:o2=5e3}return o2=B+o2,x={id:X++,callback:N,priorityLevel:x,startTime:B,expirationTime:o2,sortIndex:-1},B>U?(x.sortIndex=B,I(K,x),C(j)===null&&x===C(K)&&(Y?t():Y=!0,e(a2,B-U))):(x.sortIndex=o2,I(j,x),L||b||(L=!0,n(_))),x},l.unstable_wrapCallback=function(x){var N=Z;return function(){var B=Z;Z=N;try{return x.apply(this,arguments)}finally{Z=B}}}})(Gi);Wi.exports=Gi;/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Q0=W.exports,P2=Ri,B2=Wi.exports;function q(l){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+l,e=1;e<arguments.length;e++)n+="&args[]="+encodeURIComponent(arguments[e]);return"Minified React error #"+l+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!Q0)throw Error(q(227));var Ki=new Set,pe={};function Bn(l,n){k4(l,n),k4(l+"Capture",n)}function k4(l,n){for(pe[l]=n,l=0;l<n.length;l++)Ki.add(n[l])}var ml=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),ih=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,bu=Object.prototype.hasOwnProperty,Ou={},ku={};function ah(l){return bu.call(ku,l)?!0:bu.call(Ou,l)?!1:ih.test(l)?ku[l]=!0:(Ou[l]=!0,!1)}function sh(l,n,e,t){if(e!==null&&e.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return t?!1:e!==null?!e.acceptsBooleans:(l=l.toLowerCase().slice(0,5),l!=="data-"&&l!=="aria-");default:return!1}}function ch(l,n,e,t){if(n===null||typeof n=="undefined"||sh(l,n,e,t))return!0;if(t)return!1;if(e!==null)switch(e.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function l3(l,n,e,t,u,r,o){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=t,this.attributeNamespace=u,this.mustUseProperty=e,this.propertyName=l,this.type=n,this.sanitizeURL=r,this.removeEmptyString=o}var V2={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(l){V2[l]=new l3(l,0,!1,l,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(l){var n=l[0];V2[n]=new l3(n,1,!1,l[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(l){V2[l]=new l3(l,2,!1,l.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(l){V2[l]=new l3(l,2,!1,l,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(l){V2[l]=new l3(l,3,!1,l.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(l){V2[l]=new l3(l,3,!0,l,null,!1,!1)});["capture","download"].forEach(function(l){V2[l]=new l3(l,4,!1,l,null,!1,!1)});["cols","rows","size","span"].forEach(function(l){V2[l]=new l3(l,6,!1,l,null,!1,!1)});["rowSpan","start"].forEach(function(l){V2[l]=new l3(l,5,!1,l.toLowerCase(),null,!1,!1)});var St=/[\-:]([a-z])/g;function xt(l){return l[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(l){var n=l.replace(St,xt);V2[n]=new l3(n,1,!1,l,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(l){var n=l.replace(St,xt);V2[n]=new l3(n,1,!1,l,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(l){var n=l.replace(St,xt);V2[n]=new l3(n,1,!1,l,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(l){V2[l]=new l3(l,1,!1,l.toLowerCase(),null,!1,!1)});V2.xlinkHref=new l3("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(l){V2[l]=new l3(l,1,!1,l.toLowerCase(),null,!0,!0)});function Tt(l,n,e,t){var u=V2.hasOwnProperty(n)?V2[n]:null,r=u!==null?u.type===0:t?!1:!(!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N");r||(ch(n,e,u,t)&&(e=null),t||u===null?ah(n)&&(e===null?l.removeAttribute(n):l.setAttribute(n,""+e)):u.mustUseProperty?l[u.propertyName]=e===null?u.type===3?!1:"":e:(n=u.attributeName,t=u.attributeNamespace,e===null?l.removeAttribute(n):(u=u.type,e=u===3||u===4&&e===!0?"":""+e,t?l.setAttributeNS(t,n,e):l.setAttribute(n,e))))}var Un=Q0.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,L5=60103,wn=60106,_l=60107,Et=60108,W5=60114,Ct=60109,bt=60110,Y0=60112,G5=60113,h0=60120,X0=60115,Ot=60116,kt=60121,Pt=60128,qi=60129,At=60130,U8=60131;if(typeof Symbol=="function"&&Symbol.for){var $2=Symbol.for;L5=$2("react.element"),wn=$2("react.portal"),_l=$2("react.fragment"),Et=$2("react.strict_mode"),W5=$2("react.profiler"),Ct=$2("react.provider"),bt=$2("react.context"),Y0=$2("react.forward_ref"),G5=$2("react.suspense"),h0=$2("react.suspense_list"),X0=$2("react.memo"),Ot=$2("react.lazy"),kt=$2("react.block"),$2("react.scope"),Pt=$2("react.opaque.id"),qi=$2("react.debug_trace_mode"),At=$2("react.offscreen"),U8=$2("react.legacy_hidden")}var Pu=typeof Symbol=="function"&&Symbol.iterator;function w5(l){return l===null||typeof l!="object"?null:(l=Pu&&l[Pu]||l["@@iterator"],typeof l=="function"?l:null)}var n8;function D5(l){if(n8===void 0)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);n8=n&&n[1]||""}return`
`+n8+l}var e8=!1;function C1(l,n){if(!l||e8)return"";e8=!0;var e=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(a){var t=a}Reflect.construct(l,[],n)}else{try{n.call()}catch(a){t=a}l.call(n.prototype)}else{try{throw Error()}catch(a){t=a}l()}}catch(a){if(a&&t&&typeof a.stack=="string"){for(var u=a.stack.split(`
`),r=t.stack.split(`
`),o=u.length-1,i=r.length-1;1<=o&&0<=i&&u[o]!==r[i];)i--;for(;1<=o&&0<=i;o--,i--)if(u[o]!==r[i]){if(o!==1||i!==1)do if(o--,i--,0>i||u[o]!==r[i])return`
`+u[o].replace(" at new "," at ");while(1<=o&&0<=i);break}}}finally{e8=!1,Error.prepareStackTrace=e}return(l=l?l.displayName||l.name:"")?D5(l):""}function dh(l){switch(l.tag){case 5:return D5(l.type);case 16:return D5("Lazy");case 13:return D5("Suspense");case 19:return D5("SuspenseList");case 0:case 2:case 15:return l=C1(l.type,!1),l;case 11:return l=C1(l.type.render,!1),l;case 22:return l=C1(l.type._render,!1),l;case 1:return l=C1(l.type,!0),l;default:return""}}function h4(l){if(l==null)return null;if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l;switch(l){case _l:return"Fragment";case wn:return"Portal";case W5:return"Profiler";case Et:return"StrictMode";case G5:return"Suspense";case h0:return"SuspenseList"}if(typeof l=="object")switch(l.$$typeof){case bt:return(l.displayName||"Context")+".Consumer";case Ct:return(l._context.displayName||"Context")+".Provider";case Y0:var n=l.render;return n=n.displayName||n.name||"",l.displayName||(n!==""?"ForwardRef("+n+")":"ForwardRef");case X0:return h4(l.type);case kt:return h4(l._render);case Ot:n=l._payload,l=l._init;try{return h4(l(n))}catch{}}return null}function Gl(l){switch(typeof l){case"boolean":case"number":case"object":case"string":case"undefined":return l;default:return""}}function Qi(l){var n=l.type;return(l=l.nodeName)&&l.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function fh(l){var n=Qi(l)?"checked":"value",e=Object.getOwnPropertyDescriptor(l.constructor.prototype,n),t=""+l[n];if(!l.hasOwnProperty(n)&&typeof e!="undefined"&&typeof e.get=="function"&&typeof e.set=="function"){var u=e.get,r=e.set;return Object.defineProperty(l,n,{configurable:!0,get:function(){return u.call(this)},set:function(o){t=""+o,r.call(this,o)}}),Object.defineProperty(l,n,{enumerable:e.enumerable}),{getValue:function(){return t},setValue:function(o){t=""+o},stopTracking:function(){l._valueTracker=null,delete l[n]}}}}function b1(l){l._valueTracker||(l._valueTracker=fh(l))}function Yi(l){if(!l)return!1;var n=l._valueTracker;if(!n)return!0;var e=n.getValue(),t="";return l&&(t=Qi(l)?l.checked?"true":"false":l.value),l=t,l!==e?(n.setValue(l),!0):!1}function p0(l){if(l=l||(typeof document!="undefined"?document:void 0),typeof l=="undefined")return null;try{return l.activeElement||l.body}catch{return l.body}}function H8(l,n){var e=n.checked;return P2({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:e!=null?e:l._wrapperState.initialChecked})}function Au(l,n){var e=n.defaultValue==null?"":n.defaultValue,t=n.checked!=null?n.checked:n.defaultChecked;e=Gl(n.value!=null?n.value:e),l._wrapperState={initialChecked:t,initialValue:e,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function Xi(l,n){n=n.checked,n!=null&&Tt(l,"checked",n,!1)}function z8(l,n){Xi(l,n);var e=Gl(n.value),t=n.type;if(e!=null)t==="number"?(e===0&&l.value===""||l.value!=e)&&(l.value=""+e):l.value!==""+e&&(l.value=""+e);else if(t==="submit"||t==="reset"){l.removeAttribute("value");return}n.hasOwnProperty("value")?V8(l,n.type,e):n.hasOwnProperty("defaultValue")&&V8(l,n.type,Gl(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(l.defaultChecked=!!n.defaultChecked)}function _u(l,n,e){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var t=n.type;if(!(t!=="submit"&&t!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+l._wrapperState.initialValue,e||n===l.value||(l.value=n),l.defaultValue=n}e=l.name,e!==""&&(l.name=""),l.defaultChecked=!!l._wrapperState.initialChecked,e!==""&&(l.name=e)}function V8(l,n,e){(n!=="number"||p0(l.ownerDocument)!==l)&&(e==null?l.defaultValue=""+l._wrapperState.initialValue:l.defaultValue!==""+e&&(l.defaultValue=""+e))}function hh(l){var n="";return Q0.Children.forEach(l,function(e){e!=null&&(n+=e)}),n}function W8(l,n){return l=P2({children:void 0},n),(n=hh(n.children))&&(l.children=n),l}function p4(l,n,e,t){if(l=l.options,n){n={};for(var u=0;u<e.length;u++)n["$"+e[u]]=!0;for(e=0;e<l.length;e++)u=n.hasOwnProperty("$"+l[e].value),l[e].selected!==u&&(l[e].selected=u),u&&t&&(l[e].defaultSelected=!0)}else{for(e=""+Gl(e),n=null,u=0;u<l.length;u++){if(l[u].value===e){l[u].selected=!0,t&&(l[u].defaultSelected=!0);return}n!==null||l[u].disabled||(n=l[u])}n!==null&&(n.selected=!0)}}function G8(l,n){if(n.dangerouslySetInnerHTML!=null)throw Error(q(91));return P2({},n,{value:void 0,defaultValue:void 0,children:""+l._wrapperState.initialValue})}function Ru(l,n){var e=n.value;if(e==null){if(e=n.children,n=n.defaultValue,e!=null){if(n!=null)throw Error(q(92));if(Array.isArray(e)){if(!(1>=e.length))throw Error(q(93));e=e[0]}n=e}n==null&&(n=""),e=n}l._wrapperState={initialValue:Gl(e)}}function Ji(l,n){var e=Gl(n.value),t=Gl(n.defaultValue);e!=null&&(e=""+e,e!==l.value&&(l.value=e),n.defaultValue==null&&l.defaultValue!==e&&(l.defaultValue=e)),t!=null&&(l.defaultValue=""+t)}function Iu(l){var n=l.textContent;n===l._wrapperState.initialValue&&n!==""&&n!==null&&(l.value=n)}var K8={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function Zi(l){switch(l){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function q8(l,n){return l==null||l==="http://www.w3.org/1999/xhtml"?Zi(n):l==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":l}var O1,la=function(l){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(n,e,t,u){MSApp.execUnsafeLocalFunction(function(){return l(n,e,t,u)})}:l}(function(l,n){if(l.namespaceURI!==K8.svg||"innerHTML"in l)l.innerHTML=n;else{for(O1=O1||document.createElement("div"),O1.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=O1.firstChild;l.firstChild;)l.removeChild(l.firstChild);for(;n.firstChild;)l.appendChild(n.firstChild)}});function ge(l,n){if(n){var e=l.firstChild;if(e&&e===l.lastChild&&e.nodeType===3){e.nodeValue=n;return}}l.textContent=n}var K5={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ph=["Webkit","ms","Moz","O"];Object.keys(K5).forEach(function(l){ph.forEach(function(n){n=n+l.charAt(0).toUpperCase()+l.substring(1),K5[n]=K5[l]})});function na(l,n,e){return n==null||typeof n=="boolean"||n===""?"":e||typeof n!="number"||n===0||K5.hasOwnProperty(l)&&K5[l]?(""+n).trim():n+"px"}function ea(l,n){l=l.style;for(var e in n)if(n.hasOwnProperty(e)){var t=e.indexOf("--")===0,u=na(e,n[e],t);e==="float"&&(e="cssFloat"),t?l.setProperty(e,u):l[e]=u}}var gh=P2({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Q8(l,n){if(n){if(gh[l]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(q(137,l));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(q(60));if(!(typeof n.dangerouslySetInnerHTML=="object"&&"__html"in n.dangerouslySetInnerHTML))throw Error(q(61))}if(n.style!=null&&typeof n.style!="object")throw Error(q(62))}}function Y8(l,n){if(l.indexOf("-")===-1)return typeof n.is=="string";switch(l){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _t(l){return l=l.target||l.srcElement||window,l.correspondingUseElement&&(l=l.correspondingUseElement),l.nodeType===3?l.parentNode:l}var X8=null,g4=null,m4=null;function Nu(l){if(l=Ye(l)){if(typeof X8!="function")throw Error(q(280));var n=l.stateNode;n&&(n=t6(n),X8(l.stateNode,l.type,n))}}function ta(l){g4?m4?m4.push(l):m4=[l]:g4=l}function ua(){if(g4){var l=g4,n=m4;if(m4=g4=null,Nu(l),n)for(l=0;l<n.length;l++)Nu(n[l])}}function Rt(l,n){return l(n)}function ra(l,n,e,t,u){return l(n,e,t,u)}function It(){}var oa=Rt,Sn=!1,t8=!1;function Nt(){(g4!==null||m4!==null)&&(It(),ua())}function mh(l,n,e){if(t8)return l(n,e);t8=!0;try{return oa(l,n,e)}finally{t8=!1,Nt()}}function me(l,n){var e=l.stateNode;if(e===null)return null;var t=t6(e);if(t===null)return null;e=t[n];l:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(t=!t.disabled)||(l=l.type,t=!(l==="button"||l==="input"||l==="select"||l==="textarea")),l=!t;break l;default:l=!1}if(l)return null;if(e&&typeof e!="function")throw Error(q(231,n,typeof e));return e}var J8=!1;if(ml)try{var S5={};Object.defineProperty(S5,"passive",{get:function(){J8=!0}}),window.addEventListener("test",S5,S5),window.removeEventListener("test",S5,S5)}catch{J8=!1}function vh(l,n,e,t,u,r,o,i,a){var s=Array.prototype.slice.call(arguments,3);try{n.apply(e,s)}catch(c){this.onError(c)}}var q5=!1,g0=null,m0=!1,Z8=null,yh={onError:function(l){q5=!0,g0=l}};function wh(l,n,e,t,u,r,o,i,a){q5=!1,g0=null,vh.apply(yh,arguments)}function Sh(l,n,e,t,u,r,o,i,a){if(wh.apply(this,arguments),q5){if(q5){var s=g0;q5=!1,g0=null}else throw Error(q(198));m0||(m0=!0,Z8=s)}}function Hn(l){var n=l,e=l;if(l.alternate)for(;n.return;)n=n.return;else{l=n;do n=l,(n.flags&1026)!==0&&(e=n.return),l=n.return;while(l)}return n.tag===3?e:null}function ia(l){if(l.tag===13){var n=l.memoizedState;if(n===null&&(l=l.alternate,l!==null&&(n=l.memoizedState)),n!==null)return n.dehydrated}return null}function Mu(l){if(Hn(l)!==l)throw Error(q(188))}function xh(l){var n=l.alternate;if(!n){if(n=Hn(l),n===null)throw Error(q(188));return n!==l?null:l}for(var e=l,t=n;;){var u=e.return;if(u===null)break;var r=u.alternate;if(r===null){if(t=u.return,t!==null){e=t;continue}break}if(u.child===r.child){for(r=u.child;r;){if(r===e)return Mu(u),l;if(r===t)return Mu(u),n;r=r.sibling}throw Error(q(188))}if(e.return!==t.return)e=u,t=r;else{for(var o=!1,i=u.child;i;){if(i===e){o=!0,e=u,t=r;break}if(i===t){o=!0,t=u,e=r;break}i=i.sibling}if(!o){for(i=r.child;i;){if(i===e){o=!0,e=r,t=u;break}if(i===t){o=!0,t=r,e=u;break}i=i.sibling}if(!o)throw Error(q(189))}}if(e.alternate!==t)throw Error(q(190))}if(e.tag!==3)throw Error(q(188));return e.stateNode.current===e?l:n}function aa(l){if(l=xh(l),!l)return null;for(var n=l;;){if(n.tag===5||n.tag===6)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===l)break;for(;!n.sibling;){if(!n.return||n.return===l)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function Fu(l,n){for(var e=l.alternate;n!==null;){if(n===l||n===e)return!0;n=n.return}return!1}var sa,Mt,ca,da,l9=!1,B3=[],Dl=null,$l=null,jl=null,ve=new Map,ye=new Map,x5=[],Lu="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function n9(l,n,e,t,u){return{blockedOn:l,domEventName:n,eventSystemFlags:e|16,nativeEvent:u,targetContainers:[t]}}function Du(l,n){switch(l){case"focusin":case"focusout":Dl=null;break;case"dragenter":case"dragleave":$l=null;break;case"mouseover":case"mouseout":jl=null;break;case"pointerover":case"pointerout":ve.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":ye.delete(n.pointerId)}}function T5(l,n,e,t,u,r){return l===null||l.nativeEvent!==r?(l=n9(n,e,t,u,r),n!==null&&(n=Ye(n),n!==null&&Mt(n)),l):(l.eventSystemFlags|=t,n=l.targetContainers,u!==null&&n.indexOf(u)===-1&&n.push(u),l)}function Th(l,n,e,t,u){switch(n){case"focusin":return Dl=T5(Dl,l,n,e,t,u),!0;case"dragenter":return $l=T5($l,l,n,e,t,u),!0;case"mouseover":return jl=T5(jl,l,n,e,t,u),!0;case"pointerover":var r=u.pointerId;return ve.set(r,T5(ve.get(r)||null,l,n,e,t,u)),!0;case"gotpointercapture":return r=u.pointerId,ye.set(r,T5(ye.get(r)||null,l,n,e,t,u)),!0}return!1}function Eh(l){var n=xn(l.target);if(n!==null){var e=Hn(n);if(e!==null){if(n=e.tag,n===13){if(n=ia(e),n!==null){l.blockedOn=n,da(l.lanePriority,function(){B2.unstable_runWithPriority(l.priority,function(){ca(e)})});return}}else if(n===3&&e.stateNode.hydrate){l.blockedOn=e.tag===3?e.stateNode.containerInfo:null;return}}}l.blockedOn=null}function W1(l){if(l.blockedOn!==null)return!1;for(var n=l.targetContainers;0<n.length;){var e=$t(l.domEventName,l.eventSystemFlags,n[0],l.nativeEvent);if(e!==null)return n=Ye(e),n!==null&&Mt(n),l.blockedOn=e,!1;n.shift()}return!0}function $u(l,n,e){W1(l)&&e.delete(n)}function Ch(){for(l9=!1;0<B3.length;){var l=B3[0];if(l.blockedOn!==null){l=Ye(l.blockedOn),l!==null&&sa(l);break}for(var n=l.targetContainers;0<n.length;){var e=$t(l.domEventName,l.eventSystemFlags,n[0],l.nativeEvent);if(e!==null){l.blockedOn=e;break}n.shift()}l.blockedOn===null&&B3.shift()}Dl!==null&&W1(Dl)&&(Dl=null),$l!==null&&W1($l)&&($l=null),jl!==null&&W1(jl)&&(jl=null),ve.forEach($u),ye.forEach($u)}function E5(l,n){l.blockedOn===n&&(l.blockedOn=null,l9||(l9=!0,B2.unstable_scheduleCallback(B2.unstable_NormalPriority,Ch)))}function fa(l){function n(u){return E5(u,l)}if(0<B3.length){E5(B3[0],l);for(var e=1;e<B3.length;e++){var t=B3[e];t.blockedOn===l&&(t.blockedOn=null)}}for(Dl!==null&&E5(Dl,l),$l!==null&&E5($l,l),jl!==null&&E5(jl,l),ve.forEach(n),ye.forEach(n),e=0;e<x5.length;e++)t=x5[e],t.blockedOn===l&&(t.blockedOn=null);for(;0<x5.length&&(e=x5[0],e.blockedOn===null);)Eh(e),e.blockedOn===null&&x5.shift()}function k1(l,n){var e={};return e[l.toLowerCase()]=n.toLowerCase(),e["Webkit"+l]="webkit"+n,e["Moz"+l]="moz"+n,e}var r4={animationend:k1("Animation","AnimationEnd"),animationiteration:k1("Animation","AnimationIteration"),animationstart:k1("Animation","AnimationStart"),transitionend:k1("Transition","TransitionEnd")},u8={},ha={};ml&&(ha=document.createElement("div").style,"AnimationEvent"in window||(delete r4.animationend.animation,delete r4.animationiteration.animation,delete r4.animationstart.animation),"TransitionEvent"in window||delete r4.transitionend.transition);function J0(l){if(u8[l])return u8[l];if(!r4[l])return l;var n=r4[l],e;for(e in n)if(n.hasOwnProperty(e)&&e in ha)return u8[l]=n[e];return l}var pa=J0("animationend"),ga=J0("animationiteration"),ma=J0("animationstart"),va=J0("transitionend"),ya=new Map,Ft=new Map,bh=["abort","abort",pa,"animationEnd",ga,"animationIteration",ma,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",va,"transitionEnd","waiting","waiting"];function Lt(l,n){for(var e=0;e<l.length;e+=2){var t=l[e],u=l[e+1];u="on"+(u[0].toUpperCase()+u.slice(1)),Ft.set(t,n),ya.set(t,u),Bn(u,[t])}}var Oh=B2.unstable_now;Oh();var E2=8;function n4(l){if((1&l)!==0)return E2=15,1;if((2&l)!==0)return E2=14,2;if((4&l)!==0)return E2=13,4;var n=24&l;return n!==0?(E2=12,n):(l&32)!==0?(E2=11,32):(n=192&l,n!==0?(E2=10,n):(l&256)!==0?(E2=9,256):(n=3584&l,n!==0?(E2=8,n):(l&4096)!==0?(E2=7,4096):(n=4186112&l,n!==0?(E2=6,n):(n=62914560&l,n!==0?(E2=5,n):l&67108864?(E2=4,67108864):(l&134217728)!==0?(E2=3,134217728):(n=805306368&l,n!==0?(E2=2,n):(1073741824&l)!==0?(E2=1,1073741824):(E2=8,l))))))}function kh(l){switch(l){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Ph(l){switch(l){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(q(358,l))}}function we(l,n){var e=l.pendingLanes;if(e===0)return E2=0;var t=0,u=0,r=l.expiredLanes,o=l.suspendedLanes,i=l.pingedLanes;if(r!==0)t=r,u=E2=15;else if(r=e&134217727,r!==0){var a=r&~o;a!==0?(t=n4(a),u=E2):(i&=r,i!==0&&(t=n4(i),u=E2))}else r=e&~o,r!==0?(t=n4(r),u=E2):i!==0&&(t=n4(i),u=E2);if(t===0)return 0;if(t=31-Kl(t),t=e&((0>t?0:1<<t)<<1)-1,n!==0&&n!==t&&(n&o)===0){if(n4(n),u<=E2)return n;E2=u}if(n=l.entangledLanes,n!==0)for(l=l.entanglements,n&=t;0<n;)e=31-Kl(n),u=1<<e,t|=l[e],n&=~u;return t}function wa(l){return l=l.pendingLanes&-1073741825,l!==0?l:l&1073741824?1073741824:0}function v0(l,n){switch(l){case 15:return 1;case 14:return 2;case 12:return l=e4(24&~n),l===0?v0(10,n):l;case 10:return l=e4(192&~n),l===0?v0(8,n):l;case 8:return l=e4(3584&~n),l===0&&(l=e4(4186112&~n),l===0&&(l=512)),l;case 2:return n=e4(805306368&~n),n===0&&(n=268435456),n}throw Error(q(358,l))}function e4(l){return l&-l}function r8(l){for(var n=[],e=0;31>e;e++)n.push(l);return n}function Z0(l,n,e){l.pendingLanes|=n;var t=n-1;l.suspendedLanes&=t,l.pingedLanes&=t,l=l.eventTimes,n=31-Kl(n),l[n]=e}var Kl=Math.clz32?Math.clz32:Rh,Ah=Math.log,_h=Math.LN2;function Rh(l){return l===0?32:31-(Ah(l)/_h|0)|0}var Ih=B2.unstable_UserBlockingPriority,Nh=B2.unstable_runWithPriority,G1=!0;function Mh(l,n,e,t){Sn||It();var u=Dt,r=Sn;Sn=!0;try{ra(u,l,n,e,t)}finally{(Sn=r)||Nt()}}function Fh(l,n,e,t){Nh(Ih,Dt.bind(null,l,n,e,t))}function Dt(l,n,e,t){if(G1){var u;if((u=(n&4)===0)&&0<B3.length&&-1<Lu.indexOf(l))l=n9(null,l,n,e,t),B3.push(l);else{var r=$t(l,n,e,t);if(r===null)u&&Du(l,t);else{if(u){if(-1<Lu.indexOf(l)){l=n9(r,l,n,e,t),B3.push(l);return}if(Th(r,l,n,e,t))return;Du(l,t)}Ia(l,n,t,null,e)}}}}function $t(l,n,e,t){var u=_t(t);if(u=xn(u),u!==null){var r=Hn(u);if(r===null)u=null;else{var o=r.tag;if(o===13){if(u=ia(r),u!==null)return u;u=null}else if(o===3){if(r.stateNode.hydrate)return r.tag===3?r.stateNode.containerInfo:null;u=null}else r!==u&&(u=null)}}return Ia(l,n,t,u,e),null}var Nl=null,jt=null,K1=null;function Sa(){if(K1)return K1;var l,n=jt,e=n.length,t,u="value"in Nl?Nl.value:Nl.textContent,r=u.length;for(l=0;l<e&&n[l]===u[l];l++);var o=e-l;for(t=1;t<=o&&n[e-t]===u[r-t];t++);return K1=u.slice(l,1<t?1-t:void 0)}function q1(l){var n=l.keyCode;return"charCode"in l?(l=l.charCode,l===0&&n===13&&(l=13)):l=n,l===10&&(l=13),32<=l||l===13?l:0}function P1(){return!0}function ju(){return!1}function p3(l){function n(e,t,u,r,o){this._reactName=e,this._targetInst=u,this.type=t,this.nativeEvent=r,this.target=o,this.currentTarget=null;for(var i in l)l.hasOwnProperty(i)&&(e=l[i],this[i]=e?e(r):r[i]);return this.isDefaultPrevented=(r.defaultPrevented!=null?r.defaultPrevented:r.returnValue===!1)?P1:ju,this.isPropagationStopped=ju,this}return P2(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():typeof e.returnValue!="unknown"&&(e.returnValue=!1),this.isDefaultPrevented=P1)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():typeof e.cancelBubble!="unknown"&&(e.cancelBubble=!0),this.isPropagationStopped=P1)},persist:function(){},isPersistent:P1}),n}var t5={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(l){return l.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Bt=p3(t5),Qe=P2({},t5,{view:0,detail:0}),Lh=p3(Qe),o8,i8,C5,l6=P2({},Qe,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ut,button:0,buttons:0,relatedTarget:function(l){return l.relatedTarget===void 0?l.fromElement===l.srcElement?l.toElement:l.fromElement:l.relatedTarget},movementX:function(l){return"movementX"in l?l.movementX:(l!==C5&&(C5&&l.type==="mousemove"?(o8=l.screenX-C5.screenX,i8=l.screenY-C5.screenY):i8=o8=0,C5=l),o8)},movementY:function(l){return"movementY"in l?l.movementY:i8}}),Bu=p3(l6),Dh=P2({},l6,{dataTransfer:0}),$h=p3(Dh),jh=P2({},Qe,{relatedTarget:0}),a8=p3(jh),Bh=P2({},t5,{animationName:0,elapsedTime:0,pseudoElement:0}),Uh=p3(Bh),Hh=P2({},t5,{clipboardData:function(l){return"clipboardData"in l?l.clipboardData:window.clipboardData}}),zh=p3(Hh),Vh=P2({},t5,{data:0}),Uu=p3(Vh),Wh={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Gh={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Kh={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qh(l){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(l):(l=Kh[l])?!!n[l]:!1}function Ut(){return qh}var Qh=P2({},Qe,{key:function(l){if(l.key){var n=Wh[l.key]||l.key;if(n!=="Unidentified")return n}return l.type==="keypress"?(l=q1(l),l===13?"Enter":String.fromCharCode(l)):l.type==="keydown"||l.type==="keyup"?Gh[l.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ut,charCode:function(l){return l.type==="keypress"?q1(l):0},keyCode:function(l){return l.type==="keydown"||l.type==="keyup"?l.keyCode:0},which:function(l){return l.type==="keypress"?q1(l):l.type==="keydown"||l.type==="keyup"?l.keyCode:0}}),Yh=p3(Qh),Xh=P2({},l6,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Hu=p3(Xh),Jh=P2({},Qe,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ut}),Zh=p3(Jh),lp=P2({},t5,{propertyName:0,elapsedTime:0,pseudoElement:0}),np=p3(lp),ep=P2({},l6,{deltaX:function(l){return"deltaX"in l?l.deltaX:"wheelDeltaX"in l?-l.wheelDeltaX:0},deltaY:function(l){return"deltaY"in l?l.deltaY:"wheelDeltaY"in l?-l.wheelDeltaY:"wheelDelta"in l?-l.wheelDelta:0},deltaZ:0,deltaMode:0}),tp=p3(ep),up=[9,13,27,32],Ht=ml&&"CompositionEvent"in window,Q5=null;ml&&"documentMode"in document&&(Q5=document.documentMode);var rp=ml&&"TextEvent"in window&&!Q5,xa=ml&&(!Ht||Q5&&8<Q5&&11>=Q5),zu=String.fromCharCode(32),Vu=!1;function Ta(l,n){switch(l){case"keyup":return up.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ea(l){return l=l.detail,typeof l=="object"&&"data"in l?l.data:null}var o4=!1;function op(l,n){switch(l){case"compositionend":return Ea(n);case"keypress":return n.which!==32?null:(Vu=!0,zu);case"textInput":return l=n.data,l===zu&&Vu?null:l;default:return null}}function ip(l,n){if(o4)return l==="compositionend"||!Ht&&Ta(l,n)?(l=Sa(),K1=jt=Nl=null,o4=!1,l):null;switch(l){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return xa&&n.locale!=="ko"?null:n.data;default:return null}}var ap={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wu(l){var n=l&&l.nodeName&&l.nodeName.toLowerCase();return n==="input"?!!ap[l.type]:n==="textarea"}function Ca(l,n,e,t){ta(t),n=y0(n,"onChange"),0<n.length&&(e=new Bt("onChange","change",null,e,t),l.push({event:e,listeners:n}))}var Y5=null,Se=null;function sp(l){Aa(l,0)}function n6(l){var n=a4(l);if(Yi(n))return l}function cp(l,n){if(l==="change")return n}var ba=!1;if(ml){var s8;if(ml){var c8="oninput"in document;if(!c8){var Gu=document.createElement("div");Gu.setAttribute("oninput","return;"),c8=typeof Gu.oninput=="function"}s8=c8}else s8=!1;ba=s8&&(!document.documentMode||9<document.documentMode)}function Ku(){Y5&&(Y5.detachEvent("onpropertychange",Oa),Se=Y5=null)}function Oa(l){if(l.propertyName==="value"&&n6(Se)){var n=[];if(Ca(n,Se,l,_t(l)),l=sp,Sn)l(n);else{Sn=!0;try{Rt(l,n)}finally{Sn=!1,Nt()}}}}function dp(l,n,e){l==="focusin"?(Ku(),Y5=n,Se=e,Y5.attachEvent("onpropertychange",Oa)):l==="focusout"&&Ku()}function fp(l){if(l==="selectionchange"||l==="keyup"||l==="keydown")return n6(Se)}function hp(l,n){if(l==="click")return n6(n)}function pp(l,n){if(l==="input"||l==="change")return n6(n)}function gp(l,n){return l===n&&(l!==0||1/l===1/n)||l!==l&&n!==n}var S3=typeof Object.is=="function"?Object.is:gp,mp=Object.prototype.hasOwnProperty;function xe(l,n){if(S3(l,n))return!0;if(typeof l!="object"||l===null||typeof n!="object"||n===null)return!1;var e=Object.keys(l),t=Object.keys(n);if(e.length!==t.length)return!1;for(t=0;t<e.length;t++)if(!mp.call(n,e[t])||!S3(l[e[t]],n[e[t]]))return!1;return!0}function qu(l){for(;l&&l.firstChild;)l=l.firstChild;return l}function Qu(l,n){var e=qu(l);l=0;for(var t;e;){if(e.nodeType===3){if(t=l+e.textContent.length,l<=n&&t>=n)return{node:e,offset:n-l};l=t}l:{for(;e;){if(e.nextSibling){e=e.nextSibling;break l}e=e.parentNode}e=void 0}e=qu(e)}}function ka(l,n){return l&&n?l===n?!0:l&&l.nodeType===3?!1:n&&n.nodeType===3?ka(l,n.parentNode):"contains"in l?l.contains(n):l.compareDocumentPosition?!!(l.compareDocumentPosition(n)&16):!1:!1}function Yu(){for(var l=window,n=p0();n instanceof l.HTMLIFrameElement;){try{var e=typeof n.contentWindow.location.href=="string"}catch{e=!1}if(e)l=n.contentWindow;else break;n=p0(l.document)}return n}function e9(l){var n=l&&l.nodeName&&l.nodeName.toLowerCase();return n&&(n==="input"&&(l.type==="text"||l.type==="search"||l.type==="tel"||l.type==="url"||l.type==="password")||n==="textarea"||l.contentEditable==="true")}var vp=ml&&"documentMode"in document&&11>=document.documentMode,i4=null,t9=null,X5=null,u9=!1;function Xu(l,n,e){var t=e.window===e?e.document:e.nodeType===9?e:e.ownerDocument;u9||i4==null||i4!==p0(t)||(t=i4,"selectionStart"in t&&e9(t)?t={start:t.selectionStart,end:t.selectionEnd}:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection(),t={anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}),X5&&xe(X5,t)||(X5=t,t=y0(t9,"onSelect"),0<t.length&&(n=new Bt("onSelect","select",null,n,e),l.push({event:n,listeners:t}),n.target=i4)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0);Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1);Lt(bh,2);for(var Ju="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),d8=0;d8<Ju.length;d8++)Ft.set(Ju[d8],0);k4("onMouseEnter",["mouseout","mouseover"]);k4("onMouseLeave",["mouseout","mouseover"]);k4("onPointerEnter",["pointerout","pointerover"]);k4("onPointerLeave",["pointerout","pointerover"]);Bn("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Bn("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Bn("onBeforeInput",["compositionend","keypress","textInput","paste"]);Bn("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Bn("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Bn("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var $5="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Pa=new Set("cancel close invalid load scroll toggle".split(" ").concat($5));function Zu(l,n,e){var t=l.type||"unknown-event";l.currentTarget=e,Sh(t,n,void 0,l),l.currentTarget=null}function Aa(l,n){n=(n&4)!==0;for(var e=0;e<l.length;e++){var t=l[e],u=t.event;t=t.listeners;l:{var r=void 0;if(n)for(var o=t.length-1;0<=o;o--){var i=t[o],a=i.instance,s=i.currentTarget;if(i=i.listener,a!==r&&u.isPropagationStopped())break l;Zu(u,i,s),r=a}else for(o=0;o<t.length;o++){if(i=t[o],a=i.instance,s=i.currentTarget,i=i.listener,a!==r&&u.isPropagationStopped())break l;Zu(u,i,s),r=a}}}if(m0)throw l=Z8,m0=!1,Z8=null,l}function C2(l,n){var e=Ma(n),t=l+"__bubble";e.has(t)||(Ra(n,l,2,!1),e.add(t))}var lr="_reactListening"+Math.random().toString(36).slice(2);function _a(l){l[lr]||(l[lr]=!0,Ki.forEach(function(n){Pa.has(n)||nr(n,!1,l,null),nr(n,!0,l,null)}))}function nr(l,n,e,t){var u=4<arguments.length&&arguments[4]!==void 0?arguments[4]:0,r=e;if(l==="selectionchange"&&e.nodeType!==9&&(r=e.ownerDocument),t!==null&&!n&&Pa.has(l)){if(l!=="scroll")return;u|=2,r=t}var o=Ma(r),i=l+"__"+(n?"capture":"bubble");o.has(i)||(n&&(u|=4),Ra(r,l,u,n),o.add(i))}function Ra(l,n,e,t){var u=Ft.get(n);switch(u===void 0?2:u){case 0:u=Mh;break;case 1:u=Fh;break;default:u=Dt}e=u.bind(null,n,e,l),u=void 0,!J8||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(u=!0),t?u!==void 0?l.addEventListener(n,e,{capture:!0,passive:u}):l.addEventListener(n,e,!0):u!==void 0?l.addEventListener(n,e,{passive:u}):l.addEventListener(n,e,!1)}function Ia(l,n,e,t,u){var r=t;if((n&1)===0&&(n&2)===0&&t!==null)l:for(;;){if(t===null)return;var o=t.tag;if(o===3||o===4){var i=t.stateNode.containerInfo;if(i===u||i.nodeType===8&&i.parentNode===u)break;if(o===4)for(o=t.return;o!==null;){var a=o.tag;if((a===3||a===4)&&(a=o.stateNode.containerInfo,a===u||a.nodeType===8&&a.parentNode===u))return;o=o.return}for(;i!==null;){if(o=xn(i),o===null)return;if(a=o.tag,a===5||a===6){t=r=o;continue l}i=i.parentNode}}t=t.return}mh(function(){var s=r,c=_t(e),f=[];l:{var d=ya.get(l);if(d!==void 0){var h=Bt,p=l;switch(l){case"keypress":if(q1(e)===0)break l;case"keydown":case"keyup":h=Yh;break;case"focusin":p="focus",h=a8;break;case"focusout":p="blur",h=a8;break;case"beforeblur":case"afterblur":h=a8;break;case"click":if(e.button===2)break l;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":h=Bu;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":h=$h;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":h=Zh;break;case pa:case ga:case ma:h=Uh;break;case va:h=np;break;case"scroll":h=Lh;break;case"wheel":h=tp;break;case"copy":case"cut":case"paste":h=zh;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":h=Hu}var y=(n&4)!==0,m=!y&&l==="scroll",g=y?d!==null?d+"Capture":null:d;y=[];for(var v=s,w;v!==null;){w=v;var S=w.stateNode;if(w.tag===5&&S!==null&&(w=S,g!==null&&(S=me(v,g),S!=null&&y.push(Te(v,S,w)))),m)break;v=v.return}0<y.length&&(d=new h(d,p,null,e,c),f.push({event:d,listeners:y}))}}if((n&7)===0){l:{if(d=l==="mouseover"||l==="pointerover",h=l==="mouseout"||l==="pointerout",d&&(n&16)===0&&(p=e.relatedTarget||e.fromElement)&&(xn(p)||p[u5]))break l;if((h||d)&&(d=c.window===c?c:(d=c.ownerDocument)?d.defaultView||d.parentWindow:window,h?(p=e.relatedTarget||e.toElement,h=s,p=p?xn(p):null,p!==null&&(m=Hn(p),p!==m||p.tag!==5&&p.tag!==6)&&(p=null)):(h=null,p=s),h!==p)){if(y=Bu,S="onMouseLeave",g="onMouseEnter",v="mouse",(l==="pointerout"||l==="pointerover")&&(y=Hu,S="onPointerLeave",g="onPointerEnter",v="pointer"),m=h==null?d:a4(h),w=p==null?d:a4(p),d=new y(S,v+"leave",h,e,c),d.target=m,d.relatedTarget=w,S=null,xn(c)===s&&(y=new y(g,v+"enter",p,e,c),y.target=w,y.relatedTarget=m,S=y),m=S,h&&p)n:{for(y=h,g=p,v=0,w=y;w;w=Zn(w))v++;for(w=0,S=g;S;S=Zn(S))w++;for(;0<v-w;)y=Zn(y),v--;for(;0<w-v;)g=Zn(g),w--;for(;v--;){if(y===g||g!==null&&y===g.alternate)break n;y=Zn(y),g=Zn(g)}y=null}else y=null;h!==null&&er(f,d,h,y,!1),p!==null&&m!==null&&er(f,m,p,y,!0)}}l:{if(d=s?a4(s):window,h=d.nodeName&&d.nodeName.toLowerCase(),h==="select"||h==="input"&&d.type==="file")var I=cp;else if(Wu(d))if(ba)I=pp;else{I=fp;var C=dp}else(h=d.nodeName)&&h.toLowerCase()==="input"&&(d.type==="checkbox"||d.type==="radio")&&(I=hp);if(I&&(I=I(l,s))){Ca(f,I,e,c);break l}C&&C(l,d,s),l==="focusout"&&(C=d._wrapperState)&&C.controlled&&d.type==="number"&&V8(d,"number",d.value)}switch(C=s?a4(s):window,l){case"focusin":(Wu(C)||C.contentEditable==="true")&&(i4=C,t9=s,X5=null);break;case"focusout":X5=t9=i4=null;break;case"mousedown":u9=!0;break;case"contextmenu":case"mouseup":case"dragend":u9=!1,Xu(f,e,c);break;case"selectionchange":if(vp)break;case"keydown":case"keyup":Xu(f,e,c)}var D;if(Ht)l:{switch(l){case"compositionstart":var F="onCompositionStart";break l;case"compositionend":F="onCompositionEnd";break l;case"compositionupdate":F="onCompositionUpdate";break l}F=void 0}else o4?Ta(l,e)&&(F="onCompositionEnd"):l==="keydown"&&e.keyCode===229&&(F="onCompositionStart");F&&(xa&&e.locale!=="ko"&&(o4||F!=="onCompositionStart"?F==="onCompositionEnd"&&o4&&(D=Sa()):(Nl=c,jt="value"in Nl?Nl.value:Nl.textContent,o4=!0)),C=y0(s,F),0<C.length&&(F=new Uu(F,l,null,e,c),f.push({event:F,listeners:C}),D?F.data=D:(D=Ea(e),D!==null&&(F.data=D)))),(D=rp?op(l,e):ip(l,e))&&(s=y0(s,"onBeforeInput"),0<s.length&&(c=new Uu("onBeforeInput","beforeinput",null,e,c),f.push({event:c,listeners:s}),c.data=D))}Aa(f,n)})}function Te(l,n,e){return{instance:l,listener:n,currentTarget:e}}function y0(l,n){for(var e=n+"Capture",t=[];l!==null;){var u=l,r=u.stateNode;u.tag===5&&r!==null&&(u=r,r=me(l,e),r!=null&&t.unshift(Te(l,r,u)),r=me(l,n),r!=null&&t.push(Te(l,r,u))),l=l.return}return t}function Zn(l){if(l===null)return null;do l=l.return;while(l&&l.tag!==5);return l||null}function er(l,n,e,t,u){for(var r=n._reactName,o=[];e!==null&&e!==t;){var i=e,a=i.alternate,s=i.stateNode;if(a!==null&&a===t)break;i.tag===5&&s!==null&&(i=s,u?(a=me(e,r),a!=null&&o.unshift(Te(e,a,i))):u||(a=me(e,r),a!=null&&o.push(Te(e,a,i)))),e=e.return}o.length!==0&&l.push({event:n,listeners:o})}function w0(){}var f8=null,h8=null;function Na(l,n){switch(l){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function r9(l,n){return l==="textarea"||l==="option"||l==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var tr=typeof setTimeout=="function"?setTimeout:void 0,yp=typeof clearTimeout=="function"?clearTimeout:void 0;function zt(l){l.nodeType===1?l.textContent="":l.nodeType===9&&(l=l.body,l!=null&&(l.textContent=""))}function v4(l){for(;l!=null;l=l.nextSibling){var n=l.nodeType;if(n===1||n===3)break}return l}function ur(l){l=l.previousSibling;for(var n=0;l;){if(l.nodeType===8){var e=l.data;if(e==="$"||e==="$!"||e==="$?"){if(n===0)return l;n--}else e==="/$"&&n++}l=l.previousSibling}return null}var p8=0;function wp(l){return{$$typeof:Pt,toString:l,valueOf:l}}var e6=Math.random().toString(36).slice(2),Ml="__reactFiber$"+e6,S0="__reactProps$"+e6,u5="__reactContainer$"+e6,rr="__reactEvents$"+e6;function xn(l){var n=l[Ml];if(n)return n;for(var e=l.parentNode;e;){if(n=e[u5]||e[Ml]){if(e=n.alternate,n.child!==null||e!==null&&e.child!==null)for(l=ur(l);l!==null;){if(e=l[Ml])return e;l=ur(l)}return n}l=e,e=l.parentNode}return null}function Ye(l){return l=l[Ml]||l[u5],!l||l.tag!==5&&l.tag!==6&&l.tag!==13&&l.tag!==3?null:l}function a4(l){if(l.tag===5||l.tag===6)return l.stateNode;throw Error(q(33))}function t6(l){return l[S0]||null}function Ma(l){var n=l[rr];return n===void 0&&(n=l[rr]=new Set),n}var o9=[],s4=-1;function an(l){return{current:l}}function k2(l){0>s4||(l.current=o9[s4],o9[s4]=null,s4--)}function R2(l,n){s4++,o9[s4]=l.current,l.current=n}var ql={},Q2=an(ql),u3=an(!1),In=ql;function P4(l,n){var e=l.type.contextTypes;if(!e)return ql;var t=l.stateNode;if(t&&t.__reactInternalMemoizedUnmaskedChildContext===n)return t.__reactInternalMemoizedMaskedChildContext;var u={},r;for(r in e)u[r]=n[r];return t&&(l=l.stateNode,l.__reactInternalMemoizedUnmaskedChildContext=n,l.__reactInternalMemoizedMaskedChildContext=u),u}function r3(l){return l=l.childContextTypes,l!=null}function x0(){k2(u3),k2(Q2)}function or(l,n,e){if(Q2.current!==ql)throw Error(q(168));R2(Q2,n),R2(u3,e)}function Fa(l,n,e){var t=l.stateNode;if(l=n.childContextTypes,typeof t.getChildContext!="function")return e;t=t.getChildContext();for(var u in t)if(!(u in l))throw Error(q(108,h4(n)||"Unknown",u));return P2({},e,t)}function Q1(l){return l=(l=l.stateNode)&&l.__reactInternalMemoizedMergedChildContext||ql,In=Q2.current,R2(Q2,l),R2(u3,u3.current),!0}function ir(l,n,e){var t=l.stateNode;if(!t)throw Error(q(169));e?(l=Fa(l,n,In),t.__reactInternalMemoizedMergedChildContext=l,k2(u3),k2(Q2),R2(Q2,l)):k2(u3),R2(u3,e)}var Vt=null,An=null,Sp=B2.unstable_runWithPriority,Wt=B2.unstable_scheduleCallback,i9=B2.unstable_cancelCallback,xp=B2.unstable_shouldYield,ar=B2.unstable_requestPaint,a9=B2.unstable_now,Tp=B2.unstable_getCurrentPriorityLevel,u6=B2.unstable_ImmediatePriority,La=B2.unstable_UserBlockingPriority,Da=B2.unstable_NormalPriority,$a=B2.unstable_LowPriority,ja=B2.unstable_IdlePriority,g8={},Ep=ar!==void 0?ar:function(){},tl=null,Y1=null,m8=!1,sr=a9(),K2=1e4>sr?a9:function(){return a9()-sr};function A4(){switch(Tp()){case u6:return 99;case La:return 98;case Da:return 97;case $a:return 96;case ja:return 95;default:throw Error(q(332))}}function Ba(l){switch(l){case 99:return u6;case 98:return La;case 97:return Da;case 96:return $a;case 95:return ja;default:throw Error(q(332))}}function Nn(l,n){return l=Ba(l),Sp(l,n)}function Ee(l,n,e){return l=Ba(l),Wt(l,n,e)}function Y3(){if(Y1!==null){var l=Y1;Y1=null,i9(l)}Ua()}function Ua(){if(!m8&&tl!==null){m8=!0;var l=0;try{var n=tl;Nn(99,function(){for(;l<n.length;l++){var e=n[l];do e=e(!0);while(e!==null)}}),tl=null}catch(e){throw tl!==null&&(tl=tl.slice(l+1)),Wt(u6,Y3),e}finally{m8=!1}}}var Cp=Un.ReactCurrentBatchConfig;function N3(l,n){if(l&&l.defaultProps){n=P2({},n),l=l.defaultProps;for(var e in l)n[e]===void 0&&(n[e]=l[e]);return n}return n}var T0=an(null),E0=null,c4=null,C0=null;function Gt(){C0=c4=E0=null}function Kt(l){var n=T0.current;k2(T0),l.type._context._currentValue=n}function Ha(l,n){for(;l!==null;){var e=l.alternate;if((l.childLanes&n)===n){if(e===null||(e.childLanes&n)===n)break;e.childLanes|=n}else l.childLanes|=n,e!==null&&(e.childLanes|=n);l=l.return}}function y4(l,n){E0=l,C0=c4=null,l=l.dependencies,l!==null&&l.firstContext!==null&&((l.lanes&n)!==0&&(M3=!0),l.firstContext=null)}function b3(l,n){if(C0!==l&&n!==!1&&n!==0)if((typeof n!="number"||n===1073741823)&&(C0=l,n=1073741823),n={context:l,observedBits:n,next:null},c4===null){if(E0===null)throw Error(q(308));c4=n,E0.dependencies={lanes:0,firstContext:n,responders:null}}else c4=c4.next=n;return l._currentValue}var Al=!1;function qt(l){l.updateQueue={baseState:l.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function za(l,n){l=l.updateQueue,n.updateQueue===l&&(n.updateQueue={baseState:l.baseState,firstBaseUpdate:l.firstBaseUpdate,lastBaseUpdate:l.lastBaseUpdate,shared:l.shared,effects:l.effects})}function Bl(l,n){return{eventTime:l,lane:n,tag:0,payload:null,callback:null,next:null}}function Ul(l,n){if(l=l.updateQueue,l!==null){l=l.shared;var e=l.pending;e===null?n.next=n:(n.next=e.next,e.next=n),l.pending=n}}function cr(l,n){var e=l.updateQueue,t=l.alternate;if(t!==null&&(t=t.updateQueue,e===t)){var u=null,r=null;if(e=e.firstBaseUpdate,e!==null){do{var o={eventTime:e.eventTime,lane:e.lane,tag:e.tag,payload:e.payload,callback:e.callback,next:null};r===null?u=r=o:r=r.next=o,e=e.next}while(e!==null);r===null?u=r=n:r=r.next=n}else u=r=n;e={baseState:t.baseState,firstBaseUpdate:u,lastBaseUpdate:r,shared:t.shared,effects:t.effects},l.updateQueue=e;return}l=e.lastBaseUpdate,l===null?e.firstBaseUpdate=n:l.next=n,e.lastBaseUpdate=n}function Ce(l,n,e,t){var u=l.updateQueue;Al=!1;var r=u.firstBaseUpdate,o=u.lastBaseUpdate,i=u.shared.pending;if(i!==null){u.shared.pending=null;var a=i,s=a.next;a.next=null,o===null?r=s:o.next=s,o=a;var c=l.alternate;if(c!==null){c=c.updateQueue;var f=c.lastBaseUpdate;f!==o&&(f===null?c.firstBaseUpdate=s:f.next=s,c.lastBaseUpdate=a)}}if(r!==null){f=u.baseState,o=0,c=s=a=null;do{i=r.lane;var d=r.eventTime;if((t&i)===i){c!==null&&(c=c.next={eventTime:d,lane:0,tag:r.tag,payload:r.payload,callback:r.callback,next:null});l:{var h=l,p=r;switch(i=n,d=e,p.tag){case 1:if(h=p.payload,typeof h=="function"){f=h.call(d,f,i);break l}f=h;break l;case 3:h.flags=h.flags&-4097|64;case 0:if(h=p.payload,i=typeof h=="function"?h.call(d,f,i):h,i==null)break l;f=P2({},f,i);break l;case 2:Al=!0}}r.callback!==null&&(l.flags|=32,i=u.effects,i===null?u.effects=[r]:i.push(r))}else d={eventTime:d,lane:i,tag:r.tag,payload:r.payload,callback:r.callback,next:null},c===null?(s=c=d,a=f):c=c.next=d,o|=i;if(r=r.next,r===null){if(i=u.shared.pending,i===null)break;r=i.next,i.next=null,u.lastBaseUpdate=i,u.shared.pending=null}}while(1);c===null&&(a=f),u.baseState=a,u.firstBaseUpdate=s,u.lastBaseUpdate=c,Je|=o,l.lanes=o,l.memoizedState=f}}function dr(l,n,e){if(l=n.effects,n.effects=null,l!==null)for(n=0;n<l.length;n++){var t=l[n],u=t.callback;if(u!==null){if(t.callback=null,t=e,typeof u!="function")throw Error(q(191,u));u.call(t)}}}var Va=new Q0.Component().refs;function b0(l,n,e,t){n=l.memoizedState,e=e(t,n),e=e==null?n:P2({},n,e),l.memoizedState=e,l.lanes===0&&(l.updateQueue.baseState=e)}var r6={isMounted:function(l){return(l=l._reactInternals)?Hn(l)===l:!1},enqueueSetState:function(l,n,e){l=l._reactInternals;var t=c3(),u=Hl(l),r=Bl(t,u);r.payload=n,e!=null&&(r.callback=e),Ul(l,r),zl(l,u,t)},enqueueReplaceState:function(l,n,e){l=l._reactInternals;var t=c3(),u=Hl(l),r=Bl(t,u);r.tag=1,r.payload=n,e!=null&&(r.callback=e),Ul(l,r),zl(l,u,t)},enqueueForceUpdate:function(l,n){l=l._reactInternals;var e=c3(),t=Hl(l),u=Bl(e,t);u.tag=2,n!=null&&(u.callback=n),Ul(l,u),zl(l,t,e)}};function fr(l,n,e,t,u,r,o){return l=l.stateNode,typeof l.shouldComponentUpdate=="function"?l.shouldComponentUpdate(t,r,o):n.prototype&&n.prototype.isPureReactComponent?!xe(e,t)||!xe(u,r):!0}function Wa(l,n,e){var t=!1,u=ql,r=n.contextType;return typeof r=="object"&&r!==null?r=b3(r):(u=r3(n)?In:Q2.current,t=n.contextTypes,r=(t=t!=null)?P4(l,u):ql),n=new n(e,r),l.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=r6,l.stateNode=n,n._reactInternals=l,t&&(l=l.stateNode,l.__reactInternalMemoizedUnmaskedChildContext=u,l.__reactInternalMemoizedMaskedChildContext=r),n}function hr(l,n,e,t){l=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(e,t),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(e,t),n.state!==l&&r6.enqueueReplaceState(n,n.state,null)}function s9(l,n,e,t){var u=l.stateNode;u.props=e,u.state=l.memoizedState,u.refs=Va,qt(l);var r=n.contextType;typeof r=="object"&&r!==null?u.context=b3(r):(r=r3(n)?In:Q2.current,u.context=P4(l,r)),Ce(l,e,u,t),u.state=l.memoizedState,r=n.getDerivedStateFromProps,typeof r=="function"&&(b0(l,n,r,e),u.state=l.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof u.getSnapshotBeforeUpdate=="function"||typeof u.UNSAFE_componentWillMount!="function"&&typeof u.componentWillMount!="function"||(n=u.state,typeof u.componentWillMount=="function"&&u.componentWillMount(),typeof u.UNSAFE_componentWillMount=="function"&&u.UNSAFE_componentWillMount(),n!==u.state&&r6.enqueueReplaceState(u,u.state,null),Ce(l,e,u,t),u.state=l.memoizedState),typeof u.componentDidMount=="function"&&(l.flags|=4)}var A1=Array.isArray;function b5(l,n,e){if(l=e.ref,l!==null&&typeof l!="function"&&typeof l!="object"){if(e._owner){if(e=e._owner,e){if(e.tag!==1)throw Error(q(309));var t=e.stateNode}if(!t)throw Error(q(147,l));var u=""+l;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===u?n.ref:(n=function(r){var o=t.refs;o===Va&&(o=t.refs={}),r===null?delete o[u]:o[u]=r},n._stringRef=u,n)}if(typeof l!="string")throw Error(q(284));if(!e._owner)throw Error(q(290,l))}return l}function _1(l,n){if(l.type!=="textarea")throw Error(q(31,Object.prototype.toString.call(n)==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function Ga(l){function n(m,g){if(l){var v=m.lastEffect;v!==null?(v.nextEffect=g,m.lastEffect=g):m.firstEffect=m.lastEffect=g,g.nextEffect=null,g.flags=8}}function e(m,g){if(!l)return null;for(;g!==null;)n(m,g),g=g.sibling;return null}function t(m,g){for(m=new Map;g!==null;)g.key!==null?m.set(g.key,g):m.set(g.index,g),g=g.sibling;return m}function u(m,g){return m=Yl(m,g),m.index=0,m.sibling=null,m}function r(m,g,v){return m.index=v,l?(v=m.alternate,v!==null?(v=v.index,v<g?(m.flags=2,g):v):(m.flags=2,g)):g}function o(m){return l&&m.alternate===null&&(m.flags=2),m}function i(m,g,v,w){return g===null||g.tag!==6?(g=x8(v,m.mode,w),g.return=m,g):(g=u(g,v),g.return=m,g)}function a(m,g,v,w){return g!==null&&g.elementType===v.type?(w=u(g,v.props),w.ref=b5(m,g,v),w.return=m,w):(w=l0(v.type,v.key,v.props,null,m.mode,w),w.ref=b5(m,g,v),w.return=m,w)}function s(m,g,v,w){return g===null||g.tag!==4||g.stateNode.containerInfo!==v.containerInfo||g.stateNode.implementation!==v.implementation?(g=T8(v,m.mode,w),g.return=m,g):(g=u(g,v.children||[]),g.return=m,g)}function c(m,g,v,w,S){return g===null||g.tag!==7?(g=T4(v,m.mode,w,S),g.return=m,g):(g=u(g,v),g.return=m,g)}function f(m,g,v){if(typeof g=="string"||typeof g=="number")return g=x8(""+g,m.mode,v),g.return=m,g;if(typeof g=="object"&&g!==null){switch(g.$$typeof){case L5:return v=l0(g.type,g.key,g.props,null,m.mode,v),v.ref=b5(m,null,g),v.return=m,v;case wn:return g=T8(g,m.mode,v),g.return=m,g}if(A1(g)||w5(g))return g=T4(g,m.mode,v,null),g.return=m,g;_1(m,g)}return null}function d(m,g,v,w){var S=g!==null?g.key:null;if(typeof v=="string"||typeof v=="number")return S!==null?null:i(m,g,""+v,w);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case L5:return v.key===S?v.type===_l?c(m,g,v.props.children,w,S):a(m,g,v,w):null;case wn:return v.key===S?s(m,g,v,w):null}if(A1(v)||w5(v))return S!==null?null:c(m,g,v,w,null);_1(m,v)}return null}function h(m,g,v,w,S){if(typeof w=="string"||typeof w=="number")return m=m.get(v)||null,i(g,m,""+w,S);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case L5:return m=m.get(w.key===null?v:w.key)||null,w.type===_l?c(g,m,w.props.children,S,w.key):a(g,m,w,S);case wn:return m=m.get(w.key===null?v:w.key)||null,s(g,m,w,S)}if(A1(w)||w5(w))return m=m.get(v)||null,c(g,m,w,S,null);_1(g,w)}return null}function p(m,g,v,w){for(var S=null,I=null,C=g,D=g=0,F=null;C!==null&&D<v.length;D++){C.index>D?(F=C,C=null):F=C.sibling;var j=d(m,C,v[D],w);if(j===null){C===null&&(C=F);break}l&&C&&j.alternate===null&&n(m,C),g=r(j,g,D),I===null?S=j:I.sibling=j,I=j,C=F}if(D===v.length)return e(m,C),S;if(C===null){for(;D<v.length;D++)C=f(m,v[D],w),C!==null&&(g=r(C,g,D),I===null?S=C:I.sibling=C,I=C);return S}for(C=t(m,C);D<v.length;D++)F=h(C,m,D,v[D],w),F!==null&&(l&&F.alternate!==null&&C.delete(F.key===null?D:F.key),g=r(F,g,D),I===null?S=F:I.sibling=F,I=F);return l&&C.forEach(function(K){return n(m,K)}),S}function y(m,g,v,w){var S=w5(v);if(typeof S!="function")throw Error(q(150));if(v=S.call(v),v==null)throw Error(q(151));for(var I=S=null,C=g,D=g=0,F=null,j=v.next();C!==null&&!j.done;D++,j=v.next()){C.index>D?(F=C,C=null):F=C.sibling;var K=d(m,C,j.value,w);if(K===null){C===null&&(C=F);break}l&&C&&K.alternate===null&&n(m,C),g=r(K,g,D),I===null?S=K:I.sibling=K,I=K,C=F}if(j.done)return e(m,C),S;if(C===null){for(;!j.done;D++,j=v.next())j=f(m,j.value,w),j!==null&&(g=r(j,g,D),I===null?S=j:I.sibling=j,I=j);return S}for(C=t(m,C);!j.done;D++,j=v.next())j=h(C,m,D,j.value,w),j!==null&&(l&&j.alternate!==null&&C.delete(j.key===null?D:j.key),g=r(j,g,D),I===null?S=j:I.sibling=j,I=j);return l&&C.forEach(function(X){return n(m,X)}),S}return function(m,g,v,w){var S=typeof v=="object"&&v!==null&&v.type===_l&&v.key===null;S&&(v=v.props.children);var I=typeof v=="object"&&v!==null;if(I)switch(v.$$typeof){case L5:l:{for(I=v.key,S=g;S!==null;){if(S.key===I){switch(S.tag){case 7:if(v.type===_l){e(m,S.sibling),g=u(S,v.props.children),g.return=m,m=g;break l}break;default:if(S.elementType===v.type){e(m,S.sibling),g=u(S,v.props),g.ref=b5(m,S,v),g.return=m,m=g;break l}}e(m,S);break}else n(m,S);S=S.sibling}v.type===_l?(g=T4(v.props.children,m.mode,w,v.key),g.return=m,m=g):(w=l0(v.type,v.key,v.props,null,m.mode,w),w.ref=b5(m,g,v),w.return=m,m=w)}return o(m);case wn:l:{for(S=v.key;g!==null;){if(g.key===S)if(g.tag===4&&g.stateNode.containerInfo===v.containerInfo&&g.stateNode.implementation===v.implementation){e(m,g.sibling),g=u(g,v.children||[]),g.return=m,m=g;break l}else{e(m,g);break}else n(m,g);g=g.sibling}g=T8(v,m.mode,w),g.return=m,m=g}return o(m)}if(typeof v=="string"||typeof v=="number")return v=""+v,g!==null&&g.tag===6?(e(m,g.sibling),g=u(g,v),g.return=m,m=g):(e(m,g),g=x8(v,m.mode,w),g.return=m,m=g),o(m);if(A1(v))return p(m,g,v,w);if(w5(v))return y(m,g,v,w);if(I&&_1(m,v),typeof v=="undefined"&&!S)switch(m.tag){case 1:case 22:case 0:case 11:case 15:throw Error(q(152,h4(m.type)||"Component"))}return e(m,g)}}var O0=Ga(!0),Ka=Ga(!1),Xe={},V3=an(Xe),be=an(Xe),Oe=an(Xe);function Tn(l){if(l===Xe)throw Error(q(174));return l}function c9(l,n){switch(R2(Oe,n),R2(be,l),R2(V3,Xe),l=n.nodeType,l){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:q8(null,"");break;default:l=l===8?n.parentNode:n,n=l.namespaceURI||null,l=l.tagName,n=q8(n,l)}k2(V3),R2(V3,n)}function _4(){k2(V3),k2(be),k2(Oe)}function pr(l){Tn(Oe.current);var n=Tn(V3.current),e=q8(n,l.type);n!==e&&(R2(be,l),R2(V3,e))}function Qt(l){be.current===l&&(k2(V3),k2(be))}var _2=an(0);function k0(l){for(var n=l;n!==null;){if(n.tag===13){var e=n.memoizedState;if(e!==null&&(e=e.dehydrated,e===null||e.data==="$?"||e.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if((n.flags&64)!==0)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===l)break;for(;n.sibling===null;){if(n.return===null||n.return===l)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var ol=null,Fl=null,W3=!1;function qa(l,n){var e=x3(5,null,null,0);e.elementType="DELETED",e.type="DELETED",e.stateNode=n,e.return=l,e.flags=8,l.lastEffect!==null?(l.lastEffect.nextEffect=e,l.lastEffect=e):l.firstEffect=l.lastEffect=e}function gr(l,n){switch(l.tag){case 5:var e=l.type;return n=n.nodeType!==1||e.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(l.stateNode=n,!0):!1;case 6:return n=l.pendingProps===""||n.nodeType!==3?null:n,n!==null?(l.stateNode=n,!0):!1;case 13:return!1;default:return!1}}function d9(l){if(W3){var n=Fl;if(n){var e=n;if(!gr(l,n)){if(n=v4(e.nextSibling),!n||!gr(l,n)){l.flags=l.flags&-1025|2,W3=!1,ol=l;return}qa(ol,e)}ol=l,Fl=v4(n.firstChild)}else l.flags=l.flags&-1025|2,W3=!1,ol=l}}function mr(l){for(l=l.return;l!==null&&l.tag!==5&&l.tag!==3&&l.tag!==13;)l=l.return;ol=l}function R1(l){if(l!==ol)return!1;if(!W3)return mr(l),W3=!0,!1;var n=l.type;if(l.tag!==5||n!=="head"&&n!=="body"&&!r9(n,l.memoizedProps))for(n=Fl;n;)qa(l,n),n=v4(n.nextSibling);if(mr(l),l.tag===13){if(l=l.memoizedState,l=l!==null?l.dehydrated:null,!l)throw Error(q(317));l:{for(l=l.nextSibling,n=0;l;){if(l.nodeType===8){var e=l.data;if(e==="/$"){if(n===0){Fl=v4(l.nextSibling);break l}n--}else e!=="$"&&e!=="$!"&&e!=="$?"||n++}l=l.nextSibling}Fl=null}}else Fl=ol?v4(l.stateNode.nextSibling):null;return!0}function v8(){Fl=ol=null,W3=!1}var w4=[];function Yt(){for(var l=0;l<w4.length;l++)w4[l]._workInProgressVersionPrimary=null;w4.length=0}var J5=Un.ReactCurrentDispatcher,C3=Un.ReactCurrentBatchConfig,ke=0,N2=null,G2=null,H2=null,P0=!1,Z5=!1;function n3(){throw Error(q(321))}function Xt(l,n){if(n===null)return!1;for(var e=0;e<n.length&&e<l.length;e++)if(!S3(l[e],n[e]))return!1;return!0}function Jt(l,n,e,t,u,r){if(ke=r,N2=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,J5.current=l===null||l.memoizedState===null?Op:kp,l=e(t,u),Z5){r=0;do{if(Z5=!1,!(25>r))throw Error(q(301));r+=1,H2=G2=null,n.updateQueue=null,J5.current=Pp,l=e(t,u)}while(Z5)}if(J5.current=I0,n=G2!==null&&G2.next!==null,ke=0,H2=G2=N2=null,P0=!1,n)throw Error(q(300));return l}function En(){var l={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return H2===null?N2.memoizedState=H2=l:H2=H2.next=l,H2}function zn(){if(G2===null){var l=N2.alternate;l=l!==null?l.memoizedState:null}else l=G2.next;var n=H2===null?N2.memoizedState:H2.next;if(n!==null)H2=n,G2=l;else{if(l===null)throw Error(q(310));G2=l,l={memoizedState:G2.memoizedState,baseState:G2.baseState,baseQueue:G2.baseQueue,queue:G2.queue,next:null},H2===null?N2.memoizedState=H2=l:H2=H2.next=l}return H2}function U3(l,n){return typeof n=="function"?n(l):n}function O5(l){var n=zn(),e=n.queue;if(e===null)throw Error(q(311));e.lastRenderedReducer=l;var t=G2,u=t.baseQueue,r=e.pending;if(r!==null){if(u!==null){var o=u.next;u.next=r.next,r.next=o}t.baseQueue=u=r,e.pending=null}if(u!==null){u=u.next,t=t.baseState;var i=o=r=null,a=u;do{var s=a.lane;if((ke&s)===s)i!==null&&(i=i.next={lane:0,action:a.action,eagerReducer:a.eagerReducer,eagerState:a.eagerState,next:null}),t=a.eagerReducer===l?a.eagerState:l(t,a.action);else{var c={lane:s,action:a.action,eagerReducer:a.eagerReducer,eagerState:a.eagerState,next:null};i===null?(o=i=c,r=t):i=i.next=c,N2.lanes|=s,Je|=s}a=a.next}while(a!==null&&a!==u);i===null?r=t:i.next=o,S3(t,n.memoizedState)||(M3=!0),n.memoizedState=t,n.baseState=r,n.baseQueue=i,e.lastRenderedState=t}return[n.memoizedState,e.dispatch]}function k5(l){var n=zn(),e=n.queue;if(e===null)throw Error(q(311));e.lastRenderedReducer=l;var t=e.dispatch,u=e.pending,r=n.memoizedState;if(u!==null){e.pending=null;var o=u=u.next;do r=l(r,o.action),o=o.next;while(o!==u);S3(r,n.memoizedState)||(M3=!0),n.memoizedState=r,n.baseQueue===null&&(n.baseState=r),e.lastRenderedState=r}return[r,t]}function vr(l,n,e){var t=n._getVersion;t=t(n._source);var u=n._workInProgressVersionPrimary;if(u!==null?l=u===t:(l=l.mutableReadLanes,(l=(ke&l)===l)&&(n._workInProgressVersionPrimary=t,w4.push(n))),l)return e(n._source);throw w4.push(n),Error(q(350))}function Qa(l,n,e,t){var u=Z2;if(u===null)throw Error(q(349));var r=n._getVersion,o=r(n._source),i=J5.current,a=i.useState(function(){return vr(u,n,e)}),s=a[1],c=a[0];a=H2;var f=l.memoizedState,d=f.refs,h=d.getSnapshot,p=f.source;f=f.subscribe;var y=N2;return l.memoizedState={refs:d,source:n,subscribe:t},i.useEffect(function(){d.getSnapshot=e,d.setSnapshot=s;var m=r(n._source);if(!S3(o,m)){m=e(n._source),S3(c,m)||(s(m),m=Hl(y),u.mutableReadLanes|=m&u.pendingLanes),m=u.mutableReadLanes,u.entangledLanes|=m;for(var g=u.entanglements,v=m;0<v;){var w=31-Kl(v),S=1<<w;g[w]|=m,v&=~S}}},[e,n,t]),i.useEffect(function(){return t(n._source,function(){var m=d.getSnapshot,g=d.setSnapshot;try{g(m(n._source));var v=Hl(y);u.mutableReadLanes|=v&u.pendingLanes}catch(w){g(function(){throw w})}})},[n,t]),S3(h,e)&&S3(p,n)&&S3(f,t)||(l={pending:null,dispatch:null,lastRenderedReducer:U3,lastRenderedState:c},l.dispatch=s=n7.bind(null,N2,l),a.queue=l,a.baseQueue=null,c=vr(u,n,e),a.memoizedState=a.baseState=c),c}function Ya(l,n,e){var t=zn();return Qa(t,l,n,e)}function P5(l){var n=En();return typeof l=="function"&&(l=l()),n.memoizedState=n.baseState=l,l=n.queue={pending:null,dispatch:null,lastRenderedReducer:U3,lastRenderedState:l},l=l.dispatch=n7.bind(null,N2,l),[n.memoizedState,l]}function A0(l,n,e,t){return l={tag:l,create:n,destroy:e,deps:t,next:null},n=N2.updateQueue,n===null?(n={lastEffect:null},N2.updateQueue=n,n.lastEffect=l.next=l):(e=n.lastEffect,e===null?n.lastEffect=l.next=l:(t=e.next,e.next=l,l.next=t,n.lastEffect=l)),l}function yr(l){var n=En();return l={current:l},n.memoizedState=l}function _0(){return zn().memoizedState}function f9(l,n,e,t){var u=En();N2.flags|=l,u.memoizedState=A0(1|n,e,void 0,t===void 0?null:t)}function Zt(l,n,e,t){var u=zn();t=t===void 0?null:t;var r=void 0;if(G2!==null){var o=G2.memoizedState;if(r=o.destroy,t!==null&&Xt(t,o.deps)){A0(n,e,r,t);return}}N2.flags|=l,u.memoizedState=A0(1|n,e,r,t)}function wr(l,n){return f9(516,4,l,n)}function R0(l,n){return Zt(516,4,l,n)}function Xa(l,n){return Zt(4,2,l,n)}function Ja(l,n){if(typeof n=="function")return l=l(),n(l),function(){n(null)};if(n!=null)return l=l(),n.current=l,function(){n.current=null}}function Za(l,n,e){return e=e!=null?e.concat([l]):null,Zt(4,2,Ja.bind(null,n,l),e)}function l7(){}function ls(l,n){var e=zn();n=n===void 0?null:n;var t=e.memoizedState;return t!==null&&n!==null&&Xt(n,t[1])?t[0]:(e.memoizedState=[l,n],l)}function ns(l,n){var e=zn();n=n===void 0?null:n;var t=e.memoizedState;return t!==null&&n!==null&&Xt(n,t[1])?t[0]:(l=l(),e.memoizedState=[l,n],l)}function bp(l,n){var e=A4();Nn(98>e?98:e,function(){l(!0)}),Nn(97<e?97:e,function(){var t=C3.transition;C3.transition=1;try{l(!1),n()}finally{C3.transition=t}})}function n7(l,n,e){var t=c3(),u=Hl(l),r={lane:u,action:e,eagerReducer:null,eagerState:null,next:null},o=n.pending;if(o===null?r.next=r:(r.next=o.next,o.next=r),n.pending=r,o=l.alternate,l===N2||o!==null&&o===N2)Z5=P0=!0;else{if(l.lanes===0&&(o===null||o.lanes===0)&&(o=n.lastRenderedReducer,o!==null))try{var i=n.lastRenderedState,a=o(i,e);if(r.eagerReducer=o,r.eagerState=a,S3(a,i))return}catch{}finally{}zl(l,u,t)}}var I0={readContext:b3,useCallback:n3,useContext:n3,useEffect:n3,useImperativeHandle:n3,useLayoutEffect:n3,useMemo:n3,useReducer:n3,useRef:n3,useState:n3,useDebugValue:n3,useDeferredValue:n3,useTransition:n3,useMutableSource:n3,useOpaqueIdentifier:n3,unstable_isNewReconciler:!1},Op={readContext:b3,useCallback:function(l,n){return En().memoizedState=[l,n===void 0?null:n],l},useContext:b3,useEffect:wr,useImperativeHandle:function(l,n,e){return e=e!=null?e.concat([l]):null,f9(4,2,Ja.bind(null,n,l),e)},useLayoutEffect:function(l,n){return f9(4,2,l,n)},useMemo:function(l,n){var e=En();return n=n===void 0?null:n,l=l(),e.memoizedState=[l,n],l},useReducer:function(l,n,e){var t=En();return n=e!==void 0?e(n):n,t.memoizedState=t.baseState=n,l=t.queue={pending:null,dispatch:null,lastRenderedReducer:l,lastRenderedState:n},l=l.dispatch=n7.bind(null,N2,l),[t.memoizedState,l]},useRef:yr,useState:P5,useDebugValue:l7,useDeferredValue:function(l){var n=P5(l),e=n[0],t=n[1];return wr(function(){var u=C3.transition;C3.transition=1;try{t(l)}finally{C3.transition=u}},[l]),e},useTransition:function(){var l=P5(!1),n=l[0];return l=bp.bind(null,l[1]),yr(l),[l,n]},useMutableSource:function(l,n,e){var t=En();return t.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:l,subscribe:e},Qa(t,l,n,e)},useOpaqueIdentifier:function(){if(W3){var l=!1,n=wp(function(){throw l||(l=!0,e("r:"+(p8++).toString(36))),Error(q(355))}),e=P5(n)[1];return(N2.mode&2)===0&&(N2.flags|=516,A0(5,function(){e("r:"+(p8++).toString(36))},void 0,null)),n}return n="r:"+(p8++).toString(36),P5(n),n},unstable_isNewReconciler:!1},kp={readContext:b3,useCallback:ls,useContext:b3,useEffect:R0,useImperativeHandle:Za,useLayoutEffect:Xa,useMemo:ns,useReducer:O5,useRef:_0,useState:function(){return O5(U3)},useDebugValue:l7,useDeferredValue:function(l){var n=O5(U3),e=n[0],t=n[1];return R0(function(){var u=C3.transition;C3.transition=1;try{t(l)}finally{C3.transition=u}},[l]),e},useTransition:function(){var l=O5(U3)[0];return[_0().current,l]},useMutableSource:Ya,useOpaqueIdentifier:function(){return O5(U3)[0]},unstable_isNewReconciler:!1},Pp={readContext:b3,useCallback:ls,useContext:b3,useEffect:R0,useImperativeHandle:Za,useLayoutEffect:Xa,useMemo:ns,useReducer:k5,useRef:_0,useState:function(){return k5(U3)},useDebugValue:l7,useDeferredValue:function(l){var n=k5(U3),e=n[0],t=n[1];return R0(function(){var u=C3.transition;C3.transition=1;try{t(l)}finally{C3.transition=u}},[l]),e},useTransition:function(){var l=k5(U3)[0];return[_0().current,l]},useMutableSource:Ya,useOpaqueIdentifier:function(){return k5(U3)[0]},unstable_isNewReconciler:!1},Ap=Un.ReactCurrentOwner,M3=!1;function t3(l,n,e,t){n.child=l===null?Ka(n,null,e,t):O0(n,l.child,e,t)}function Sr(l,n,e,t,u){e=e.render;var r=n.ref;return y4(n,u),t=Jt(l,n,e,t,r,u),l!==null&&!M3?(n.updateQueue=l.updateQueue,n.flags&=-517,l.lanes&=~u,il(l,n,u)):(n.flags|=1,t3(l,n,t,u),n.child)}function xr(l,n,e,t,u,r){if(l===null){var o=e.type;return typeof o=="function"&&!i7(o)&&o.defaultProps===void 0&&e.compare===null&&e.defaultProps===void 0?(n.tag=15,n.type=o,es(l,n,o,t,u,r)):(l=l0(e.type,null,t,n,n.mode,r),l.ref=n.ref,l.return=n,n.child=l)}return o=l.child,(u&r)===0&&(u=o.memoizedProps,e=e.compare,e=e!==null?e:xe,e(u,t)&&l.ref===n.ref)?il(l,n,r):(n.flags|=1,l=Yl(o,t),l.ref=n.ref,l.return=n,n.child=l)}function es(l,n,e,t,u,r){if(l!==null&&xe(l.memoizedProps,t)&&l.ref===n.ref)if(M3=!1,(r&u)!==0)(l.flags&16384)!==0&&(M3=!0);else return n.lanes=l.lanes,il(l,n,r);return h9(l,n,e,t,r)}function y8(l,n,e){var t=n.pendingProps,u=t.children,r=l!==null?l.memoizedState:null;if(t.mode==="hidden"||t.mode==="unstable-defer-without-hiding")if((n.mode&4)===0)n.memoizedState={baseLanes:0},N1(n,e);else if((e&1073741824)!==0)n.memoizedState={baseLanes:0},N1(n,r!==null?r.baseLanes:e);else return l=r!==null?r.baseLanes|e:e,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:l},N1(n,l),null;else r!==null?(t=r.baseLanes|e,n.memoizedState=null):t=e,N1(n,t);return t3(l,n,u,e),n.child}function ts(l,n){var e=n.ref;(l===null&&e!==null||l!==null&&l.ref!==e)&&(n.flags|=128)}function h9(l,n,e,t,u){var r=r3(e)?In:Q2.current;return r=P4(n,r),y4(n,u),e=Jt(l,n,e,t,r,u),l!==null&&!M3?(n.updateQueue=l.updateQueue,n.flags&=-517,l.lanes&=~u,il(l,n,u)):(n.flags|=1,t3(l,n,e,u),n.child)}function Tr(l,n,e,t,u){if(r3(e)){var r=!0;Q1(n)}else r=!1;if(y4(n,u),n.stateNode===null)l!==null&&(l.alternate=null,n.alternate=null,n.flags|=2),Wa(n,e,t),s9(n,e,t,u),t=!0;else if(l===null){var o=n.stateNode,i=n.memoizedProps;o.props=i;var a=o.context,s=e.contextType;typeof s=="object"&&s!==null?s=b3(s):(s=r3(e)?In:Q2.current,s=P4(n,s));var c=e.getDerivedStateFromProps,f=typeof c=="function"||typeof o.getSnapshotBeforeUpdate=="function";f||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(i!==t||a!==s)&&hr(n,o,t,s),Al=!1;var d=n.memoizedState;o.state=d,Ce(n,t,o,u),a=n.memoizedState,i!==t||d!==a||u3.current||Al?(typeof c=="function"&&(b0(n,e,c,t),a=n.memoizedState),(i=Al||fr(n,e,i,t,d,a,s))?(f||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(n.flags|=4)):(typeof o.componentDidMount=="function"&&(n.flags|=4),n.memoizedProps=t,n.memoizedState=a),o.props=t,o.state=a,o.context=s,t=i):(typeof o.componentDidMount=="function"&&(n.flags|=4),t=!1)}else{o=n.stateNode,za(l,n),i=n.memoizedProps,s=n.type===n.elementType?i:N3(n.type,i),o.props=s,f=n.pendingProps,d=o.context,a=e.contextType,typeof a=="object"&&a!==null?a=b3(a):(a=r3(e)?In:Q2.current,a=P4(n,a));var h=e.getDerivedStateFromProps;(c=typeof h=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(i!==f||d!==a)&&hr(n,o,t,a),Al=!1,d=n.memoizedState,o.state=d,Ce(n,t,o,u);var p=n.memoizedState;i!==f||d!==p||u3.current||Al?(typeof h=="function"&&(b0(n,e,h,t),p=n.memoizedState),(s=Al||fr(n,e,s,t,d,p,a))?(c||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(t,p,a),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(t,p,a)),typeof o.componentDidUpdate=="function"&&(n.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(n.flags|=256)):(typeof o.componentDidUpdate!="function"||i===l.memoizedProps&&d===l.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||i===l.memoizedProps&&d===l.memoizedState||(n.flags|=256),n.memoizedProps=t,n.memoizedState=p),o.props=t,o.state=p,o.context=a,t=s):(typeof o.componentDidUpdate!="function"||i===l.memoizedProps&&d===l.memoizedState||(n.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||i===l.memoizedProps&&d===l.memoizedState||(n.flags|=256),t=!1)}return p9(l,n,e,t,r,u)}function p9(l,n,e,t,u,r){ts(l,n);var o=(n.flags&64)!==0;if(!t&&!o)return u&&ir(n,e,!1),il(l,n,r);t=n.stateNode,Ap.current=n;var i=o&&typeof e.getDerivedStateFromError!="function"?null:t.render();return n.flags|=1,l!==null&&o?(n.child=O0(n,l.child,null,r),n.child=O0(n,null,i,r)):t3(l,n,i,r),n.memoizedState=t.state,u&&ir(n,e,!0),n.child}function Er(l){var n=l.stateNode;n.pendingContext?or(l,n.pendingContext,n.pendingContext!==n.context):n.context&&or(l,n.context,!1),c9(l,n.containerInfo)}var I1={dehydrated:null,retryLane:0};function Cr(l,n,e){var t=n.pendingProps,u=_2.current,r=!1,o;return(o=(n.flags&64)!==0)||(o=l!==null&&l.memoizedState===null?!1:(u&2)!==0),o?(r=!0,n.flags&=-65):l!==null&&l.memoizedState===null||t.fallback===void 0||t.unstable_avoidThisFallback===!0||(u|=1),R2(_2,u&1),l===null?(t.fallback!==void 0&&d9(n),l=t.children,u=t.fallback,r?(l=br(n,l,u,e),n.child.memoizedState={baseLanes:e},n.memoizedState=I1,l):typeof t.unstable_expectedLoadTime=="number"?(l=br(n,l,u,e),n.child.memoizedState={baseLanes:e},n.memoizedState=I1,n.lanes=33554432,l):(e=a7({mode:"visible",children:l},n.mode,e,null),e.return=n,n.child=e)):l.memoizedState!==null?r?(t=kr(l,n,t.children,t.fallback,e),r=n.child,u=l.child.memoizedState,r.memoizedState=u===null?{baseLanes:e}:{baseLanes:u.baseLanes|e},r.childLanes=l.childLanes&~e,n.memoizedState=I1,t):(e=Or(l,n,t.children,e),n.memoizedState=null,e):r?(t=kr(l,n,t.children,t.fallback,e),r=n.child,u=l.child.memoizedState,r.memoizedState=u===null?{baseLanes:e}:{baseLanes:u.baseLanes|e},r.childLanes=l.childLanes&~e,n.memoizedState=I1,t):(e=Or(l,n,t.children,e),n.memoizedState=null,e)}function br(l,n,e,t){var u=l.mode,r=l.child;return n={mode:"hidden",children:n},(u&2)===0&&r!==null?(r.childLanes=0,r.pendingProps=n):r=a7(n,u,0,null),e=T4(e,u,t,null),r.return=l,e.return=l,r.sibling=e,l.child=r,e}function Or(l,n,e,t){var u=l.child;return l=u.sibling,e=Yl(u,{mode:"visible",children:e}),(n.mode&2)===0&&(e.lanes=t),e.return=n,e.sibling=null,l!==null&&(l.nextEffect=null,l.flags=8,n.firstEffect=n.lastEffect=l),n.child=e}function kr(l,n,e,t,u){var r=n.mode,o=l.child;l=o.sibling;var i={mode:"hidden",children:e};return(r&2)===0&&n.child!==o?(e=n.child,e.childLanes=0,e.pendingProps=i,o=e.lastEffect,o!==null?(n.firstEffect=e.firstEffect,n.lastEffect=o,o.nextEffect=null):n.firstEffect=n.lastEffect=null):e=Yl(o,i),l!==null?t=Yl(l,t):(t=T4(t,r,u,null),t.flags|=2),t.return=n,e.return=n,e.sibling=t,n.child=e,t}function Pr(l,n){l.lanes|=n;var e=l.alternate;e!==null&&(e.lanes|=n),Ha(l.return,n)}function w8(l,n,e,t,u,r){var o=l.memoizedState;o===null?l.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:t,tail:e,tailMode:u,lastEffect:r}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=t,o.tail=e,o.tailMode=u,o.lastEffect=r)}function Ar(l,n,e){var t=n.pendingProps,u=t.revealOrder,r=t.tail;if(t3(l,n,t.children,e),t=_2.current,(t&2)!==0)t=t&1|2,n.flags|=64;else{if(l!==null&&(l.flags&64)!==0)l:for(l=n.child;l!==null;){if(l.tag===13)l.memoizedState!==null&&Pr(l,e);else if(l.tag===19)Pr(l,e);else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===n)break l;for(;l.sibling===null;){if(l.return===null||l.return===n)break l;l=l.return}l.sibling.return=l.return,l=l.sibling}t&=1}if(R2(_2,t),(n.mode&2)===0)n.memoizedState=null;else switch(u){case"forwards":for(e=n.child,u=null;e!==null;)l=e.alternate,l!==null&&k0(l)===null&&(u=e),e=e.sibling;e=u,e===null?(u=n.child,n.child=null):(u=e.sibling,e.sibling=null),w8(n,!1,u,e,r,n.lastEffect);break;case"backwards":for(e=null,u=n.child,n.child=null;u!==null;){if(l=u.alternate,l!==null&&k0(l)===null){n.child=u;break}l=u.sibling,u.sibling=e,e=u,u=l}w8(n,!0,e,null,r,n.lastEffect);break;case"together":w8(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function il(l,n,e){if(l!==null&&(n.dependencies=l.dependencies),Je|=n.lanes,(e&n.childLanes)!==0){if(l!==null&&n.child!==l.child)throw Error(q(153));if(n.child!==null){for(l=n.child,e=Yl(l,l.pendingProps),n.child=e,e.return=n;l.sibling!==null;)l=l.sibling,e=e.sibling=Yl(l,l.pendingProps),e.return=n;e.sibling=null}return n.child}return null}var us,g9,rs,os;us=function(l,n){for(var e=n.child;e!==null;){if(e.tag===5||e.tag===6)l.appendChild(e.stateNode);else if(e.tag!==4&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return;e=e.return}e.sibling.return=e.return,e=e.sibling}};g9=function(){};rs=function(l,n,e,t){var u=l.memoizedProps;if(u!==t){l=n.stateNode,Tn(V3.current);var r=null;switch(e){case"input":u=H8(l,u),t=H8(l,t),r=[];break;case"option":u=W8(l,u),t=W8(l,t),r=[];break;case"select":u=P2({},u,{value:void 0}),t=P2({},t,{value:void 0}),r=[];break;case"textarea":u=G8(l,u),t=G8(l,t),r=[];break;default:typeof u.onClick!="function"&&typeof t.onClick=="function"&&(l.onclick=w0)}Q8(e,t);var o;e=null;for(s in u)if(!t.hasOwnProperty(s)&&u.hasOwnProperty(s)&&u[s]!=null)if(s==="style"){var i=u[s];for(o in i)i.hasOwnProperty(o)&&(e||(e={}),e[o]="")}else s!=="dangerouslySetInnerHTML"&&s!=="children"&&s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&s!=="autoFocus"&&(pe.hasOwnProperty(s)?r||(r=[]):(r=r||[]).push(s,null));for(s in t){var a=t[s];if(i=u!=null?u[s]:void 0,t.hasOwnProperty(s)&&a!==i&&(a!=null||i!=null))if(s==="style")if(i){for(o in i)!i.hasOwnProperty(o)||a&&a.hasOwnProperty(o)||(e||(e={}),e[o]="");for(o in a)a.hasOwnProperty(o)&&i[o]!==a[o]&&(e||(e={}),e[o]=a[o])}else e||(r||(r=[]),r.push(s,e)),e=a;else s==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,i=i?i.__html:void 0,a!=null&&i!==a&&(r=r||[]).push(s,a)):s==="children"?typeof a!="string"&&typeof a!="number"||(r=r||[]).push(s,""+a):s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&(pe.hasOwnProperty(s)?(a!=null&&s==="onScroll"&&C2("scroll",l),r||i===a||(r=[])):typeof a=="object"&&a!==null&&a.$$typeof===Pt?a.toString():(r=r||[]).push(s,a))}e&&(r=r||[]).push("style",e);var s=r;(n.updateQueue=s)&&(n.flags|=4)}};os=function(l,n,e,t){e!==t&&(n.flags|=4)};function A5(l,n){if(!W3)switch(l.tailMode){case"hidden":n=l.tail;for(var e=null;n!==null;)n.alternate!==null&&(e=n),n=n.sibling;e===null?l.tail=null:e.sibling=null;break;case"collapsed":e=l.tail;for(var t=null;e!==null;)e.alternate!==null&&(t=e),e=e.sibling;t===null?n||l.tail===null?l.tail=null:l.tail.sibling=null:t.sibling=null}}function _p(l,n,e){var t=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return r3(n.type)&&x0(),null;case 3:return _4(),k2(u3),k2(Q2),Yt(),t=n.stateNode,t.pendingContext&&(t.context=t.pendingContext,t.pendingContext=null),(l===null||l.child===null)&&(R1(n)?n.flags|=4:t.hydrate||(n.flags|=256)),g9(n),null;case 5:Qt(n);var u=Tn(Oe.current);if(e=n.type,l!==null&&n.stateNode!=null)rs(l,n,e,t,u),l.ref!==n.ref&&(n.flags|=128);else{if(!t){if(n.stateNode===null)throw Error(q(166));return null}if(l=Tn(V3.current),R1(n)){t=n.stateNode,e=n.type;var r=n.memoizedProps;switch(t[Ml]=n,t[S0]=r,e){case"dialog":C2("cancel",t),C2("close",t);break;case"iframe":case"object":case"embed":C2("load",t);break;case"video":case"audio":for(l=0;l<$5.length;l++)C2($5[l],t);break;case"source":C2("error",t);break;case"img":case"image":case"link":C2("error",t),C2("load",t);break;case"details":C2("toggle",t);break;case"input":Au(t,r),C2("invalid",t);break;case"select":t._wrapperState={wasMultiple:!!r.multiple},C2("invalid",t);break;case"textarea":Ru(t,r),C2("invalid",t)}Q8(e,r),l=null;for(var o in r)r.hasOwnProperty(o)&&(u=r[o],o==="children"?typeof u=="string"?t.textContent!==u&&(l=["children",u]):typeof u=="number"&&t.textContent!==""+u&&(l=["children",""+u]):pe.hasOwnProperty(o)&&u!=null&&o==="onScroll"&&C2("scroll",t));switch(e){case"input":b1(t),_u(t,r,!0);break;case"textarea":b1(t),Iu(t);break;case"select":case"option":break;default:typeof r.onClick=="function"&&(t.onclick=w0)}t=l,n.updateQueue=t,t!==null&&(n.flags|=4)}else{switch(o=u.nodeType===9?u:u.ownerDocument,l===K8.html&&(l=Zi(e)),l===K8.html?e==="script"?(l=o.createElement("div"),l.innerHTML="<script><\/script>",l=l.removeChild(l.firstChild)):typeof t.is=="string"?l=o.createElement(e,{is:t.is}):(l=o.createElement(e),e==="select"&&(o=l,t.multiple?o.multiple=!0:t.size&&(o.size=t.size))):l=o.createElementNS(l,e),l[Ml]=n,l[S0]=t,us(l,n,!1,!1),n.stateNode=l,o=Y8(e,t),e){case"dialog":C2("cancel",l),C2("close",l),u=t;break;case"iframe":case"object":case"embed":C2("load",l),u=t;break;case"video":case"audio":for(u=0;u<$5.length;u++)C2($5[u],l);u=t;break;case"source":C2("error",l),u=t;break;case"img":case"image":case"link":C2("error",l),C2("load",l),u=t;break;case"details":C2("toggle",l),u=t;break;case"input":Au(l,t),u=H8(l,t),C2("invalid",l);break;case"option":u=W8(l,t);break;case"select":l._wrapperState={wasMultiple:!!t.multiple},u=P2({},t,{value:void 0}),C2("invalid",l);break;case"textarea":Ru(l,t),u=G8(l,t),C2("invalid",l);break;default:u=t}Q8(e,u);var i=u;for(r in i)if(i.hasOwnProperty(r)){var a=i[r];r==="style"?ea(l,a):r==="dangerouslySetInnerHTML"?(a=a?a.__html:void 0,a!=null&&la(l,a)):r==="children"?typeof a=="string"?(e!=="textarea"||a!=="")&&ge(l,a):typeof a=="number"&&ge(l,""+a):r!=="suppressContentEditableWarning"&&r!=="suppressHydrationWarning"&&r!=="autoFocus"&&(pe.hasOwnProperty(r)?a!=null&&r==="onScroll"&&C2("scroll",l):a!=null&&Tt(l,r,a,o))}switch(e){case"input":b1(l),_u(l,t,!1);break;case"textarea":b1(l),Iu(l);break;case"option":t.value!=null&&l.setAttribute("value",""+Gl(t.value));break;case"select":l.multiple=!!t.multiple,r=t.value,r!=null?p4(l,!!t.multiple,r,!1):t.defaultValue!=null&&p4(l,!!t.multiple,t.defaultValue,!0);break;default:typeof u.onClick=="function"&&(l.onclick=w0)}Na(e,t)&&(n.flags|=4)}n.ref!==null&&(n.flags|=128)}return null;case 6:if(l&&n.stateNode!=null)os(l,n,l.memoizedProps,t);else{if(typeof t!="string"&&n.stateNode===null)throw Error(q(166));e=Tn(Oe.current),Tn(V3.current),R1(n)?(t=n.stateNode,e=n.memoizedProps,t[Ml]=n,t.nodeValue!==e&&(n.flags|=4)):(t=(e.nodeType===9?e:e.ownerDocument).createTextNode(t),t[Ml]=n,n.stateNode=t)}return null;case 13:return k2(_2),t=n.memoizedState,(n.flags&64)!==0?(n.lanes=e,n):(t=t!==null,e=!1,l===null?n.memoizedProps.fallback!==void 0&&R1(n):e=l.memoizedState!==null,t&&!e&&(n.mode&2)!==0&&(l===null&&n.memoizedProps.unstable_avoidThisFallback!==!0||(_2.current&1)!==0?z2===0&&(z2=3):((z2===0||z2===3)&&(z2=4),Z2===null||(Je&134217727)===0&&(o5&134217727)===0||S4(Z2,q2))),(t||e)&&(n.flags|=4),null);case 4:return _4(),g9(n),l===null&&_a(n.stateNode.containerInfo),null;case 10:return Kt(n),null;case 17:return r3(n.type)&&x0(),null;case 19:if(k2(_2),t=n.memoizedState,t===null)return null;if(r=(n.flags&64)!==0,o=t.rendering,o===null)if(r)A5(t,!1);else{if(z2!==0||l!==null&&(l.flags&64)!==0)for(l=n.child;l!==null;){if(o=k0(l),o!==null){for(n.flags|=64,A5(t,!1),r=o.updateQueue,r!==null&&(n.updateQueue=r,n.flags|=4),t.lastEffect===null&&(n.firstEffect=null),n.lastEffect=t.lastEffect,t=e,e=n.child;e!==null;)r=e,l=t,r.flags&=2,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null,o=r.alternate,o===null?(r.childLanes=0,r.lanes=l,r.child=null,r.memoizedProps=null,r.memoizedState=null,r.updateQueue=null,r.dependencies=null,r.stateNode=null):(r.childLanes=o.childLanes,r.lanes=o.lanes,r.child=o.child,r.memoizedProps=o.memoizedProps,r.memoizedState=o.memoizedState,r.updateQueue=o.updateQueue,r.type=o.type,l=o.dependencies,r.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext}),e=e.sibling;return R2(_2,_2.current&1|2),n.child}l=l.sibling}t.tail!==null&&K2()>x9&&(n.flags|=64,r=!0,A5(t,!1),n.lanes=33554432)}else{if(!r)if(l=k0(o),l!==null){if(n.flags|=64,r=!0,e=l.updateQueue,e!==null&&(n.updateQueue=e,n.flags|=4),A5(t,!0),t.tail===null&&t.tailMode==="hidden"&&!o.alternate&&!W3)return n=n.lastEffect=t.lastEffect,n!==null&&(n.nextEffect=null),null}else 2*K2()-t.renderingStartTime>x9&&e!==1073741824&&(n.flags|=64,r=!0,A5(t,!1),n.lanes=33554432);t.isBackwards?(o.sibling=n.child,n.child=o):(e=t.last,e!==null?e.sibling=o:n.child=o,t.last=o)}return t.tail!==null?(e=t.tail,t.rendering=e,t.tail=e.sibling,t.lastEffect=n.lastEffect,t.renderingStartTime=K2(),e.sibling=null,n=_2.current,R2(_2,r?n&1|2:n&1),e):null;case 23:case 24:return o7(),l!==null&&l.memoizedState!==null!=(n.memoizedState!==null)&&t.mode!=="unstable-defer-without-hiding"&&(n.flags|=4),null}throw Error(q(156,n.tag))}function Rp(l){switch(l.tag){case 1:r3(l.type)&&x0();var n=l.flags;return n&4096?(l.flags=n&-4097|64,l):null;case 3:if(_4(),k2(u3),k2(Q2),Yt(),n=l.flags,(n&64)!==0)throw Error(q(285));return l.flags=n&-4097|64,l;case 5:return Qt(l),null;case 13:return k2(_2),n=l.flags,n&4096?(l.flags=n&-4097|64,l):null;case 19:return k2(_2),null;case 4:return _4(),null;case 10:return Kt(l),null;case 23:case 24:return o7(),null;default:return null}}function e7(l,n){try{var e="",t=n;do e+=dh(t),t=t.return;while(t);var u=e}catch(r){u=`
Error generating stack: `+r.message+`
`+r.stack}return{value:l,source:n,stack:u}}function m9(l,n){try{console.error(n.value)}catch(e){setTimeout(function(){throw e})}}var Ip=typeof WeakMap=="function"?WeakMap:Map;function is(l,n,e){e=Bl(-1,e),e.tag=3,e.payload={element:null};var t=n.value;return e.callback=function(){M0||(M0=!0,T9=t),m9(l,n)},e}function as(l,n,e){e=Bl(-1,e),e.tag=3;var t=l.type.getDerivedStateFromError;if(typeof t=="function"){var u=n.value;e.payload=function(){return m9(l,n),t(u)}}var r=l.stateNode;return r!==null&&typeof r.componentDidCatch=="function"&&(e.callback=function(){typeof t!="function"&&(H3===null?H3=new Set([this]):H3.add(this),m9(l,n));var o=n.stack;this.componentDidCatch(n.value,{componentStack:o!==null?o:""})}),e}var Np=typeof WeakSet=="function"?WeakSet:Set;function _r(l){var n=l.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(e){Vl(l,e)}else n.current=null}function Mp(l,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(n.flags&256&&l!==null){var e=l.memoizedProps,t=l.memoizedState;l=n.stateNode,n=l.getSnapshotBeforeUpdate(n.elementType===n.type?e:N3(n.type,e),t),l.__reactInternalSnapshotBeforeUpdate=n}return;case 3:n.flags&256&&zt(n.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(q(163))}function Fp(l,n,e){switch(e.tag){case 0:case 11:case 15:case 22:if(n=e.updateQueue,n=n!==null?n.lastEffect:null,n!==null){l=n=n.next;do{if((l.tag&3)===3){var t=l.create;l.destroy=t()}l=l.next}while(l!==n)}if(n=e.updateQueue,n=n!==null?n.lastEffect:null,n!==null){l=n=n.next;do{var u=l;t=u.next,u=u.tag,(u&4)!==0&&(u&1)!==0&&(vs(e,l),zp(e,l)),l=t}while(l!==n)}return;case 1:l=e.stateNode,e.flags&4&&(n===null?l.componentDidMount():(t=e.elementType===e.type?n.memoizedProps:N3(e.type,n.memoizedProps),l.componentDidUpdate(t,n.memoizedState,l.__reactInternalSnapshotBeforeUpdate))),n=e.updateQueue,n!==null&&dr(e,n,l);return;case 3:if(n=e.updateQueue,n!==null){if(l=null,e.child!==null)switch(e.child.tag){case 5:l=e.child.stateNode;break;case 1:l=e.child.stateNode}dr(e,n,l)}return;case 5:l=e.stateNode,n===null&&e.flags&4&&Na(e.type,e.memoizedProps)&&l.focus();return;case 6:return;case 4:return;case 12:return;case 13:e.memoizedState===null&&(e=e.alternate,e!==null&&(e=e.memoizedState,e!==null&&(e=e.dehydrated,e!==null&&fa(e))));return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(q(163))}function Rr(l,n){for(var e=l;;){if(e.tag===5){var t=e.stateNode;if(n)t=t.style,typeof t.setProperty=="function"?t.setProperty("display","none","important"):t.display="none";else{t=e.stateNode;var u=e.memoizedProps.style;u=u!=null&&u.hasOwnProperty("display")?u.display:null,t.style.display=na("display",u)}}else if(e.tag===6)e.stateNode.nodeValue=n?"":e.memoizedProps;else if((e.tag!==23&&e.tag!==24||e.memoizedState===null||e===l)&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===l)break;for(;e.sibling===null;){if(e.return===null||e.return===l)return;e=e.return}e.sibling.return=e.return,e=e.sibling}}function Ir(l,n){if(An&&typeof An.onCommitFiberUnmount=="function")try{An.onCommitFiberUnmount(Vt,n)}catch{}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(l=n.updateQueue,l!==null&&(l=l.lastEffect,l!==null)){var e=l=l.next;do{var t=e,u=t.destroy;if(t=t.tag,u!==void 0)if((t&4)!==0)vs(n,e);else{t=n;try{u()}catch(r){Vl(t,r)}}e=e.next}while(e!==l)}break;case 1:if(_r(n),l=n.stateNode,typeof l.componentWillUnmount=="function")try{l.props=n.memoizedProps,l.state=n.memoizedState,l.componentWillUnmount()}catch(r){Vl(n,r)}break;case 5:_r(n);break;case 4:ss(l,n)}}function Nr(l){l.alternate=null,l.child=null,l.dependencies=null,l.firstEffect=null,l.lastEffect=null,l.memoizedProps=null,l.memoizedState=null,l.pendingProps=null,l.return=null,l.updateQueue=null}function Mr(l){return l.tag===5||l.tag===3||l.tag===4}function Fr(l){l:{for(var n=l.return;n!==null;){if(Mr(n))break l;n=n.return}throw Error(q(160))}var e=n;switch(n=e.stateNode,e.tag){case 5:var t=!1;break;case 3:n=n.containerInfo,t=!0;break;case 4:n=n.containerInfo,t=!0;break;default:throw Error(q(161))}e.flags&16&&(ge(n,""),e.flags&=-17);l:n:for(e=l;;){for(;e.sibling===null;){if(e.return===null||Mr(e.return)){e=null;break l}e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue n;e.child.return=e,e=e.child}if(!(e.flags&2)){e=e.stateNode;break l}}t?v9(l,e,n):y9(l,e,n)}function v9(l,n,e){var t=l.tag,u=t===5||t===6;if(u)l=u?l.stateNode:l.stateNode.instance,n?e.nodeType===8?e.parentNode.insertBefore(l,n):e.insertBefore(l,n):(e.nodeType===8?(n=e.parentNode,n.insertBefore(l,e)):(n=e,n.appendChild(l)),e=e._reactRootContainer,e!=null||n.onclick!==null||(n.onclick=w0));else if(t!==4&&(l=l.child,l!==null))for(v9(l,n,e),l=l.sibling;l!==null;)v9(l,n,e),l=l.sibling}function y9(l,n,e){var t=l.tag,u=t===5||t===6;if(u)l=u?l.stateNode:l.stateNode.instance,n?e.insertBefore(l,n):e.appendChild(l);else if(t!==4&&(l=l.child,l!==null))for(y9(l,n,e),l=l.sibling;l!==null;)y9(l,n,e),l=l.sibling}function ss(l,n){for(var e=n,t=!1,u,r;;){if(!t){t=e.return;l:for(;;){if(t===null)throw Error(q(160));switch(u=t.stateNode,t.tag){case 5:r=!1;break l;case 3:u=u.containerInfo,r=!0;break l;case 4:u=u.containerInfo,r=!0;break l}t=t.return}t=!0}if(e.tag===5||e.tag===6){l:for(var o=l,i=e,a=i;;)if(Ir(o,a),a.child!==null&&a.tag!==4)a.child.return=a,a=a.child;else{if(a===i)break l;for(;a.sibling===null;){if(a.return===null||a.return===i)break l;a=a.return}a.sibling.return=a.return,a=a.sibling}r?(o=u,i=e.stateNode,o.nodeType===8?o.parentNode.removeChild(i):o.removeChild(i)):u.removeChild(e.stateNode)}else if(e.tag===4){if(e.child!==null){u=e.stateNode.containerInfo,r=!0,e.child.return=e,e=e.child;continue}}else if(Ir(l,e),e.child!==null){e.child.return=e,e=e.child;continue}if(e===n)break;for(;e.sibling===null;){if(e.return===null||e.return===n)return;e=e.return,e.tag===4&&(t=!1)}e.sibling.return=e.return,e=e.sibling}}function S8(l,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var e=n.updateQueue;if(e=e!==null?e.lastEffect:null,e!==null){var t=e=e.next;do(t.tag&3)===3&&(l=t.destroy,t.destroy=void 0,l!==void 0&&l()),t=t.next;while(t!==e)}return;case 1:return;case 5:if(e=n.stateNode,e!=null){t=n.memoizedProps;var u=l!==null?l.memoizedProps:t;l=n.type;var r=n.updateQueue;if(n.updateQueue=null,r!==null){for(e[S0]=t,l==="input"&&t.type==="radio"&&t.name!=null&&Xi(e,t),Y8(l,u),n=Y8(l,t),u=0;u<r.length;u+=2){var o=r[u],i=r[u+1];o==="style"?ea(e,i):o==="dangerouslySetInnerHTML"?la(e,i):o==="children"?ge(e,i):Tt(e,o,i,n)}switch(l){case"input":z8(e,t);break;case"textarea":Ji(e,t);break;case"select":l=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!t.multiple,r=t.value,r!=null?p4(e,!!t.multiple,r,!1):l!==!!t.multiple&&(t.defaultValue!=null?p4(e,!!t.multiple,t.defaultValue,!0):p4(e,!!t.multiple,t.multiple?[]:"",!1))}}}return;case 6:if(n.stateNode===null)throw Error(q(162));n.stateNode.nodeValue=n.memoizedProps;return;case 3:e=n.stateNode,e.hydrate&&(e.hydrate=!1,fa(e.containerInfo));return;case 12:return;case 13:n.memoizedState!==null&&(r7=K2(),Rr(n.child,!0)),Lr(n);return;case 19:Lr(n);return;case 17:return;case 23:case 24:Rr(n,n.memoizedState!==null);return}throw Error(q(163))}function Lr(l){var n=l.updateQueue;if(n!==null){l.updateQueue=null;var e=l.stateNode;e===null&&(e=l.stateNode=new Np),n.forEach(function(t){var u=Gp.bind(null,l,t);e.has(t)||(e.add(t),t.then(u,u))})}}function Lp(l,n){return l!==null&&(l=l.memoizedState,l===null||l.dehydrated!==null)?(n=n.memoizedState,n!==null&&n.dehydrated===null):!1}var Dp=Math.ceil,N0=Un.ReactCurrentDispatcher,t7=Un.ReactCurrentOwner,p2=0,Z2=null,F2=null,q2=0,Mn=0,w9=an(0),z2=0,o6=null,r5=0,Je=0,o5=0,u7=0,S9=null,r7=0,x9=1/0;function i5(){x9=K2()+500}var e2=null,M0=!1,T9=null,H3=null,Ql=!1,le=null,j5=90,E9=[],C9=[],cl=null,ne=0,b9=null,X1=-1,ul=0,J1=0,ee=null,Z1=!1;function c3(){return(p2&48)!==0?K2():X1!==-1?X1:X1=K2()}function Hl(l){if(l=l.mode,(l&2)===0)return 1;if((l&4)===0)return A4()===99?1:2;if(ul===0&&(ul=r5),Cp.transition!==0){J1!==0&&(J1=S9!==null?S9.pendingLanes:0),l=ul;var n=4186112&~J1;return n&=-n,n===0&&(l=4186112&~l,n=l&-l,n===0&&(n=8192)),n}return l=A4(),(p2&4)!==0&&l===98?l=v0(12,ul):(l=kh(l),l=v0(l,ul)),l}function zl(l,n,e){if(50<ne)throw ne=0,b9=null,Error(q(185));if(l=i6(l,n),l===null)return null;Z0(l,n,e),l===Z2&&(o5|=n,z2===4&&S4(l,q2));var t=A4();n===1?(p2&8)!==0&&(p2&48)===0?O9(l):(O3(l,e),p2===0&&(i5(),Y3())):((p2&4)===0||t!==98&&t!==99||(cl===null?cl=new Set([l]):cl.add(l)),O3(l,e)),S9=l}function i6(l,n){l.lanes|=n;var e=l.alternate;for(e!==null&&(e.lanes|=n),e=l,l=l.return;l!==null;)l.childLanes|=n,e=l.alternate,e!==null&&(e.childLanes|=n),e=l,l=l.return;return e.tag===3?e.stateNode:null}function O3(l,n){for(var e=l.callbackNode,t=l.suspendedLanes,u=l.pingedLanes,r=l.expirationTimes,o=l.pendingLanes;0<o;){var i=31-Kl(o),a=1<<i,s=r[i];if(s===-1){if((a&t)===0||(a&u)!==0){s=n,n4(a);var c=E2;r[i]=10<=c?s+250:6<=c?s+5e3:-1}}else s<=n&&(l.expiredLanes|=a);o&=~a}if(t=we(l,l===Z2?q2:0),n=E2,t===0)e!==null&&(e!==g8&&i9(e),l.callbackNode=null,l.callbackPriority=0);else{if(e!==null){if(l.callbackPriority===n)return;e!==g8&&i9(e)}n===15?(e=O9.bind(null,l),tl===null?(tl=[e],Y1=Wt(u6,Ua)):tl.push(e),e=g8):n===14?e=Ee(99,O9.bind(null,l)):(e=Ph(n),e=Ee(e,cs.bind(null,l))),l.callbackPriority=n,l.callbackNode=e}}function cs(l){if(X1=-1,J1=ul=0,(p2&48)!==0)throw Error(q(327));var n=l.callbackNode;if(sn()&&l.callbackNode!==n)return null;var e=we(l,l===Z2?q2:0);if(e===0)return null;var t=e,u=p2;p2|=16;var r=ps();(Z2!==l||q2!==t)&&(i5(),x4(l,t));do try{Bp();break}catch(i){hs(l,i)}while(1);if(Gt(),N0.current=r,p2=u,F2!==null?t=0:(Z2=null,q2=0,t=z2),(r5&o5)!==0)x4(l,0);else if(t!==0){if(t===2&&(p2|=64,l.hydrate&&(l.hydrate=!1,zt(l.containerInfo)),e=wa(l),e!==0&&(t=B5(l,e))),t===1)throw n=o6,x4(l,0),S4(l,e),O3(l,K2()),n;switch(l.finishedWork=l.current.alternate,l.finishedLanes=e,t){case 0:case 1:throw Error(q(345));case 2:mn(l);break;case 3:if(S4(l,e),(e&62914560)===e&&(t=r7+500-K2(),10<t)){if(we(l,0)!==0)break;if(u=l.suspendedLanes,(u&e)!==e){c3(),l.pingedLanes|=l.suspendedLanes&u;break}l.timeoutHandle=tr(mn.bind(null,l),t);break}mn(l);break;case 4:if(S4(l,e),(e&4186112)===e)break;for(t=l.eventTimes,u=-1;0<e;){var o=31-Kl(e);r=1<<o,o=t[o],o>u&&(u=o),e&=~r}if(e=u,e=K2()-e,e=(120>e?120:480>e?480:1080>e?1080:1920>e?1920:3e3>e?3e3:4320>e?4320:1960*Dp(e/1960))-e,10<e){l.timeoutHandle=tr(mn.bind(null,l),e);break}mn(l);break;case 5:mn(l);break;default:throw Error(q(329))}}return O3(l,K2()),l.callbackNode===n?cs.bind(null,l):null}function S4(l,n){for(n&=~u7,n&=~o5,l.suspendedLanes|=n,l.pingedLanes&=~n,l=l.expirationTimes;0<n;){var e=31-Kl(n),t=1<<e;l[e]=-1,n&=~t}}function O9(l){if((p2&48)!==0)throw Error(q(327));if(sn(),l===Z2&&(l.expiredLanes&q2)!==0){var n=q2,e=B5(l,n);(r5&o5)!==0&&(n=we(l,n),e=B5(l,n))}else n=we(l,0),e=B5(l,n);if(l.tag!==0&&e===2&&(p2|=64,l.hydrate&&(l.hydrate=!1,zt(l.containerInfo)),n=wa(l),n!==0&&(e=B5(l,n))),e===1)throw e=o6,x4(l,0),S4(l,n),O3(l,K2()),e;return l.finishedWork=l.current.alternate,l.finishedLanes=n,mn(l),O3(l,K2()),null}function $p(){if(cl!==null){var l=cl;cl=null,l.forEach(function(n){n.expiredLanes|=24&n.pendingLanes,O3(n,K2())})}Y3()}function ds(l,n){var e=p2;p2|=1;try{return l(n)}finally{p2=e,p2===0&&(i5(),Y3())}}function fs(l,n){var e=p2;p2&=-2,p2|=8;try{return l(n)}finally{p2=e,p2===0&&(i5(),Y3())}}function N1(l,n){R2(w9,Mn),Mn|=n,r5|=n}function o7(){Mn=w9.current,k2(w9)}function x4(l,n){l.finishedWork=null,l.finishedLanes=0;var e=l.timeoutHandle;if(e!==-1&&(l.timeoutHandle=-1,yp(e)),F2!==null)for(e=F2.return;e!==null;){var t=e;switch(t.tag){case 1:t=t.type.childContextTypes,t!=null&&x0();break;case 3:_4(),k2(u3),k2(Q2),Yt();break;case 5:Qt(t);break;case 4:_4();break;case 13:k2(_2);break;case 19:k2(_2);break;case 10:Kt(t);break;case 23:case 24:o7()}e=e.return}Z2=l,F2=Yl(l.current,null),q2=Mn=r5=n,z2=0,o6=null,u7=o5=Je=0}function hs(l,n){do{var e=F2;try{if(Gt(),J5.current=I0,P0){for(var t=N2.memoizedState;t!==null;){var u=t.queue;u!==null&&(u.pending=null),t=t.next}P0=!1}if(ke=0,H2=G2=N2=null,Z5=!1,t7.current=null,e===null||e.return===null){z2=1,o6=n,F2=null;break}l:{var r=l,o=e.return,i=e,a=n;if(n=q2,i.flags|=2048,i.firstEffect=i.lastEffect=null,a!==null&&typeof a=="object"&&typeof a.then=="function"){var s=a;if((i.mode&2)===0){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.lanes=c.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=(_2.current&1)!==0,d=o;do{var h;if(h=d.tag===13){var p=d.memoizedState;if(p!==null)h=p.dehydrated!==null;else{var y=d.memoizedProps;h=y.fallback===void 0?!1:y.unstable_avoidThisFallback!==!0?!0:!f}}if(h){var m=d.updateQueue;if(m===null){var g=new Set;g.add(s),d.updateQueue=g}else m.add(s);if((d.mode&2)===0){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,i.tag===1)if(i.alternate===null)i.tag=17;else{var v=Bl(-1,1);v.tag=2,Ul(i,v)}i.lanes|=1;break l}a=void 0,i=n;var w=r.pingCache;if(w===null?(w=r.pingCache=new Ip,a=new Set,w.set(s,a)):(a=w.get(s),a===void 0&&(a=new Set,w.set(s,a))),!a.has(i)){a.add(i);var S=Wp.bind(null,r,s,i);s.then(S,S)}d.flags|=4096,d.lanes=n;break l}d=d.return}while(d!==null);a=Error((h4(i.type)||"A React component")+` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`)}z2!==5&&(z2=2),a=e7(a,i),d=o;do{switch(d.tag){case 3:r=a,d.flags|=4096,n&=-n,d.lanes|=n;var I=is(d,r,n);cr(d,I);break l;case 1:r=a;var C=d.type,D=d.stateNode;if((d.flags&64)===0&&(typeof C.getDerivedStateFromError=="function"||D!==null&&typeof D.componentDidCatch=="function"&&(H3===null||!H3.has(D)))){d.flags|=4096,n&=-n,d.lanes|=n;var F=as(d,r,n);cr(d,F);break l}}d=d.return}while(d!==null)}ms(e)}catch(j){n=j,F2===e&&e!==null&&(F2=e=e.return);continue}break}while(1)}function ps(){var l=N0.current;return N0.current=I0,l===null?I0:l}function B5(l,n){var e=p2;p2|=16;var t=ps();Z2===l&&q2===n||x4(l,n);do try{jp();break}catch(u){hs(l,u)}while(1);if(Gt(),p2=e,N0.current=t,F2!==null)throw Error(q(261));return Z2=null,q2=0,z2}function jp(){for(;F2!==null;)gs(F2)}function Bp(){for(;F2!==null&&!xp();)gs(F2)}function gs(l){var n=ys(l.alternate,l,Mn);l.memoizedProps=l.pendingProps,n===null?ms(l):F2=n,t7.current=null}function ms(l){var n=l;do{var e=n.alternate;if(l=n.return,(n.flags&2048)===0){if(e=_p(e,n,Mn),e!==null){F2=e;return}if(e=n,e.tag!==24&&e.tag!==23||e.memoizedState===null||(Mn&1073741824)!==0||(e.mode&4)===0){for(var t=0,u=e.child;u!==null;)t|=u.lanes|u.childLanes,u=u.sibling;e.childLanes=t}l!==null&&(l.flags&2048)===0&&(l.firstEffect===null&&(l.firstEffect=n.firstEffect),n.lastEffect!==null&&(l.lastEffect!==null&&(l.lastEffect.nextEffect=n.firstEffect),l.lastEffect=n.lastEffect),1<n.flags&&(l.lastEffect!==null?l.lastEffect.nextEffect=n:l.firstEffect=n,l.lastEffect=n))}else{if(e=Rp(n),e!==null){e.flags&=2047,F2=e;return}l!==null&&(l.firstEffect=l.lastEffect=null,l.flags|=2048)}if(n=n.sibling,n!==null){F2=n;return}F2=n=l}while(n!==null);z2===0&&(z2=5)}function mn(l){var n=A4();return Nn(99,Up.bind(null,l,n)),null}function Up(l,n){do sn();while(le!==null);if((p2&48)!==0)throw Error(q(327));var e=l.finishedWork;if(e===null)return null;if(l.finishedWork=null,l.finishedLanes=0,e===l.current)throw Error(q(177));l.callbackNode=null;var t=e.lanes|e.childLanes,u=t,r=l.pendingLanes&~u;l.pendingLanes=u,l.suspendedLanes=0,l.pingedLanes=0,l.expiredLanes&=u,l.mutableReadLanes&=u,l.entangledLanes&=u,u=l.entanglements;for(var o=l.eventTimes,i=l.expirationTimes;0<r;){var a=31-Kl(r),s=1<<a;u[a]=0,o[a]=-1,i[a]=-1,r&=~s}if(cl!==null&&(t&24)===0&&cl.has(l)&&cl.delete(l),l===Z2&&(F2=Z2=null,q2=0),1<e.flags?e.lastEffect!==null?(e.lastEffect.nextEffect=e,t=e.firstEffect):t=e:t=e.firstEffect,t!==null){if(u=p2,p2|=32,t7.current=null,f8=G1,o=Yu(),e9(o)){if("selectionStart"in o)i={start:o.selectionStart,end:o.selectionEnd};else l:if(i=(i=o.ownerDocument)&&i.defaultView||window,(s=i.getSelection&&i.getSelection())&&s.rangeCount!==0){i=s.anchorNode,r=s.anchorOffset,a=s.focusNode,s=s.focusOffset;try{i.nodeType,a.nodeType}catch{i=null;break l}var c=0,f=-1,d=-1,h=0,p=0,y=o,m=null;n:for(;;){for(var g;y!==i||r!==0&&y.nodeType!==3||(f=c+r),y!==a||s!==0&&y.nodeType!==3||(d=c+s),y.nodeType===3&&(c+=y.nodeValue.length),(g=y.firstChild)!==null;)m=y,y=g;for(;;){if(y===o)break n;if(m===i&&++h===r&&(f=c),m===a&&++p===s&&(d=c),(g=y.nextSibling)!==null)break;y=m,m=y.parentNode}y=g}i=f===-1||d===-1?null:{start:f,end:d}}else i=null;i=i||{start:0,end:0}}else i=null;h8={focusedElem:o,selectionRange:i},G1=!1,ee=null,Z1=!1,e2=t;do try{Hp()}catch(j){if(e2===null)throw Error(q(330));Vl(e2,j),e2=e2.nextEffect}while(e2!==null);ee=null,e2=t;do try{for(o=l;e2!==null;){var v=e2.flags;if(v&16&&ge(e2.stateNode,""),v&128){var w=e2.alternate;if(w!==null){var S=w.ref;S!==null&&(typeof S=="function"?S(null):S.current=null)}}switch(v&1038){case 2:Fr(e2),e2.flags&=-3;break;case 6:Fr(e2),e2.flags&=-3,S8(e2.alternate,e2);break;case 1024:e2.flags&=-1025;break;case 1028:e2.flags&=-1025,S8(e2.alternate,e2);break;case 4:S8(e2.alternate,e2);break;case 8:i=e2,ss(o,i);var I=i.alternate;Nr(i),I!==null&&Nr(I)}e2=e2.nextEffect}}catch(j){if(e2===null)throw Error(q(330));Vl(e2,j),e2=e2.nextEffect}while(e2!==null);if(S=h8,w=Yu(),v=S.focusedElem,o=S.selectionRange,w!==v&&v&&v.ownerDocument&&ka(v.ownerDocument.documentElement,v)){for(o!==null&&e9(v)&&(w=o.start,S=o.end,S===void 0&&(S=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(S,v.value.length)):(S=(w=v.ownerDocument||document)&&w.defaultView||window,S.getSelection&&(S=S.getSelection(),i=v.textContent.length,I=Math.min(o.start,i),o=o.end===void 0?I:Math.min(o.end,i),!S.extend&&I>o&&(i=o,o=I,I=i),i=Qu(v,I),r=Qu(v,o),i&&r&&(S.rangeCount!==1||S.anchorNode!==i.node||S.anchorOffset!==i.offset||S.focusNode!==r.node||S.focusOffset!==r.offset)&&(w=w.createRange(),w.setStart(i.node,i.offset),S.removeAllRanges(),I>o?(S.addRange(w),S.extend(r.node,r.offset)):(w.setEnd(r.node,r.offset),S.addRange(w)))))),w=[],S=v;S=S.parentNode;)S.nodeType===1&&w.push({element:S,left:S.scrollLeft,top:S.scrollTop});for(typeof v.focus=="function"&&v.focus(),v=0;v<w.length;v++)S=w[v],S.element.scrollLeft=S.left,S.element.scrollTop=S.top}G1=!!f8,h8=f8=null,l.current=e,e2=t;do try{for(v=l;e2!==null;){var C=e2.flags;if(C&36&&Fp(v,e2.alternate,e2),C&128){w=void 0;var D=e2.ref;if(D!==null){var F=e2.stateNode;switch(e2.tag){case 5:w=F;break;default:w=F}typeof D=="function"?D(w):D.current=w}}e2=e2.nextEffect}}catch(j){if(e2===null)throw Error(q(330));Vl(e2,j),e2=e2.nextEffect}while(e2!==null);e2=null,Ep(),p2=u}else l.current=e;if(Ql)Ql=!1,le=l,j5=n;else for(e2=t;e2!==null;)n=e2.nextEffect,e2.nextEffect=null,e2.flags&8&&(C=e2,C.sibling=null,C.stateNode=null),e2=n;if(t=l.pendingLanes,t===0&&(H3=null),t===1?l===b9?ne++:(ne=0,b9=l):ne=0,e=e.stateNode,An&&typeof An.onCommitFiberRoot=="function")try{An.onCommitFiberRoot(Vt,e,void 0,(e.current.flags&64)===64)}catch{}if(O3(l,K2()),M0)throw M0=!1,l=T9,T9=null,l;return(p2&8)!==0||Y3(),null}function Hp(){for(;e2!==null;){var l=e2.alternate;Z1||ee===null||((e2.flags&8)!==0?Fu(e2,ee)&&(Z1=!0):e2.tag===13&&Lp(l,e2)&&Fu(e2,ee)&&(Z1=!0));var n=e2.flags;(n&256)!==0&&Mp(l,e2),(n&512)===0||Ql||(Ql=!0,Ee(97,function(){return sn(),null})),e2=e2.nextEffect}}function sn(){if(j5!==90){var l=97<j5?97:j5;return j5=90,Nn(l,Vp)}return!1}function zp(l,n){E9.push(n,l),Ql||(Ql=!0,Ee(97,function(){return sn(),null}))}function vs(l,n){C9.push(n,l),Ql||(Ql=!0,Ee(97,function(){return sn(),null}))}function Vp(){if(le===null)return!1;var l=le;if(le=null,(p2&48)!==0)throw Error(q(331));var n=p2;p2|=32;var e=C9;C9=[];for(var t=0;t<e.length;t+=2){var u=e[t],r=e[t+1],o=u.destroy;if(u.destroy=void 0,typeof o=="function")try{o()}catch(a){if(r===null)throw Error(q(330));Vl(r,a)}}for(e=E9,E9=[],t=0;t<e.length;t+=2){u=e[t],r=e[t+1];try{var i=u.create;u.destroy=i()}catch(a){if(r===null)throw Error(q(330));Vl(r,a)}}for(i=l.current.firstEffect;i!==null;)l=i.nextEffect,i.nextEffect=null,i.flags&8&&(i.sibling=null,i.stateNode=null),i=l;return p2=n,Y3(),!0}function Dr(l,n,e){n=e7(e,n),n=is(l,n,1),Ul(l,n),n=c3(),l=i6(l,1),l!==null&&(Z0(l,1,n),O3(l,n))}function Vl(l,n){if(l.tag===3)Dr(l,l,n);else for(var e=l.return;e!==null;){if(e.tag===3){Dr(e,l,n);break}else if(e.tag===1){var t=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof t.componentDidCatch=="function"&&(H3===null||!H3.has(t))){l=e7(n,l);var u=as(e,l,1);if(Ul(e,u),u=c3(),e=i6(e,1),e!==null)Z0(e,1,u),O3(e,u);else if(typeof t.componentDidCatch=="function"&&(H3===null||!H3.has(t)))try{t.componentDidCatch(n,l)}catch{}break}}e=e.return}}function Wp(l,n,e){var t=l.pingCache;t!==null&&t.delete(n),n=c3(),l.pingedLanes|=l.suspendedLanes&e,Z2===l&&(q2&e)===e&&(z2===4||z2===3&&(q2&62914560)===q2&&500>K2()-r7?x4(l,0):u7|=e),O3(l,n)}function Gp(l,n){var e=l.stateNode;e!==null&&e.delete(n),n=0,n===0&&(n=l.mode,(n&2)===0?n=1:(n&4)===0?n=A4()===99?1:2:(ul===0&&(ul=r5),n=e4(62914560&~ul),n===0&&(n=4194304))),e=c3(),l=i6(l,n),l!==null&&(Z0(l,n,e),O3(l,e))}var ys;ys=function(l,n,e){var t=n.lanes;if(l!==null)if(l.memoizedProps!==n.pendingProps||u3.current)M3=!0;else if((e&t)!==0)M3=(l.flags&16384)!==0;else{switch(M3=!1,n.tag){case 3:Er(n),v8();break;case 5:pr(n);break;case 1:r3(n.type)&&Q1(n);break;case 4:c9(n,n.stateNode.containerInfo);break;case 10:t=n.memoizedProps.value;var u=n.type._context;R2(T0,u._currentValue),u._currentValue=t;break;case 13:if(n.memoizedState!==null)return(e&n.child.childLanes)!==0?Cr(l,n,e):(R2(_2,_2.current&1),n=il(l,n,e),n!==null?n.sibling:null);R2(_2,_2.current&1);break;case 19:if(t=(e&n.childLanes)!==0,(l.flags&64)!==0){if(t)return Ar(l,n,e);n.flags|=64}if(u=n.memoizedState,u!==null&&(u.rendering=null,u.tail=null,u.lastEffect=null),R2(_2,_2.current),t)break;return null;case 23:case 24:return n.lanes=0,y8(l,n,e)}return il(l,n,e)}else M3=!1;switch(n.lanes=0,n.tag){case 2:if(t=n.type,l!==null&&(l.alternate=null,n.alternate=null,n.flags|=2),l=n.pendingProps,u=P4(n,Q2.current),y4(n,e),u=Jt(null,n,t,l,u,e),n.flags|=1,typeof u=="object"&&u!==null&&typeof u.render=="function"&&u.$$typeof===void 0){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,r3(t)){var r=!0;Q1(n)}else r=!1;n.memoizedState=u.state!==null&&u.state!==void 0?u.state:null,qt(n);var o=t.getDerivedStateFromProps;typeof o=="function"&&b0(n,t,o,l),u.updater=r6,n.stateNode=u,u._reactInternals=n,s9(n,t,l,e),n=p9(null,n,t,!0,r,e)}else n.tag=0,t3(null,n,u,e),n=n.child;return n;case 16:u=n.elementType;l:{switch(l!==null&&(l.alternate=null,n.alternate=null,n.flags|=2),l=n.pendingProps,r=u._init,u=r(u._payload),n.type=u,r=n.tag=qp(u),l=N3(u,l),r){case 0:n=h9(null,n,u,l,e);break l;case 1:n=Tr(null,n,u,l,e);break l;case 11:n=Sr(null,n,u,l,e);break l;case 14:n=xr(null,n,u,N3(u.type,l),t,e);break l}throw Error(q(306,u,""))}return n;case 0:return t=n.type,u=n.pendingProps,u=n.elementType===t?u:N3(t,u),h9(l,n,t,u,e);case 1:return t=n.type,u=n.pendingProps,u=n.elementType===t?u:N3(t,u),Tr(l,n,t,u,e);case 3:if(Er(n),t=n.updateQueue,l===null||t===null)throw Error(q(282));if(t=n.pendingProps,u=n.memoizedState,u=u!==null?u.element:null,za(l,n),Ce(n,t,null,e),t=n.memoizedState.element,t===u)v8(),n=il(l,n,e);else{if(u=n.stateNode,(r=u.hydrate)&&(Fl=v4(n.stateNode.containerInfo.firstChild),ol=n,r=W3=!0),r){if(l=u.mutableSourceEagerHydrationData,l!=null)for(u=0;u<l.length;u+=2)r=l[u],r._workInProgressVersionPrimary=l[u+1],w4.push(r);for(e=Ka(n,null,t,e),n.child=e;e;)e.flags=e.flags&-3|1024,e=e.sibling}else t3(l,n,t,e),v8();n=n.child}return n;case 5:return pr(n),l===null&&d9(n),t=n.type,u=n.pendingProps,r=l!==null?l.memoizedProps:null,o=u.children,r9(t,u)?o=null:r!==null&&r9(t,r)&&(n.flags|=16),ts(l,n),t3(l,n,o,e),n.child;case 6:return l===null&&d9(n),null;case 13:return Cr(l,n,e);case 4:return c9(n,n.stateNode.containerInfo),t=n.pendingProps,l===null?n.child=O0(n,null,t,e):t3(l,n,t,e),n.child;case 11:return t=n.type,u=n.pendingProps,u=n.elementType===t?u:N3(t,u),Sr(l,n,t,u,e);case 7:return t3(l,n,n.pendingProps,e),n.child;case 8:return t3(l,n,n.pendingProps.children,e),n.child;case 12:return t3(l,n,n.pendingProps.children,e),n.child;case 10:l:{t=n.type._context,u=n.pendingProps,o=n.memoizedProps,r=u.value;var i=n.type._context;if(R2(T0,i._currentValue),i._currentValue=r,o!==null)if(i=o.value,r=S3(i,r)?0:(typeof t._calculateChangedBits=="function"?t._calculateChangedBits(i,r):1073741823)|0,r===0){if(o.children===u.children&&!u3.current){n=il(l,n,e);break l}}else for(i=n.child,i!==null&&(i.return=n);i!==null;){var a=i.dependencies;if(a!==null){o=i.child;for(var s=a.firstContext;s!==null;){if(s.context===t&&(s.observedBits&r)!==0){i.tag===1&&(s=Bl(-1,e&-e),s.tag=2,Ul(i,s)),i.lanes|=e,s=i.alternate,s!==null&&(s.lanes|=e),Ha(i.return,e),a.lanes|=e;break}s=s.next}}else o=i.tag===10&&i.type===n.type?null:i.child;if(o!==null)o.return=i;else for(o=i;o!==null;){if(o===n){o=null;break}if(i=o.sibling,i!==null){i.return=o.return,o=i;break}o=o.return}i=o}t3(l,n,u.children,e),n=n.child}return n;case 9:return u=n.type,r=n.pendingProps,t=r.children,y4(n,e),u=b3(u,r.unstable_observedBits),t=t(u),n.flags|=1,t3(l,n,t,e),n.child;case 14:return u=n.type,r=N3(u,n.pendingProps),r=N3(u.type,r),xr(l,n,u,r,t,e);case 15:return es(l,n,n.type,n.pendingProps,t,e);case 17:return t=n.type,u=n.pendingProps,u=n.elementType===t?u:N3(t,u),l!==null&&(l.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,r3(t)?(l=!0,Q1(n)):l=!1,y4(n,e),Wa(n,t,u),s9(n,t,u,e),p9(null,n,t,!0,l,e);case 19:return Ar(l,n,e);case 23:return y8(l,n,e);case 24:return y8(l,n,e)}throw Error(q(156,n.tag))};function Kp(l,n,e,t){this.tag=l,this.key=e,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=t,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function x3(l,n,e,t){return new Kp(l,n,e,t)}function i7(l){return l=l.prototype,!(!l||!l.isReactComponent)}function qp(l){if(typeof l=="function")return i7(l)?1:0;if(l!=null){if(l=l.$$typeof,l===Y0)return 11;if(l===X0)return 14}return 2}function Yl(l,n){var e=l.alternate;return e===null?(e=x3(l.tag,n,l.key,l.mode),e.elementType=l.elementType,e.type=l.type,e.stateNode=l.stateNode,e.alternate=l,l.alternate=e):(e.pendingProps=n,e.type=l.type,e.flags=0,e.nextEffect=null,e.firstEffect=null,e.lastEffect=null),e.childLanes=l.childLanes,e.lanes=l.lanes,e.child=l.child,e.memoizedProps=l.memoizedProps,e.memoizedState=l.memoizedState,e.updateQueue=l.updateQueue,n=l.dependencies,e.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},e.sibling=l.sibling,e.index=l.index,e.ref=l.ref,e}function l0(l,n,e,t,u,r){var o=2;if(t=l,typeof l=="function")i7(l)&&(o=1);else if(typeof l=="string")o=5;else l:switch(l){case _l:return T4(e.children,u,r,n);case qi:o=8,u|=16;break;case Et:o=8,u|=1;break;case W5:return l=x3(12,e,n,u|8),l.elementType=W5,l.type=W5,l.lanes=r,l;case G5:return l=x3(13,e,n,u),l.type=G5,l.elementType=G5,l.lanes=r,l;case h0:return l=x3(19,e,n,u),l.elementType=h0,l.lanes=r,l;case At:return a7(e,u,r,n);case U8:return l=x3(24,e,n,u),l.elementType=U8,l.lanes=r,l;default:if(typeof l=="object"&&l!==null)switch(l.$$typeof){case Ct:o=10;break l;case bt:o=9;break l;case Y0:o=11;break l;case X0:o=14;break l;case Ot:o=16,t=null;break l;case kt:o=22;break l}throw Error(q(130,l==null?l:typeof l,""))}return n=x3(o,e,n,u),n.elementType=l,n.type=t,n.lanes=r,n}function T4(l,n,e,t){return l=x3(7,l,t,n),l.lanes=e,l}function a7(l,n,e,t){return l=x3(23,l,t,n),l.elementType=At,l.lanes=e,l}function x8(l,n,e){return l=x3(6,l,null,n),l.lanes=e,l}function T8(l,n,e){return n=x3(4,l.children!==null?l.children:[],l.key,n),n.lanes=e,n.stateNode={containerInfo:l.containerInfo,pendingChildren:null,implementation:l.implementation},n}function Qp(l,n,e){this.tag=n,this.containerInfo=l,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=e,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=r8(0),this.expirationTimes=r8(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=r8(0),this.mutableSourceEagerHydrationData=null}function Yp(l,n,e){var t=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:wn,key:t==null?null:""+t,children:l,containerInfo:n,implementation:e}}function F0(l,n,e,t){var u=n.current,r=c3(),o=Hl(u);l:if(e){e=e._reactInternals;n:{if(Hn(e)!==e||e.tag!==1)throw Error(q(170));var i=e;do{switch(i.tag){case 3:i=i.stateNode.context;break n;case 1:if(r3(i.type)){i=i.stateNode.__reactInternalMemoizedMergedChildContext;break n}}i=i.return}while(i!==null);throw Error(q(171))}if(e.tag===1){var a=e.type;if(r3(a)){e=Fa(e,a,i);break l}}e=i}else e=ql;return n.context===null?n.context=e:n.pendingContext=e,n=Bl(r,o),n.payload={element:l},t=t===void 0?null:t,t!==null&&(n.callback=t),Ul(u,n),zl(u,o,r),o}function E8(l){if(l=l.current,!l.child)return null;switch(l.child.tag){case 5:return l.child.stateNode;default:return l.child.stateNode}}function $r(l,n){if(l=l.memoizedState,l!==null&&l.dehydrated!==null){var e=l.retryLane;l.retryLane=e!==0&&e<n?e:n}}function s7(l,n){$r(l,n),(l=l.alternate)&&$r(l,n)}function Xp(){return null}function c7(l,n,e){var t=e!=null&&e.hydrationOptions!=null&&e.hydrationOptions.mutableSources||null;if(e=new Qp(l,n,e!=null&&e.hydrate===!0),n=x3(3,null,null,n===2?7:n===1?3:0),e.current=n,n.stateNode=e,qt(n),l[u5]=e.current,_a(l.nodeType===8?l.parentNode:l),t)for(l=0;l<t.length;l++){n=t[l];var u=n._getVersion;u=u(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,u]:e.mutableSourceEagerHydrationData.push(n,u)}this._internalRoot=e}c7.prototype.render=function(l){F0(l,this._internalRoot,null,null)};c7.prototype.unmount=function(){var l=this._internalRoot,n=l.containerInfo;F0(null,l,null,function(){n[u5]=null})};function Ze(l){return!(!l||l.nodeType!==1&&l.nodeType!==9&&l.nodeType!==11&&(l.nodeType!==8||l.nodeValue!==" react-mount-point-unstable "))}function Jp(l,n){if(n||(n=l?l.nodeType===9?l.documentElement:l.firstChild:null,n=!(!n||n.nodeType!==1||!n.hasAttribute("data-reactroot"))),!n)for(var e;e=l.lastChild;)l.removeChild(e);return new c7(l,0,n?{hydrate:!0}:void 0)}function a6(l,n,e,t,u){var r=e._reactRootContainer;if(r){var o=r._internalRoot;if(typeof u=="function"){var i=u;u=function(){var s=E8(o);i.call(s)}}F0(n,o,l,u)}else{if(r=e._reactRootContainer=Jp(e,t),o=r._internalRoot,typeof u=="function"){var a=u;u=function(){var s=E8(o);a.call(s)}}fs(function(){F0(n,o,l,u)})}return E8(o)}sa=function(l){if(l.tag===13){var n=c3();zl(l,4,n),s7(l,4)}};Mt=function(l){if(l.tag===13){var n=c3();zl(l,67108864,n),s7(l,67108864)}};ca=function(l){if(l.tag===13){var n=c3(),e=Hl(l);zl(l,e,n),s7(l,e)}};da=function(l,n){return n()};X8=function(l,n,e){switch(n){case"input":if(z8(l,e),n=e.name,e.type==="radio"&&n!=null){for(e=l;e.parentNode;)e=e.parentNode;for(e=e.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<e.length;n++){var t=e[n];if(t!==l&&t.form===l.form){var u=t6(t);if(!u)throw Error(q(90));Yi(t),z8(t,u)}}}break;case"textarea":Ji(l,e);break;case"select":n=e.value,n!=null&&p4(l,!!e.multiple,n,!1)}};Rt=ds;ra=function(l,n,e,t,u){var r=p2;p2|=4;try{return Nn(98,l.bind(null,n,e,t,u))}finally{p2=r,p2===0&&(i5(),Y3())}};It=function(){(p2&49)===0&&($p(),sn())};oa=function(l,n){var e=p2;p2|=2;try{return l(n)}finally{p2=e,p2===0&&(i5(),Y3())}};function ws(l,n){var e=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Ze(n))throw Error(q(200));return Yp(l,n,null,e)}var Zp={Events:[Ye,a4,t6,ta,ua,sn,{current:!1}]},_5={findFiberByHostInstance:xn,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},lg={bundleType:_5.bundleType,version:_5.version,rendererPackageName:_5.rendererPackageName,rendererConfig:_5.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Un.ReactCurrentDispatcher,findHostInstanceByFiber:function(l){return l=aa(l),l===null?null:l.stateNode},findFiberByHostInstance:_5.findFiberByHostInstance||Xp,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var M1=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!M1.isDisabled&&M1.supportsFiber)try{Vt=M1.inject(lg),An=M1}catch{}}R3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Zp;R3.createPortal=ws;R3.findDOMNode=function(l){if(l==null)return null;if(l.nodeType===1)return l;var n=l._reactInternals;if(n===void 0)throw typeof l.render=="function"?Error(q(188)):Error(q(268,Object.keys(l)));return l=aa(n),l=l===null?null:l.stateNode,l};R3.flushSync=function(l,n){var e=p2;if((e&48)!==0)return l(n);p2|=1;try{if(l)return Nn(99,l.bind(null,n))}finally{p2=e,Y3()}};R3.hydrate=function(l,n,e){if(!Ze(n))throw Error(q(200));return a6(null,l,n,!0,e)};R3.render=function(l,n,e){if(!Ze(n))throw Error(q(200));return a6(null,l,n,!1,e)};R3.unmountComponentAtNode=function(l){if(!Ze(l))throw Error(q(40));return l._reactRootContainer?(fs(function(){a6(null,null,l,!1,function(){l._reactRootContainer=null,l[u5]=null})}),!0):!1};R3.unstable_batchedUpdates=ds;R3.unstable_createPortal=function(l,n){return ws(l,n,2<arguments.length&&arguments[2]!==void 0?arguments[2]:null)};R3.unstable_renderSubtreeIntoContainer=function(l,n,e,t){if(!Ze(e))throw Error(q(200));if(l==null||l._reactInternals===void 0)throw Error(q(38));return a6(l,n,e,!1,t)};R3.version="17.0.2";function Ss(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Ss)}catch(l){console.error(l)}}Ss(),he.exports=R3;var ng=he.exports;function k9(l,n){return k9=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,u){return t.__proto__=u,t},k9(l,n)}function w2(l,n){l.prototype=Object.create(n.prototype),l.prototype.constructor=l,k9(l,n)}var xs={exports:{}},eg="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",tg=eg,ug=tg;function Ts(){}function Es(){}Es.resetWarningCache=Ts;var rg=function(){function l(t,u,r,o,i,a){if(a!==ug){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}l.isRequired=l;function n(){return l}var e={array:l,bigint:l,bool:l,func:l,number:l,object:l,string:l,symbol:l,any:l,arrayOf:n,element:l,elementType:l,instanceOf:n,node:l,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:Es,resetWarningCache:Ts};return e.PropTypes=e,e};xs.exports=rg();var jr=xs.exports;function H(){return H=Object.assign?Object.assign.bind():function(l){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(l[t]=e[t])}return l},H.apply(this,arguments)}function F1(l){return l.charAt(0)==="/"}function C8(l,n){for(var e=n,t=e+1,u=l.length;t<u;e+=1,t+=1)l[e]=l[t];l.pop()}function og(l,n){n===void 0&&(n="");var e=l&&l.split("/")||[],t=n&&n.split("/")||[],u=l&&F1(l),r=n&&F1(n),o=u||r;if(l&&F1(l)?t=e:e.length&&(t.pop(),t=t.concat(e)),!t.length)return"/";var i;if(t.length){var a=t[t.length-1];i=a==="."||a===".."||a===""}else i=!1;for(var s=0,c=t.length;c>=0;c--){var f=t[c];f==="."?C8(t,c):f===".."?(C8(t,c),s++):s&&(C8(t,c),s--)}if(!o)for(;s--;s)t.unshift("..");o&&t[0]!==""&&(!t[0]||!F1(t[0]))&&t.unshift("");var d=t.join("/");return i&&d.substr(-1)!=="/"&&(d+="/"),d}function Br(l){return l.valueOf?l.valueOf():Object.prototype.valueOf.call(l)}function n0(l,n){if(l===n)return!0;if(l==null||n==null)return!1;if(Array.isArray(l))return Array.isArray(n)&&l.length===n.length&&l.every(function(u,r){return n0(u,n[r])});if(typeof l=="object"||typeof n=="object"){var e=Br(l),t=Br(n);return e!==l||t!==n?n0(e,t):Object.keys(Object.assign({},l,n)).every(function(u){return n0(l[u],n[u])})}return!1}var ig=!0,b8="Invariant failed";function X3(l,n){if(!l){if(ig)throw new Error(b8);var e=typeof n=="function"?n():n,t=e?"".concat(b8,": ").concat(e):b8;throw new Error(t)}}function te(l){return l.charAt(0)==="/"?l:"/"+l}function Ur(l){return l.charAt(0)==="/"?l.substr(1):l}function ag(l,n){return l.toLowerCase().indexOf(n.toLowerCase())===0&&"/?#".indexOf(l.charAt(n.length))!==-1}function Cs(l,n){return ag(l,n)?l.substr(n.length):l}function bs(l){return l.charAt(l.length-1)==="/"?l.slice(0,-1):l}function sg(l){var n=l||"/",e="",t="",u=n.indexOf("#");u!==-1&&(t=n.substr(u),n=n.substr(0,u));var r=n.indexOf("?");return r!==-1&&(e=n.substr(r),n=n.substr(0,r)),{pathname:n,search:e==="?"?"":e,hash:t==="#"?"":t}}function w3(l){var n=l.pathname,e=l.search,t=l.hash,u=n||"/";return e&&e!=="?"&&(u+=e.charAt(0)==="?"?e:"?"+e),t&&t!=="#"&&(u+=t.charAt(0)==="#"?t:"#"+t),u}function J2(l,n,e,t){var u;typeof l=="string"?(u=sg(l),u.state=n):(u=H({},l),u.pathname===void 0&&(u.pathname=""),u.search?u.search.charAt(0)!=="?"&&(u.search="?"+u.search):u.search="",u.hash?u.hash.charAt(0)!=="#"&&(u.hash="#"+u.hash):u.hash="",n!==void 0&&u.state===void 0&&(u.state=n));try{u.pathname=decodeURI(u.pathname)}catch(r){throw r instanceof URIError?new URIError('Pathname "'+u.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):r}return e&&(u.key=e),t?u.pathname?u.pathname.charAt(0)!=="/"&&(u.pathname=og(u.pathname,t.pathname)):u.pathname=t.pathname:u.pathname||(u.pathname="/"),u}function cg(l,n){return l.pathname===n.pathname&&l.search===n.search&&l.hash===n.hash&&l.key===n.key&&n0(l.state,n.state)}function d7(){var l=null;function n(o){return l=o,function(){l===o&&(l=null)}}function e(o,i,a,s){if(l!=null){var c=typeof l=="function"?l(o,i):l;typeof c=="string"?typeof a=="function"?a(c,s):s(!0):s(c!==!1)}else s(!0)}var t=[];function u(o){var i=!0;function a(){i&&o.apply(void 0,arguments)}return t.push(a),function(){i=!1,t=t.filter(function(s){return s!==a})}}function r(){for(var o=arguments.length,i=new Array(o),a=0;a<o;a++)i[a]=arguments[a];t.forEach(function(s){return s.apply(void 0,i)})}return{setPrompt:n,confirmTransitionTo:e,appendListener:u,notifyListeners:r}}var Os=!!(typeof window!="undefined"&&window.document&&window.document.createElement);function ks(l,n){n(window.confirm(l))}function dg(){var l=window.navigator.userAgent;return(l.indexOf("Android 2.")!==-1||l.indexOf("Android 4.0")!==-1)&&l.indexOf("Mobile Safari")!==-1&&l.indexOf("Chrome")===-1&&l.indexOf("Windows Phone")===-1?!1:window.history&&"pushState"in window.history}function fg(){return window.navigator.userAgent.indexOf("Trident")===-1}function hg(){return window.navigator.userAgent.indexOf("Firefox")===-1}function pg(l){return l.state===void 0&&navigator.userAgent.indexOf("CriOS")===-1}var Hr="popstate",zr="hashchange";function Vr(){try{return window.history.state||{}}catch{return{}}}function gg(l){l===void 0&&(l={}),Os||X3(!1);var n=window.history,e=dg(),t=!fg(),u=l,r=u.forceRefresh,o=r===void 0?!1:r,i=u.getUserConfirmation,a=i===void 0?ks:i,s=u.keyLength,c=s===void 0?6:s,f=l.basename?bs(te(l.basename)):"";function d(_){var A=_||{},x=A.key,N=A.state,B=window.location,U=B.pathname,o2=B.search,g2=B.hash,m2=U+o2+g2;return f&&(m2=Cs(m2,f)),J2(m2,N,x)}function h(){return Math.random().toString(36).substr(2,c)}var p=d7();function y(_){H(a2,_),a2.length=n.length,p.notifyListeners(a2.location,a2.action)}function m(_){pg(_)||w(d(_.state))}function g(){w(d(Vr()))}var v=!1;function w(_){if(v)v=!1,y();else{var A="POP";p.confirmTransitionTo(_,A,a,function(x){x?y({action:A,location:_}):S(_)})}}function S(_){var A=a2.location,x=C.indexOf(A.key);x===-1&&(x=0);var N=C.indexOf(_.key);N===-1&&(N=0);var B=x-N;B&&(v=!0,K(B))}var I=d(Vr()),C=[I.key];function D(_){return f+w3(_)}function F(_,A){var x="PUSH",N=J2(_,A,h(),a2.location);p.confirmTransitionTo(N,x,a,function(B){if(!!B){var U=D(N),o2=N.key,g2=N.state;if(e)if(n.pushState({key:o2,state:g2},null,U),o)window.location.href=U;else{var m2=C.indexOf(a2.location.key),S2=C.slice(0,m2+1);S2.push(N.key),C=S2,y({action:x,location:N})}else window.location.href=U}})}function j(_,A){var x="REPLACE",N=J2(_,A,h(),a2.location);p.confirmTransitionTo(N,x,a,function(B){if(!!B){var U=D(N),o2=N.key,g2=N.state;if(e)if(n.replaceState({key:o2,state:g2},null,U),o)window.location.replace(U);else{var m2=C.indexOf(a2.location.key);m2!==-1&&(C[m2]=N.key),y({action:x,location:N})}else window.location.replace(U)}})}function K(_){n.go(_)}function X(){K(-1)}function n2(){K(1)}var Z=0;function b(_){Z+=_,Z===1&&_===1?(window.addEventListener(Hr,m),t&&window.addEventListener(zr,g)):Z===0&&(window.removeEventListener(Hr,m),t&&window.removeEventListener(zr,g))}var L=!1;function Y(_){_===void 0&&(_=!1);var A=p.setPrompt(_);return L||(b(1),L=!0),function(){return L&&(L=!1,b(-1)),A()}}function c2(_){var A=p.appendListener(_);return b(1),function(){b(-1),A()}}var a2={length:n.length,action:"POP",location:I,createHref:D,push:F,replace:j,go:K,goBack:X,goForward:n2,block:Y,listen:c2};return a2}var Wr="hashchange",mg={hashbang:{encodePath:function(n){return n.charAt(0)==="!"?n:"!/"+Ur(n)},decodePath:function(n){return n.charAt(0)==="!"?n.substr(1):n}},noslash:{encodePath:Ur,decodePath:te},slash:{encodePath:te,decodePath:te}};function Ps(l){var n=l.indexOf("#");return n===-1?l:l.slice(0,n)}function R5(){var l=window.location.href,n=l.indexOf("#");return n===-1?"":l.substring(n+1)}function vg(l){window.location.hash=l}function O8(l){window.location.replace(Ps(window.location.href)+"#"+l)}function yg(l){l===void 0&&(l={}),Os||X3(!1);var n=window.history;hg();var e=l,t=e.getUserConfirmation,u=t===void 0?ks:t,r=e.hashType,o=r===void 0?"slash":r,i=l.basename?bs(te(l.basename)):"",a=mg[o],s=a.encodePath,c=a.decodePath;function f(){var A=c(R5());return i&&(A=Cs(A,i)),J2(A)}var d=d7();function h(A){H(_,A),_.length=n.length,d.notifyListeners(_.location,_.action)}var p=!1,y=null;function m(A,x){return A.pathname===x.pathname&&A.search===x.search&&A.hash===x.hash}function g(){var A=R5(),x=s(A);if(A!==x)O8(x);else{var N=f(),B=_.location;if(!p&&m(B,N)||y===w3(N))return;y=null,v(N)}}function v(A){if(p)p=!1,h();else{var x="POP";d.confirmTransitionTo(A,x,u,function(N){N?h({action:x,location:A}):w(A)})}}function w(A){var x=_.location,N=D.lastIndexOf(w3(x));N===-1&&(N=0);var B=D.lastIndexOf(w3(A));B===-1&&(B=0);var U=N-B;U&&(p=!0,X(U))}var S=R5(),I=s(S);S!==I&&O8(I);var C=f(),D=[w3(C)];function F(A){var x=document.querySelector("base"),N="";return x&&x.getAttribute("href")&&(N=Ps(window.location.href)),N+"#"+s(i+w3(A))}function j(A,x){var N="PUSH",B=J2(A,void 0,void 0,_.location);d.confirmTransitionTo(B,N,u,function(U){if(!!U){var o2=w3(B),g2=s(i+o2),m2=R5()!==g2;if(m2){y=o2,vg(g2);var S2=D.lastIndexOf(w3(_.location)),A2=D.slice(0,S2+1);A2.push(o2),D=A2,h({action:N,location:B})}else h()}})}function K(A,x){var N="REPLACE",B=J2(A,void 0,void 0,_.location);d.confirmTransitionTo(B,N,u,function(U){if(!!U){var o2=w3(B),g2=s(i+o2),m2=R5()!==g2;m2&&(y=o2,O8(g2));var S2=D.indexOf(w3(_.location));S2!==-1&&(D[S2]=o2),h({action:N,location:B})}})}function X(A){n.go(A)}function n2(){X(-1)}function Z(){X(1)}var b=0;function L(A){b+=A,b===1&&A===1?window.addEventListener(Wr,g):b===0&&window.removeEventListener(Wr,g)}var Y=!1;function c2(A){A===void 0&&(A=!1);var x=d.setPrompt(A);return Y||(L(1),Y=!0),function(){return Y&&(Y=!1,L(-1)),x()}}function a2(A){var x=d.appendListener(A);return L(1),function(){L(-1),x()}}var _={length:n.length,action:"POP",location:C,createHref:F,push:j,replace:K,go:X,goBack:n2,goForward:Z,block:c2,listen:a2};return _}function Gr(l,n,e){return Math.min(Math.max(l,n),e)}function wg(l){l===void 0&&(l={});var n=l,e=n.getUserConfirmation,t=n.initialEntries,u=t===void 0?["/"]:t,r=n.initialIndex,o=r===void 0?0:r,i=n.keyLength,a=i===void 0?6:i,s=d7();function c(F){H(D,F),D.length=D.entries.length,s.notifyListeners(D.location,D.action)}function f(){return Math.random().toString(36).substr(2,a)}var d=Gr(o,0,u.length-1),h=u.map(function(F){return typeof F=="string"?J2(F,void 0,f()):J2(F,void 0,F.key||f())}),p=w3;function y(F,j){var K="PUSH",X=J2(F,j,f(),D.location);s.confirmTransitionTo(X,K,e,function(n2){if(!!n2){var Z=D.index,b=Z+1,L=D.entries.slice(0);L.length>b?L.splice(b,L.length-b,X):L.push(X),c({action:K,location:X,index:b,entries:L})}})}function m(F,j){var K="REPLACE",X=J2(F,j,f(),D.location);s.confirmTransitionTo(X,K,e,function(n2){!n2||(D.entries[D.index]=X,c({action:K,location:X}))})}function g(F){var j=Gr(D.index+F,0,D.entries.length-1),K="POP",X=D.entries[j];s.confirmTransitionTo(X,K,e,function(n2){n2?c({action:K,location:X,index:j}):c()})}function v(){g(-1)}function w(){g(1)}function S(F){var j=D.index+F;return j>=0&&j<D.entries.length}function I(F){return F===void 0&&(F=!1),s.setPrompt(F)}function C(F){return s.appendListener(F)}var D={length:h.length,action:"POP",location:h[d],index:d,entries:h,createHref:p,push:y,replace:m,go:g,goBack:v,goForward:w,canGo:S,block:I,listen:C};return D}var k8=1073741823,Kr=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:{};function Sg(){var l="__global_unique_id__";return Kr[l]=(Kr[l]||0)+1}function xg(l,n){return l===n?l!==0||1/l===1/n:l!==l&&n!==n}function Tg(l){var n=[];return{on:function(t){n.push(t)},off:function(t){n=n.filter(function(u){return u!==t})},get:function(){return l},set:function(t,u){l=t,n.forEach(function(r){return r(l,u)})}}}function Eg(l){return Array.isArray(l)?l[0]:l}function Cg(l,n){var e,t,u="__create-react-context-"+Sg()+"__",r=function(i){w2(a,i);function a(){var c;return c=i.apply(this,arguments)||this,c.emitter=Tg(c.props.value),c}var s=a.prototype;return s.getChildContext=function(){var f;return f={},f[u]=this.emitter,f},s.componentWillReceiveProps=function(f){if(this.props.value!==f.value){var d=this.props.value,h=f.value,p;xg(d,h)?p=0:(p=typeof n=="function"?n(d,h):k8,p|=0,p!==0&&this.emitter.set(f.value,p))}},s.render=function(){return this.props.children},a}(W.exports.Component);r.childContextTypes=(e={},e[u]=jr.object.isRequired,e);var o=function(i){w2(a,i);function a(){var c;return c=i.apply(this,arguments)||this,c.state={value:c.getValue()},c.onUpdate=function(f,d){var h=c.observedBits|0;(h&d)!==0&&c.setState({value:c.getValue()})},c}var s=a.prototype;return s.componentWillReceiveProps=function(f){var d=f.observedBits;this.observedBits=d==null?k8:d},s.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var f=this.props.observedBits;this.observedBits=f==null?k8:f},s.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},s.getValue=function(){return this.context[u]?this.context[u].get():l},s.render=function(){return Eg(this.props.children)(this.state.value)},a}(W.exports.Component);return o.contextTypes=(t={},t[u]=jr.object,t),{Provider:r,Consumer:o}}var As=$.createContext||Cg,a5={exports:{}},bg=Array.isArray||function(l){return Object.prototype.toString.call(l)=="[object Array]"},L0=bg;a5.exports=Is;a5.exports.parse=f7;a5.exports.compile=kg;a5.exports.tokensToFunction=_s;a5.exports.tokensToRegExp=Rs;var Og=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function f7(l,n){for(var e=[],t=0,u=0,r="",o=n&&n.delimiter||"/",i;(i=Og.exec(l))!=null;){var a=i[0],s=i[1],c=i.index;if(r+=l.slice(u,c),u=c+a.length,s){r+=s[1];continue}var f=l[u],d=i[2],h=i[3],p=i[4],y=i[5],m=i[6],g=i[7];r&&(e.push(r),r="");var v=d!=null&&f!=null&&f!==d,w=m==="+"||m==="*",S=m==="?"||m==="*",I=i[2]||o,C=p||y;e.push({name:h||t++,prefix:d||"",delimiter:I,optional:S,repeat:w,partial:v,asterisk:!!g,pattern:C?_g(C):g?".*":"[^"+e0(I)+"]+?"})}return u<l.length&&(r+=l.substr(u)),r&&e.push(r),e}function kg(l,n){return _s(f7(l,n),n)}function Pg(l){return encodeURI(l).replace(/[\/?#]/g,function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})}function Ag(l){return encodeURI(l).replace(/[?#]/g,function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})}function _s(l,n){for(var e=new Array(l.length),t=0;t<l.length;t++)typeof l[t]=="object"&&(e[t]=new RegExp("^(?:"+l[t].pattern+")$",p7(n)));return function(u,r){for(var o="",i=u||{},a=r||{},s=a.pretty?Pg:encodeURIComponent,c=0;c<l.length;c++){var f=l[c];if(typeof f=="string"){o+=f;continue}var d=i[f.name],h;if(d==null)if(f.optional){f.partial&&(o+=f.prefix);continue}else throw new TypeError('Expected "'+f.name+'" to be defined');if(L0(d)){if(!f.repeat)throw new TypeError('Expected "'+f.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(d.length===0){if(f.optional)continue;throw new TypeError('Expected "'+f.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(h=s(d[p]),!e[c].test(h))throw new TypeError('Expected all "'+f.name+'" to match "'+f.pattern+'", but received `'+JSON.stringify(h)+"`");o+=(p===0?f.prefix:f.delimiter)+h}continue}if(h=f.asterisk?Ag(d):s(d),!e[c].test(h))throw new TypeError('Expected "'+f.name+'" to match "'+f.pattern+'", but received "'+h+'"');o+=f.prefix+h}return o}}function e0(l){return l.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function _g(l){return l.replace(/([=!:$\/()])/g,"\\$1")}function h7(l,n){return l.keys=n,l}function p7(l){return l&&l.sensitive?"":"i"}function Rg(l,n){var e=l.source.match(/\((?!\?)/g);if(e)for(var t=0;t<e.length;t++)n.push({name:t,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return h7(l,n)}function Ig(l,n,e){for(var t=[],u=0;u<l.length;u++)t.push(Is(l[u],n,e).source);var r=new RegExp("(?:"+t.join("|")+")",p7(e));return h7(r,n)}function Ng(l,n,e){return Rs(f7(l,e),n,e)}function Rs(l,n,e){L0(n)||(e=n||e,n=[]),e=e||{};for(var t=e.strict,u=e.end!==!1,r="",o=0;o<l.length;o++){var i=l[o];if(typeof i=="string")r+=e0(i);else{var a=e0(i.prefix),s="(?:"+i.pattern+")";n.push(i),i.repeat&&(s+="(?:"+a+s+")*"),i.optional?i.partial?s=a+"("+s+")?":s="(?:"+a+"("+s+"))?":s=a+"("+s+")",r+=s}}var c=e0(e.delimiter||"/"),f=r.slice(-c.length)===c;return t||(r=(f?r.slice(0,-c.length):r)+"(?:"+c+"(?=$))?"),u?r+="$":r+=t&&f?"":"(?="+c+"|$)",h7(new RegExp("^"+r,p7(e)),n)}function Is(l,n,e){return L0(n)||(e=n||e,n=[]),e=e||{},l instanceof RegExp?Rg(l,n):L0(l)?Ig(l,n,e):Ng(l,n,e)}var Ns=a5.exports,g7={exports:{}},x2={};/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var U2=typeof Symbol=="function"&&Symbol.for,m7=U2?Symbol.for("react.element"):60103,v7=U2?Symbol.for("react.portal"):60106,s6=U2?Symbol.for("react.fragment"):60107,c6=U2?Symbol.for("react.strict_mode"):60108,d6=U2?Symbol.for("react.profiler"):60114,f6=U2?Symbol.for("react.provider"):60109,h6=U2?Symbol.for("react.context"):60110,y7=U2?Symbol.for("react.async_mode"):60111,p6=U2?Symbol.for("react.concurrent_mode"):60111,g6=U2?Symbol.for("react.forward_ref"):60112,m6=U2?Symbol.for("react.suspense"):60113,Mg=U2?Symbol.for("react.suspense_list"):60120,v6=U2?Symbol.for("react.memo"):60115,y6=U2?Symbol.for("react.lazy"):60116,Fg=U2?Symbol.for("react.block"):60121,Lg=U2?Symbol.for("react.fundamental"):60117,Dg=U2?Symbol.for("react.responder"):60118,$g=U2?Symbol.for("react.scope"):60119;function g3(l){if(typeof l=="object"&&l!==null){var n=l.$$typeof;switch(n){case m7:switch(l=l.type,l){case y7:case p6:case s6:case d6:case c6:case m6:return l;default:switch(l=l&&l.$$typeof,l){case h6:case g6:case y6:case v6:case f6:return l;default:return n}}case v7:return n}}}function Ms(l){return g3(l)===p6}x2.AsyncMode=y7;x2.ConcurrentMode=p6;x2.ContextConsumer=h6;x2.ContextProvider=f6;x2.Element=m7;x2.ForwardRef=g6;x2.Fragment=s6;x2.Lazy=y6;x2.Memo=v6;x2.Portal=v7;x2.Profiler=d6;x2.StrictMode=c6;x2.Suspense=m6;x2.isAsyncMode=function(l){return Ms(l)||g3(l)===y7};x2.isConcurrentMode=Ms;x2.isContextConsumer=function(l){return g3(l)===h6};x2.isContextProvider=function(l){return g3(l)===f6};x2.isElement=function(l){return typeof l=="object"&&l!==null&&l.$$typeof===m7};x2.isForwardRef=function(l){return g3(l)===g6};x2.isFragment=function(l){return g3(l)===s6};x2.isLazy=function(l){return g3(l)===y6};x2.isMemo=function(l){return g3(l)===v6};x2.isPortal=function(l){return g3(l)===v7};x2.isProfiler=function(l){return g3(l)===d6};x2.isStrictMode=function(l){return g3(l)===c6};x2.isSuspense=function(l){return g3(l)===m6};x2.isValidElementType=function(l){return typeof l=="string"||typeof l=="function"||l===s6||l===p6||l===d6||l===c6||l===m6||l===Mg||typeof l=="object"&&l!==null&&(l.$$typeof===y6||l.$$typeof===v6||l.$$typeof===f6||l.$$typeof===h6||l.$$typeof===g6||l.$$typeof===Lg||l.$$typeof===Dg||l.$$typeof===$g||l.$$typeof===Fg)};x2.typeOf=g3;g7.exports=x2;function Vn(l,n){if(l==null)return{};var e={},t=Object.keys(l),u,r;for(r=0;r<t.length;r++)u=t[r],!(n.indexOf(u)>=0)&&(e[u]=l[u]);return e}var w7=g7.exports,jg={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},Bg={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},Ug={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Fs={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},S7={};S7[w7.ForwardRef]=Ug;S7[w7.Memo]=Fs;function qr(l){return w7.isMemo(l)?Fs:S7[l.$$typeof]||jg}var Hg=Object.defineProperty,zg=Object.getOwnPropertyNames,Qr=Object.getOwnPropertySymbols,Vg=Object.getOwnPropertyDescriptor,Wg=Object.getPrototypeOf,Yr=Object.prototype;function Ls(l,n,e){if(typeof n!="string"){if(Yr){var t=Wg(n);t&&t!==Yr&&Ls(l,t,e)}var u=zg(n);Qr&&(u=u.concat(Qr(n)));for(var r=qr(l),o=qr(n),i=0;i<u.length;++i){var a=u[i];if(!Bg[a]&&!(e&&e[a])&&!(o&&o[a])&&!(r&&r[a])){var s=Vg(n,a);try{Hg(l,a,s)}catch{}}}}return l}var Gg=Ls,Ds=Gg,Kg=function(n){var e=As();return e.displayName=n,e},$s=Kg("Router-History"),qg=function(n){var e=As();return e.displayName=n,e},k3=qg("Router"),l1=function(l){w2(n,l),n.computeRootMatch=function(u){return{path:"/",url:"/",params:{},isExact:u==="/"}};function n(t){var u;return u=l.call(this,t)||this,u.state={location:t.history.location},u._isMounted=!1,u._pendingLocation=null,t.staticContext||(u.unlisten=t.history.listen(function(r){u._isMounted?u.setState({location:r}):u._pendingLocation=r})),u}var e=n.prototype;return e.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},e.componentWillUnmount=function(){this.unlisten&&this.unlisten()},e.render=function(){return $.createElement(k3.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},$.createElement($s.Provider,{children:this.props.children||null,value:this.props.history}))},n}($.Component),Qg=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.history=wg(t.props),t}var e=n.prototype;return e.render=function(){return $.createElement(l1,{history:this.history,children:this.props.children})},n}($.Component),js=function(l){w2(n,l);function n(){return l.apply(this,arguments)||this}var e=n.prototype;return e.componentDidMount=function(){this.props.onMount&&this.props.onMount.call(this,this)},e.componentDidUpdate=function(u){this.props.onUpdate&&this.props.onUpdate.call(this,this,u)},e.componentWillUnmount=function(){this.props.onUnmount&&this.props.onUnmount.call(this,this)},e.render=function(){return null},n}($.Component);function Yg(l){var n=l.message,e=l.when,t=e===void 0?!0:e;return $.createElement(k3.Consumer,null,function(u){if(u||X3(!1),!t||u.staticContext)return null;var r=u.history.block;return $.createElement(js,{onMount:function(i){i.release=r(n)},onUpdate:function(i,a){a.message!==n&&(i.release(),i.release=r(n))},onUnmount:function(i){i.release()},message:n})})}var P8={},Xg=1e4,Xr=0;function Jg(l){if(P8[l])return P8[l];var n=Ns.compile(l);return Xr<Xg&&(P8[l]=n,Xr++),n}function P9(l,n){return l===void 0&&(l="/"),n===void 0&&(n={}),l==="/"?l:Jg(l)(n,{pretty:!0})}function Zg(l){var n=l.computedMatch,e=l.to,t=l.push,u=t===void 0?!1:t;return $.createElement(k3.Consumer,null,function(r){r||X3(!1);var o=r.history,i=r.staticContext,a=u?o.push:o.replace,s=J2(n?typeof e=="string"?P9(e,n.params):H({},e,{pathname:P9(e.pathname,n.params)}):e);return i?(a(s),null):$.createElement(js,{onMount:function(){a(s)},onUpdate:function(f,d){var h=J2(d.to);cg(h,H({},s,{key:h.key}))||a(s)},to:e})})}var Jr={},lm=1e4,Zr=0;function nm(l,n){var e=""+n.end+n.strict+n.sensitive,t=Jr[e]||(Jr[e]={});if(t[l])return t[l];var u=[],r=Ns(l,u,n),o={regexp:r,keys:u};return Zr<lm&&(t[l]=o,Zr++),o}function n1(l,n){n===void 0&&(n={}),(typeof n=="string"||Array.isArray(n))&&(n={path:n});var e=n,t=e.path,u=e.exact,r=u===void 0?!1:u,o=e.strict,i=o===void 0?!1:o,a=e.sensitive,s=a===void 0?!1:a,c=[].concat(t);return c.reduce(function(f,d){if(!d&&d!=="")return null;if(f)return f;var h=nm(d,{end:r,strict:i,sensitive:s}),p=h.regexp,y=h.keys,m=p.exec(l);if(!m)return null;var g=m[0],v=m.slice(1),w=l===g;return r&&!w?null:{path:d,url:d==="/"&&g===""?"/":g,isExact:w,params:y.reduce(function(S,I,C){return S[I.name]=v[C],S},{})}},null)}var yn=function(l){w2(n,l);function n(){return l.apply(this,arguments)||this}var e=n.prototype;return e.render=function(){var u=this;return $.createElement(k3.Consumer,null,function(r){r||X3(!1);var o=u.props.location||r.location,i=u.props.computedMatch?u.props.computedMatch:u.props.path?n1(o.pathname,u.props):r.match,a=H({},r,{location:o,match:i}),s=u.props,c=s.children,f=s.component,d=s.render;return Array.isArray(c)&&c.length===0&&(c=null),$.createElement(k3.Provider,{value:a},a.match?c?typeof c=="function"?c(a):c:f?$.createElement(f,a):d?d(a):null:typeof c=="function"?c(a):null)})},n}($.Component);function x7(l){return l.charAt(0)==="/"?l:"/"+l}function em(l,n){return l?H({},n,{pathname:x7(l)+n.pathname}):n}function tm(l,n){if(!l)return n;var e=x7(l);return n.pathname.indexOf(e)!==0?n:H({},n,{pathname:n.pathname.substr(e.length)})}function lo(l){return typeof l=="string"?l:w3(l)}function A8(l){return function(){X3(!1)}}function no(){}var um=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handlePush=function(i){return t.navigateTo(i,"PUSH")},t.handleReplace=function(i){return t.navigateTo(i,"REPLACE")},t.handleListen=function(){return no},t.handleBlock=function(){return no},t}var e=n.prototype;return e.navigateTo=function(u,r){var o=this.props,i=o.basename,a=i===void 0?"":i,s=o.context,c=s===void 0?{}:s;c.action=r,c.location=em(a,J2(u)),c.url=lo(c.location)},e.render=function(){var u=this.props,r=u.basename,o=r===void 0?"":r,i=u.context,a=i===void 0?{}:i,s=u.location,c=s===void 0?"/":s,f=Vn(u,["basename","context","location"]),d={createHref:function(p){return x7(o+lo(p))},action:"POP",location:tm(o,J2(c)),push:this.handlePush,replace:this.handleReplace,go:A8(),goBack:A8(),goForward:A8(),listen:this.handleListen,block:this.handleBlock};return $.createElement(l1,H({},f,{history:d,staticContext:a}))},n}($.Component),Bs=function(l){w2(n,l);function n(){return l.apply(this,arguments)||this}var e=n.prototype;return e.render=function(){var u=this;return $.createElement(k3.Consumer,null,function(r){r||X3(!1);var o=u.props.location||r.location,i,a;return $.Children.forEach(u.props.children,function(s){if(a==null&&$.isValidElement(s)){i=s;var c=s.props.path||s.props.from;a=c?n1(o.pathname,H({},s.props,{path:c})):r.match}}),a?$.cloneElement(i,{location:o,computedMatch:a}):null})},n}($.Component);function rm(l){var n="withRouter("+(l.displayName||l.name)+")",e=function(u){var r=u.wrappedComponentRef,o=Vn(u,["wrappedComponentRef"]);return $.createElement(k3.Consumer,null,function(i){return i||X3(!1),$.createElement(l,H({},o,i,{ref:r}))})};return e.displayName=n,e.WrappedComponent=l,Ds(e,l)}var w6=$.useContext;function e1(){return w6($s)}function Us(){return w6(k3).location}function om(){var l=w6(k3).match;return l?l.params:{}}function im(l){var n=Us(),e=w6(k3).match;return l?n1(n.pathname,l):e}var Hs=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.history=gg(t.props),t}var e=n.prototype;return e.render=function(){return $.createElement(l1,{history:this.history,children:this.props.children})},n}($.Component),am=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.history=yg(t.props),t}var e=n.prototype;return e.render=function(){return $.createElement(l1,{history:this.history,children:this.props.children})},n}($.Component),A9=function(n,e){return typeof n=="function"?n(e):n},zs=function(n,e){return typeof n=="string"?J2(n,null,null,e):n},T7=function(n){return n},R4=$.forwardRef;typeof R4=="undefined"&&(R4=T7);function sm(l){return!!(l.metaKey||l.altKey||l.ctrlKey||l.shiftKey)}var cm=R4(function(l,n){var e=l.innerRef,t=l.navigate,u=l.onClick,r=Vn(l,["innerRef","navigate","onClick"]),o=r.target,i=H({},r,{onClick:function(s){try{u&&u(s)}catch(c){throw s.preventDefault(),c}!s.defaultPrevented&&s.button===0&&(!o||o==="_self")&&!sm(s)&&(s.preventDefault(),t())}});return T7!==R4?i.ref=n||e:i.ref=e,$.createElement("a",i)}),ue=R4(function(l,n){var e=l.component,t=e===void 0?cm:e,u=l.replace,r=l.to,o=l.innerRef,i=Vn(l,["component","replace","to","innerRef"]);return $.createElement(k3.Consumer,null,function(a){a||X3(!1);var s=a.history,c=zs(A9(r,a.location),a.location),f=c?s.createHref(c):"",d=H({},i,{href:f,navigate:function(){var p=A9(r,a.location),y=u?s.replace:s.push;y(p)}});return T7!==R4?d.ref=n||o:d.innerRef=o,$.createElement(t,d)})}),Vs=function(n){return n},D0=$.forwardRef;typeof D0=="undefined"&&(D0=Vs);function dm(){for(var l=arguments.length,n=new Array(l),e=0;e<l;e++)n[e]=arguments[e];return n.filter(function(t){return t}).join(" ")}var fm=D0(function(l,n){var e=l["aria-current"],t=e===void 0?"page":e,u=l.activeClassName,r=u===void 0?"active":u,o=l.activeStyle,i=l.className,a=l.exact,s=l.isActive,c=l.location,f=l.sensitive,d=l.strict,h=l.style,p=l.to,y=l.innerRef,m=Vn(l,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return $.createElement(k3.Consumer,null,function(g){g||X3(!1);var v=c||g.location,w=zs(A9(p,v),v),S=w.pathname,I=S&&S.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),C=I?n1(v.pathname,{path:I,exact:a,sensitive:f,strict:d}):null,D=!!(s?s(C,v):C),F=D?dm(i,r):i,j=D?H({},h,{},o):h,K=H({"aria-current":D&&t||null,className:F,style:j,to:w},m);return Vs!==D0?K.ref=n||y:K.innerRef=y,$.createElement(ue,K)})}),_8=Object.freeze(Object.defineProperty({__proto__:null,BrowserRouter:Hs,HashRouter:am,Link:ue,NavLink:fm,MemoryRouter:Qg,Prompt:Yg,Redirect:Zg,Route:yn,Router:l1,StaticRouter:um,Switch:Bs,generatePath:P9,matchPath:n1,useHistory:e1,useLocation:Us,useParams:om,useRouteMatch:im,withRouter:rm},Symbol.toStringTag,{value:"Module"})),Ws={exports:{}},Gs={exports:{}};(function(l){(function(n){l.exports&&(l.exports=n),n["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}})(pt||{})})(Gs);(function(l){(function(n){l.exports&&!n["encoding-indexes"]&&(n["encoding-indexes"]=Gs.exports["encoding-indexes"]);function e(O,M,T){return M<=O&&O<=T}function t(O,M){return O.indexOf(M)!==-1}var u=Math.floor;function r(O){if(O===void 0)return{};if(O===Object(O))return O;throw TypeError("Could not convert argument to dictionary")}function o(O){for(var M=String(O),T=M.length,P=0,k=[];P<T;){var V=M.charCodeAt(P);if(V<55296||V>57343)k.push(V);else if(56320<=V&&V<=57343)k.push(65533);else if(55296<=V&&V<=56319)if(P===T-1)k.push(65533);else{var G=M.charCodeAt(P+1);if(56320<=G&&G<=57343){var h2=V&1023,J=G&1023;k.push(65536+(h2<<10)+J),P+=1}else k.push(65533)}P+=1}return k}function i(O){for(var M="",T=0;T<O.length;++T){var P=O[T];P<=65535?M+=String.fromCharCode(P):(P-=65536,M+=String.fromCharCode((P>>10)+55296,(P&1023)+56320))}return M}function a(O){return 0<=O&&O<=127}var s=a,c=-1;function f(O){this.tokens=[].slice.call(O),this.tokens.reverse()}f.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():c},prepend:function(O){if(Array.isArray(O))for(var M=O;M.length;)this.tokens.push(M.pop());else this.tokens.push(O)},push:function(O){if(Array.isArray(O))for(var M=O;M.length;)this.tokens.unshift(M.shift());else this.tokens.unshift(O)}};var d=-1;function h(O,M){if(O)throw TypeError("Decoder error");return M||65533}function p(O){throw TypeError("The code point "+O+" could not be encoded.")}function y(O){return O=String(O).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(g,O)?g[O]:null}var m=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],g={};m.forEach(function(O){O.encodings.forEach(function(M){M.labels.forEach(function(T){g[T]=M})})});var v={},w={};function S(O,M){return M&&M[O]||null}function I(O,M){var T=M.indexOf(O);return T===-1?null:T}function C(O){if(!("encoding-indexes"in n))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return n["encoding-indexes"][O]}function D(O){if(O>39419&&O<189e3||O>1237575)return null;if(O===7457)return 59335;var M=0,T=0,P=C("gb18030-ranges"),k;for(k=0;k<P.length;++k){var V=P[k];if(V[0]<=O)M=V[0],T=V[1];else break}return T+O-M}function F(O){if(O===59335)return 7457;var M=0,T=0,P=C("gb18030-ranges"),k;for(k=0;k<P.length;++k){var V=P[k];if(V[1]<=O)M=V[1],T=V[0];else break}return T+O-M}function j(O){K=K||C("jis0208").map(function(T,P){return e(P,8272,8835)?null:T});var M=K;return M.indexOf(O)}var K;function X(O){n2=n2||C("big5").map(function(T,P){return P<(161-129)*157?null:T});var M=n2;return O===9552||O===9566||O===9569||O===9578||O===21313||O===21317?M.lastIndexOf(O):I(O,M)}var n2,Z="utf-8";function b(O,M){if(!(this instanceof b))throw TypeError("Called as a function. Did you forget 'new'?");O=O!==void 0?String(O):Z,M=r(M),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var T=y(O);if(T===null||T.name==="replacement")throw RangeError("Unknown encoding: "+O);if(!w[T.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var P=this;return P._encoding=T,Boolean(M.fatal)&&(P._error_mode="fatal"),Boolean(M.ignoreBOM)&&(P._ignoreBOM=!0),Object.defineProperty||(this.encoding=P._encoding.name.toLowerCase(),this.fatal=P._error_mode==="fatal",this.ignoreBOM=P._ignoreBOM),P}Object.defineProperty&&(Object.defineProperty(b.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(b.prototype,"fatal",{get:function(){return this._error_mode==="fatal"}}),Object.defineProperty(b.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),b.prototype.decode=function(M,T){var P;typeof M=="object"&&M instanceof ArrayBuffer?P=new Uint8Array(M):typeof M=="object"&&"buffer"in M&&M.buffer instanceof ArrayBuffer?P=new Uint8Array(M.buffer,M.byteOffset,M.byteLength):P=new Uint8Array(0),T=r(T),this._do_not_flush||(this._decoder=w[this._encoding.name]({fatal:this._error_mode==="fatal"}),this._BOMseen=!1),this._do_not_flush=Boolean(T.stream);for(var k=new f(P),V=[],G;;){var h2=k.read();if(h2===c||(G=this._decoder.handler(k,h2),G===d))break;G!==null&&(Array.isArray(G)?V.push.apply(V,G):V.push(G))}if(!this._do_not_flush){do{if(G=this._decoder.handler(k,k.read()),G===d)break;G!==null&&(Array.isArray(G)?V.push.apply(V,G):V.push(G))}while(!k.endOfStream());this._decoder=null}function J(D2){return t(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen&&(D2.length>0&&D2[0]===65279?(this._BOMseen=!0,D2.shift()):D2.length>0&&(this._BOMseen=!0)),i(D2)}return J.call(this,V)};function L(O,M){if(!(this instanceof L))throw TypeError("Called as a function. Did you forget 'new'?");M=r(M),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(M.fatal)?"fatal":"replacement";var T=this;if(Boolean(M.NONSTANDARD_allowLegacyEncoding)){O=O!==void 0?String(O):Z;var P=y(O);if(P===null||P.name==="replacement")throw RangeError("Unknown encoding: "+O);if(!v[P.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");T._encoding=P}else T._encoding=y("utf-8"),O!==void 0&&"console"in n&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=T._encoding.name.toLowerCase()),T}Object.defineProperty&&Object.defineProperty(L.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),L.prototype.encode=function(M,T){M=M===void 0?"":String(M),T=r(T),this._do_not_flush||(this._encoder=v[this._encoding.name]({fatal:this._fatal==="fatal"})),this._do_not_flush=Boolean(T.stream);for(var P=new f(o(M)),k=[],V;;){var G=P.read();if(G===c||(V=this._encoder.handler(P,G),V===d))break;Array.isArray(V)?k.push.apply(k,V):k.push(V)}if(!this._do_not_flush){for(;V=this._encoder.handler(P,P.read()),V!==d;)Array.isArray(V)?k.push.apply(k,V):k.push(V);this._encoder=null}return new Uint8Array(k)};function Y(O){var M=O.fatal,T=0,P=0,k=0,V=128,G=191;this.handler=function(h2,J){if(J===c&&k!==0)return k=0,h(M);if(J===c)return d;if(k===0){if(e(J,0,127))return J;if(e(J,194,223))k=1,T=J&31;else if(e(J,224,239))J===224&&(V=160),J===237&&(G=159),k=2,T=J&15;else if(e(J,240,244))J===240&&(V=144),J===244&&(G=143),k=3,T=J&7;else return h(M);return null}if(!e(J,V,G))return T=k=P=0,V=128,G=191,h2.prepend(J),h(M);if(V=128,G=191,T=T<<6|J&63,P+=1,P!==k)return null;var D2=T;return T=k=P=0,D2}}function c2(O){O.fatal,this.handler=function(M,T){if(T===c)return d;if(s(T))return T;var P,k;e(T,128,2047)?(P=1,k=192):e(T,2048,65535)?(P=2,k=224):e(T,65536,1114111)&&(P=3,k=240);for(var V=[(T>>6*P)+k];P>0;){var G=T>>6*(P-1);V.push(128|G&63),P-=1}return V}}v["UTF-8"]=function(O){return new c2(O)},w["UTF-8"]=function(O){return new Y(O)};function a2(O,M){var T=M.fatal;this.handler=function(P,k){if(k===c)return d;if(a(k))return k;var V=O[k-128];return V===null?h(T):V}}function _(O,M){M.fatal,this.handler=function(T,P){if(P===c)return d;if(s(P))return P;var k=I(P,O);return k===null&&p(P),k+128}}(function(){"encoding-indexes"in n&&m.forEach(function(O){O.heading==="Legacy single-byte encodings"&&O.encodings.forEach(function(M){var T=M.name,P=C(T.toLowerCase());w[T]=function(k){return new a2(P,k)},v[T]=function(k){return new _(P,k)}})})})(),w.GBK=function(O){return new A(O)},v.GBK=function(O){return new x(O,!0)};function A(O){var M=O.fatal,T=0,P=0,k=0;this.handler=function(V,G){if(G===c&&T===0&&P===0&&k===0)return d;G===c&&(T!==0||P!==0||k!==0)&&(T=0,P=0,k=0,h(M));var h2;if(k!==0){h2=null,e(G,48,57)&&(h2=D((((T-129)*10+P-48)*126+k-129)*10+G-48));var J=[P,k,G];return T=0,P=0,k=0,h2===null?(V.prepend(J),h(M)):h2}if(P!==0)return e(G,129,254)?(k=G,null):(V.prepend([P,G]),T=0,P=0,h(M));if(T!==0){if(e(G,48,57))return P=G,null;var D2=T,nl=null;T=0;var el=G<127?64:65;return(e(G,64,126)||e(G,128,254))&&(nl=(D2-129)*190+(G-el)),h2=nl===null?null:S(nl,C("gb18030")),h2===null&&a(G)&&V.prepend(G),h2===null?h(M):h2}return a(G)?G:G===128?8364:e(G,129,254)?(T=G,null):h(M)}}function x(O,M){O.fatal,this.handler=function(T,P){if(P===c)return d;if(s(P))return P;if(P===58853)return p(P);if(M&&P===8364)return 128;var k=I(P,C("gb18030"));if(k!==null){var V=u(k/190)+129,G=k%190,h2=G<63?64:65;return[V,G+h2]}if(M)return p(P);k=F(P);var J=u(k/10/126/10);k=k-J*10*126*10;var D2=u(k/10/126);k=k-D2*10*126;var nl=u(k/10),el=k-nl*10;return[J+129,D2+48,nl+129,el+48]}}v.gb18030=function(O){return new x(O)},w.gb18030=function(O){return new A(O)};function N(O){var M=O.fatal,T=0;this.handler=function(P,k){if(k===c&&T!==0)return T=0,h(M);if(k===c&&T===0)return d;if(T!==0){var V=T,G=null;T=0;var h2=k<127?64:98;switch((e(k,64,126)||e(k,161,254))&&(G=(V-129)*157+(k-h2)),G){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var J=G===null?null:S(G,C("big5"));return J===null&&a(k)&&P.prepend(k),J===null?h(M):J}return a(k)?k:e(k,129,254)?(T=k,null):h(M)}}function B(O){O.fatal,this.handler=function(M,T){if(T===c)return d;if(s(T))return T;var P=X(T);if(P===null)return p(T);var k=u(P/157)+129;if(k<161)return p(T);var V=P%157,G=V<63?64:98;return[k,V+G]}}v.Big5=function(O){return new B(O)},w.Big5=function(O){return new N(O)};function U(O){var M=O.fatal,T=!1,P=0;this.handler=function(k,V){if(V===c&&P!==0)return P=0,h(M);if(V===c&&P===0)return d;if(P===142&&e(V,161,223))return P=0,65377-161+V;if(P===143&&e(V,161,254))return T=!0,P=V,null;if(P!==0){var G=P;P=0;var h2=null;return e(G,161,254)&&e(V,161,254)&&(h2=S((G-161)*94+(V-161),C(T?"jis0212":"jis0208"))),T=!1,e(V,161,254)||k.prepend(V),h2===null?h(M):h2}return a(V)?V:V===142||V===143||e(V,161,254)?(P=V,null):h(M)}}function o2(O){O.fatal,this.handler=function(M,T){if(T===c)return d;if(s(T))return T;if(T===165)return 92;if(T===8254)return 126;if(e(T,65377,65439))return[142,T-65377+161];T===8722&&(T=65293);var P=I(T,C("jis0208"));if(P===null)return p(T);var k=u(P/94)+161,V=P%94+161;return[k,V]}}v["EUC-JP"]=function(O){return new o2(O)},w["EUC-JP"]=function(O){return new U(O)};function g2(O){var M=O.fatal,T={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6},P=T.ASCII,k=T.ASCII,V=0,G=!1;this.handler=function(h2,J){switch(P){default:case T.ASCII:return J===27?(P=T.EscapeStart,null):e(J,0,127)&&J!==14&&J!==15&&J!==27?(G=!1,J):J===c?d:(G=!1,h(M));case T.Roman:return J===27?(P=T.EscapeStart,null):J===92?(G=!1,165):J===126?(G=!1,8254):e(J,0,127)&&J!==14&&J!==15&&J!==27&&J!==92&&J!==126?(G=!1,J):J===c?d:(G=!1,h(M));case T.Katakana:return J===27?(P=T.EscapeStart,null):e(J,33,95)?(G=!1,65377-33+J):J===c?d:(G=!1,h(M));case T.LeadByte:return J===27?(P=T.EscapeStart,null):e(J,33,126)?(G=!1,V=J,P=T.TrailByte,null):J===c?d:(G=!1,h(M));case T.TrailByte:if(J===27)return P=T.EscapeStart,h(M);if(e(J,33,126)){P=T.LeadByte;var D2=(V-33)*94+J-33,nl=S(D2,C("jis0208"));return nl===null?h(M):nl}return J===c?(P=T.LeadByte,h2.prepend(J),h(M)):(P=T.LeadByte,h(M));case T.EscapeStart:return J===36||J===40?(V=J,P=T.Escape,null):(h2.prepend(J),G=!1,P=k,h(M));case T.Escape:var el=V;V=0;var Jn=null;if(el===40&&J===66&&(Jn=T.ASCII),el===40&&J===74&&(Jn=T.Roman),el===40&&J===73&&(Jn=T.Katakana),el===36&&(J===64||J===66)&&(Jn=T.LeadByte),Jn!==null){P=P=Jn;var qf=G;return G=!0,qf?h(M):null}return h2.prepend([el,J]),G=!1,P=k,h(M)}}}function m2(O){O.fatal;var M={ASCII:0,Roman:1,jis0208:2},T=M.ASCII;this.handler=function(P,k){if(k===c&&T!==M.ASCII)return P.prepend(k),T=M.ASCII,[27,40,66];if(k===c&&T===M.ASCII)return d;if((T===M.ASCII||T===M.Roman)&&(k===14||k===15||k===27))return p(65533);if(T===M.ASCII&&s(k))return k;if(T===M.Roman&&(s(k)&&k!==92&&k!==126||k==165||k==8254)){if(s(k))return k;if(k===165)return 92;if(k===8254)return 126}if(s(k)&&T!==M.ASCII)return P.prepend(k),T=M.ASCII,[27,40,66];if((k===165||k===8254)&&T!==M.Roman)return P.prepend(k),T=M.Roman,[27,40,74];k===8722&&(k=65293);var V=I(k,C("jis0208"));if(V===null)return p(k);if(T!==M.jis0208)return P.prepend(k),T=M.jis0208,[27,36,66];var G=u(V/94)+33,h2=V%94+33;return[G,h2]}}v["ISO-2022-JP"]=function(O){return new m2(O)},w["ISO-2022-JP"]=function(O){return new g2(O)};function S2(O){var M=O.fatal,T=0;this.handler=function(P,k){if(k===c&&T!==0)return T=0,h(M);if(k===c&&T===0)return d;if(T!==0){var V=T,G=null;T=0;var h2=k<127?64:65,J=V<160?129:193;if((e(k,64,126)||e(k,128,252))&&(G=(V-J)*188+k-h2),e(G,8836,10715))return 57344-8836+G;var D2=G===null?null:S(G,C("jis0208"));return D2===null&&a(k)&&P.prepend(k),D2===null?h(M):D2}return a(k)||k===128?k:e(k,161,223)?65377-161+k:e(k,129,159)||e(k,224,252)?(T=k,null):h(M)}}function A2(O){O.fatal,this.handler=function(M,T){if(T===c)return d;if(s(T)||T===128)return T;if(T===165)return 92;if(T===8254)return 126;if(e(T,65377,65439))return T-65377+161;T===8722&&(T=65293);var P=j(T);if(P===null)return p(T);var k=u(P/188),V=k<31?129:193,G=P%188,h2=G<63?64:65;return[k+V,G+h2]}}v.Shift_JIS=function(O){return new A2(O)},w.Shift_JIS=function(O){return new S2(O)};function y3(O){var M=O.fatal,T=0;this.handler=function(P,k){if(k===c&&T!==0)return T=0,h(M);if(k===c&&T===0)return d;if(T!==0){var V=T,G=null;T=0,e(k,65,254)&&(G=(V-129)*190+(k-65));var h2=G===null?null:S(G,C("euc-kr"));return G===null&&a(k)&&P.prepend(k),h2===null?h(M):h2}return a(k)?k:e(k,129,254)?(T=k,null):h(M)}}function x1(O){O.fatal,this.handler=function(M,T){if(T===c)return d;if(s(T))return T;var P=I(T,C("euc-kr"));if(P===null)return p(T);var k=u(P/190)+129,V=P%190+65;return[k,V]}}v["EUC-KR"]=function(O){return new x1(O)},w["EUC-KR"]=function(O){return new y3(O)};function gn(O,M){var T=O>>8,P=O&255;return M?[T,P]:[P,T]}function v5(O,M){var T=M.fatal,P=null,k=null;this.handler=function(V,G){if(G===c&&(P!==null||k!==null))return h(T);if(G===c&&P===null&&k===null)return d;if(P===null)return P=G,null;var h2;if(O?h2=(P<<8)+G:h2=(G<<8)+P,P=null,k!==null){var J=k;return k=null,e(h2,56320,57343)?65536+(J-55296)*1024+(h2-56320):(V.prepend(gn(h2,O)),h(T))}return e(h2,55296,56319)?(k=h2,null):e(h2,56320,57343)?h(T):h2}}function y5(O,M){M.fatal,this.handler=function(T,P){if(P===c)return d;if(e(P,0,65535))return gn(P,O);var k=gn((P-65536>>10)+55296,O),V=gn((P-65536&1023)+56320,O);return k.concat(V)}}v["UTF-16BE"]=function(O){return new y5(!0,O)},w["UTF-16BE"]=function(O){return new v5(!0,O)},v["UTF-16LE"]=function(O){return new y5(!1,O)},w["UTF-16LE"]=function(O){return new v5(!1,O)};function T1(O){O.fatal,this.handler=function(M,T){return T===c?d:a(T)?T:63360+T-128}}function Z6(O){O.fatal,this.handler=function(M,T){return T===c?d:s(T)?T:e(T,63360,63487)?T-63360+128:p(T)}}v["x-user-defined"]=function(O){return new Z6(O)},w["x-user-defined"]=function(O){return new T1(O)},n.TextEncoder||(n.TextEncoder=L),n.TextDecoder||(n.TextDecoder=b),l.exports&&(l.exports={TextEncoder:n.TextEncoder,TextDecoder:n.TextDecoder,EncodingIndexes:n["encoding-indexes"]})})(pt||{})})(Ws);var eo=Ws.exports,hm={TextEncoder:eo.TextEncoder,TextDecoder:eo.TextDecoder};typeof window.TextEncoder=="undefined"&&(window.TextEncoder=hm.TextEncoder);/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var Cn;(function(l){l.SUCCESS="SUCCESS",l.PENDING="PENDING",l.FAILURE="FAILURE",l.TERMINAL="TERMINAL",l.CANCELED="CANCELED"})(Cn||(Cn={}));var F3;(function(l){l.OKTA_PASSWORD="okta_password",l.OKTA_EMAIL="okta_email",l.PHONE_NUMBER="phone_number",l.GOOGLE_AUTHENTICATOR="google_otp",l.SECURITY_QUESTION="security_question",l.OKTA_VERIFY="okta_verify",l.WEBAUTHN="webauthn"})(F3||(F3={}));var Ll;(function(l){l.PASSWORD_RECOVERY="recover-password",l.REGISTRATION="enroll-profile",l.SOCIAL_IDP="redirect-idp",l.ACCOUNT_UNLOCK="unlock-account"})(Ll||(Ll={}));function $0(l){return l&&(l.key||l.id)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function pm(){return typeof window!="undefined"?window.console:typeof console!="undefined"?console:void 0}function U5(){var l=pm();return l&&l.log?l:{log:function(){},warn:function(){},group:function(){},groupEnd:function(){}}}function J3(l){U5().warn("[okta-auth-sdk] WARN: "+l)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function P3(l){var n={};for(var e in l)if(Object.prototype.hasOwnProperty.call(l,e)){var t=l[e];t!=null&&(n[e]=t)}return n}function m3(l){if(l){var n=JSON.stringify(l);if(n)return JSON.parse(n)}return l}function re(l,...n){var e={};for(var t in l)Object.prototype.hasOwnProperty.call(l,t)&&n.indexOf(t)==-1&&(e[t]=l[t]);return m3(e)}function _9(l,n){for(var e=l.length;e--;){var t=l[e],u=!0;for(var r in n)if(!!Object.prototype.hasOwnProperty.call(n,r)&&t[r]!==n[r]){u=!1;break}if(u)return t}}function R9(l,n,e){if(!(!l||!l._links)){var t=m3(l._links[n]);if(t&&t.name&&e){if(t.name===e)return t}else return t}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ks(l){for(var n="abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",e="",t=0,u=n.length;t<l;++t)e+=n[Math.floor(Math.random()*u)];return e}function to(l){return new Promise(function(n){setTimeout(n,l)})}function gm(l,n){const e=l.split(n);return[e[0],e.splice(1,e.length).join(n)]}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function S6(l){return/^[a-z][a-z0-9+.-]*:/i.test(l)}function mm(l="",n){return S6(l)?l:(n=s3(n),l[0]==="/"?`${n}${l}`:`${n}/${l}`)}function qs(l="",n){return S6(l)&&(l=l.substring(n.length)),l[0]==="/"?l:`/${l}`}function cn(l){var n=[];if(l!==null)for(var e in l)Object.prototype.hasOwnProperty.call(l,e)&&l[e]!==void 0&&l[e]!==null&&n.push(e+"="+encodeURIComponent(l[e]));return n.length?"?"+n.join("&"):""}function s3(l){if(!!l){var n=l.replace(/^\s+|\s+$/gm,"");return n=n.replace(/\/+$/,""),n}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class t1 extends Error{constructor(n){super(n),Object.setPrototypeOf(this,new.target.prototype)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class z extends t1{constructor(n,e){super(n),this.name="AuthSdkError",this.errorCode="INTERNAL",this.errorSummary=n,this.errorLink="INTERNAL",this.errorId="INTERNAL",this.errorCauses=[],e&&(this.xhr=e)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Qs(){return Ks(64)}function vm(){return Ks(64)}function E7(l,n={}){return s3(n.issuer)||l.options.issuer}function Ys(l,n={}){const e=E7(l,n);return e.indexOf("/oauth2")>0?e:e+"/oauth2"}function ym(l,n={}){return E7(l,n).split("/oauth2")[0]}function dn(l,n){if(arguments.length>2)throw new z('As of version 3.0, "getOAuthUrls" takes only a single set of options');n=n||{};var e=s3(n.authorizeUrl)||l.options.authorizeUrl,t=E7(l,n),u=s3(n.userinfoUrl)||l.options.userinfoUrl,r=s3(n.tokenUrl)||l.options.tokenUrl,o=s3(n.logoutUrl)||l.options.logoutUrl,i=s3(n.revokeUrl)||l.options.revokeUrl,a=Ys(l,n);return e=e||a+"/v1/authorize",u=u||a+"/v1/userinfo",r=r||a+"/v1/token",i=i||a+"/v1/revoke",o=o||a+"/v1/logout",{issuer:t,authorizeUrl:e,userinfoUrl:u,tokenUrl:r,revokeUrl:i,logoutUrl:o}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Xs(l,n){const e=l.options.issuer,t=dn(l,n),u={issuer:e,urls:t,clientId:n.clientId,redirectUri:n.redirectUri,responseType:n.responseType,responseMode:n.responseMode,scopes:n.scopes,state:n.state,nonce:n.nonce,ignoreSignature:n.ignoreSignature,acrValues:n.acrValues};return n.pkce===!1?u:Object.assign(Object.assign({},u),{codeVerifier:n.codeVerifier,codeChallengeMethod:n.codeChallengeMethod,codeChallenge:n.codeChallenge})}function Js(){}Js.prototype={on:function(l,n,e){var t=this.e||(this.e={});return(t[l]||(t[l]=[])).push({fn:n,ctx:e}),this},once:function(l,n,e){var t=this;function u(){t.off(l,u),n.apply(e,arguments)}return u._=n,this.on(l,u,e)},emit:function(l){var n=[].slice.call(arguments,1),e=((this.e||(this.e={}))[l]||[]).slice(),t=0,u=e.length;for(t;t<u;t++)e[t].fn.apply(e[t].ctx,n);return this},off:function(l,n){var e=this.e||(this.e={}),t=e[l],u=[];if(t&&n)for(var r=0,o=t.length;r<o;r++)t[r].fn!==n&&t[r].fn._!==n&&u.push(t[r]);return u.length?e[l]=u:delete e[l],this}};var wm=Js;/*! js-cookie v3.0.5 | MIT */function L1(l){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var t in e)l[t]=e[t]}return l}var Sm={read:function(l){return l[0]==='"'&&(l=l.slice(1,-1)),l.replace(/(%[\dA-F]{2})+/gi,decodeURIComponent)},write:function(l){return encodeURIComponent(l).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,decodeURIComponent)}};function I9(l,n){function e(u,r,o){if(typeof document!="undefined"){o=L1({},n,o),typeof o.expires=="number"&&(o.expires=new Date(Date.now()+o.expires*864e5)),o.expires&&(o.expires=o.expires.toUTCString()),u=encodeURIComponent(u).replace(/%(2[346B]|5E|60|7C)/g,decodeURIComponent).replace(/[()]/g,escape);var i="";for(var a in o)!o[a]||(i+="; "+a,o[a]!==!0&&(i+="="+o[a].split(";")[0]));return document.cookie=u+"="+l.write(r,u)+i}}function t(u){if(!(typeof document=="undefined"||arguments.length&&!u)){for(var r=document.cookie?document.cookie.split("; "):[],o={},i=0;i<r.length;i++){var a=r[i].split("="),s=a.slice(1).join("=");try{var c=decodeURIComponent(a[0]);if(o[c]=l.read(s,c),u===c)break}catch{}}return u?o[u]:o}}return Object.create({set:e,get:t,remove:function(u,r){e(u,"",L1({},r,{expires:-1}))},withAttributes:function(u){return I9(this.converter,L1({},this.attributes,u))},withConverter:function(u){return I9(L1({},this.converter,u),this.attributes)}},{attributes:{value:Object.freeze(n)},converter:{value:Object.freeze(l)}})}var D1=I9(Sm,{path:"/"}),N9={exports:{}};(function(l,n){var e=typeof self!="undefined"?self:pt,t=function(){function r(){this.fetch=!1,this.DOMException=e.DOMException}return r.prototype=e,new r}();(function(r){(function(o){var i={searchParams:"URLSearchParams"in r,iterable:"Symbol"in r&&"iterator"in Symbol,blob:"FileReader"in r&&"Blob"in r&&function(){try{return new Blob,!0}catch{return!1}}(),formData:"FormData"in r,arrayBuffer:"ArrayBuffer"in r};function a(b){return b&&DataView.prototype.isPrototypeOf(b)}if(i.arrayBuffer)var s=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],c=ArrayBuffer.isView||function(b){return b&&s.indexOf(Object.prototype.toString.call(b))>-1};function f(b){if(typeof b!="string"&&(b=String(b)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(b))throw new TypeError("Invalid character in header field name");return b.toLowerCase()}function d(b){return typeof b!="string"&&(b=String(b)),b}function h(b){var L={next:function(){var Y=b.shift();return{done:Y===void 0,value:Y}}};return i.iterable&&(L[Symbol.iterator]=function(){return L}),L}function p(b){this.map={},b instanceof p?b.forEach(function(L,Y){this.append(Y,L)},this):Array.isArray(b)?b.forEach(function(L){this.append(L[0],L[1])},this):b&&Object.getOwnPropertyNames(b).forEach(function(L){this.append(L,b[L])},this)}p.prototype.append=function(b,L){b=f(b),L=d(L);var Y=this.map[b];this.map[b]=Y?Y+", "+L:L},p.prototype.delete=function(b){delete this.map[f(b)]},p.prototype.get=function(b){return b=f(b),this.has(b)?this.map[b]:null},p.prototype.has=function(b){return this.map.hasOwnProperty(f(b))},p.prototype.set=function(b,L){this.map[f(b)]=d(L)},p.prototype.forEach=function(b,L){for(var Y in this.map)this.map.hasOwnProperty(Y)&&b.call(L,this.map[Y],Y,this)},p.prototype.keys=function(){var b=[];return this.forEach(function(L,Y){b.push(Y)}),h(b)},p.prototype.values=function(){var b=[];return this.forEach(function(L){b.push(L)}),h(b)},p.prototype.entries=function(){var b=[];return this.forEach(function(L,Y){b.push([Y,L])}),h(b)},i.iterable&&(p.prototype[Symbol.iterator]=p.prototype.entries);function y(b){if(b.bodyUsed)return Promise.reject(new TypeError("Already read"));b.bodyUsed=!0}function m(b){return new Promise(function(L,Y){b.onload=function(){L(b.result)},b.onerror=function(){Y(b.error)}})}function g(b){var L=new FileReader,Y=m(L);return L.readAsArrayBuffer(b),Y}function v(b){var L=new FileReader,Y=m(L);return L.readAsText(b),Y}function w(b){for(var L=new Uint8Array(b),Y=new Array(L.length),c2=0;c2<L.length;c2++)Y[c2]=String.fromCharCode(L[c2]);return Y.join("")}function S(b){if(b.slice)return b.slice(0);var L=new Uint8Array(b.byteLength);return L.set(new Uint8Array(b)),L.buffer}function I(){return this.bodyUsed=!1,this._initBody=function(b){this._bodyInit=b,b?typeof b=="string"?this._bodyText=b:i.blob&&Blob.prototype.isPrototypeOf(b)?this._bodyBlob=b:i.formData&&FormData.prototype.isPrototypeOf(b)?this._bodyFormData=b:i.searchParams&&URLSearchParams.prototype.isPrototypeOf(b)?this._bodyText=b.toString():i.arrayBuffer&&i.blob&&a(b)?(this._bodyArrayBuffer=S(b.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):i.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(b)||c(b))?this._bodyArrayBuffer=S(b):this._bodyText=b=Object.prototype.toString.call(b):this._bodyText="",this.headers.get("content-type")||(typeof b=="string"?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):i.searchParams&&URLSearchParams.prototype.isPrototypeOf(b)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},i.blob&&(this.blob=function(){var b=y(this);if(b)return b;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?y(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(g)}),this.text=function(){var b=y(this);if(b)return b;if(this._bodyBlob)return v(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(w(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},i.formData&&(this.formData=function(){return this.text().then(j)}),this.json=function(){return this.text().then(JSON.parse)},this}var C=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function D(b){var L=b.toUpperCase();return C.indexOf(L)>-1?L:b}function F(b,L){L=L||{};var Y=L.body;if(b instanceof F){if(b.bodyUsed)throw new TypeError("Already read");this.url=b.url,this.credentials=b.credentials,L.headers||(this.headers=new p(b.headers)),this.method=b.method,this.mode=b.mode,this.signal=b.signal,!Y&&b._bodyInit!=null&&(Y=b._bodyInit,b.bodyUsed=!0)}else this.url=String(b);if(this.credentials=L.credentials||this.credentials||"same-origin",(L.headers||!this.headers)&&(this.headers=new p(L.headers)),this.method=D(L.method||this.method||"GET"),this.mode=L.mode||this.mode||null,this.signal=L.signal||this.signal,this.referrer=null,(this.method==="GET"||this.method==="HEAD")&&Y)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(Y)}F.prototype.clone=function(){return new F(this,{body:this._bodyInit})};function j(b){var L=new FormData;return b.trim().split("&").forEach(function(Y){if(Y){var c2=Y.split("="),a2=c2.shift().replace(/\+/g," "),_=c2.join("=").replace(/\+/g," ");L.append(decodeURIComponent(a2),decodeURIComponent(_))}}),L}function K(b){var L=new p,Y=b.replace(/\r?\n[\t ]+/g," ");return Y.split(/\r?\n/).forEach(function(c2){var a2=c2.split(":"),_=a2.shift().trim();if(_){var A=a2.join(":").trim();L.append(_,A)}}),L}I.call(F.prototype);function X(b,L){L||(L={}),this.type="default",this.status=L.status===void 0?200:L.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in L?L.statusText:"OK",this.headers=new p(L.headers),this.url=L.url||"",this._initBody(b)}I.call(X.prototype),X.prototype.clone=function(){return new X(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new p(this.headers),url:this.url})},X.error=function(){var b=new X(null,{status:0,statusText:""});return b.type="error",b};var n2=[301,302,303,307,308];X.redirect=function(b,L){if(n2.indexOf(L)===-1)throw new RangeError("Invalid status code");return new X(null,{status:L,headers:{location:b}})},o.DOMException=r.DOMException;try{new o.DOMException}catch{o.DOMException=function(L,Y){this.message=L,this.name=Y;var c2=Error(L);this.stack=c2.stack},o.DOMException.prototype=Object.create(Error.prototype),o.DOMException.prototype.constructor=o.DOMException}function Z(b,L){return new Promise(function(Y,c2){var a2=new F(b,L);if(a2.signal&&a2.signal.aborted)return c2(new o.DOMException("Aborted","AbortError"));var _=new XMLHttpRequest;function A(){_.abort()}_.onload=function(){var x={status:_.status,statusText:_.statusText,headers:K(_.getAllResponseHeaders()||"")};x.url="responseURL"in _?_.responseURL:x.headers.get("X-Request-URL");var N="response"in _?_.response:_.responseText;Y(new X(N,x))},_.onerror=function(){c2(new TypeError("Network request failed"))},_.ontimeout=function(){c2(new TypeError("Network request failed"))},_.onabort=function(){c2(new o.DOMException("Aborted","AbortError"))},_.open(a2.method,a2.url,!0),a2.credentials==="include"?_.withCredentials=!0:a2.credentials==="omit"&&(_.withCredentials=!1),"responseType"in _&&i.blob&&(_.responseType="blob"),a2.headers.forEach(function(x,N){_.setRequestHeader(N,x)}),a2.signal&&(a2.signal.addEventListener("abort",A),_.onreadystatechange=function(){_.readyState===4&&a2.signal.removeEventListener("abort",A)}),_.send(typeof a2._bodyInit=="undefined"?null:a2._bodyInit)})}return Z.polyfill=!0,r.fetch||(r.fetch=Z,r.Headers=p,r.Request=F,r.Response=X),o.Headers=p,o.Request=F,o.Response=X,o.fetch=Z,Object.defineProperty(o,"__esModule",{value:!0}),o})({})})(t),t.fetch.ponyfill=!0,delete t.fetch.polyfill;var u=t;n=u.fetch,n.default=u.fetch,n.fetch=u.fetch,n.Headers=u.Headers,n.Request=u.Request,n.Response=u.Response,l.exports=n})(N9,N9.exports);var xm=Xf(N9.exports);/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var M9;(function(l){l.ACCESS="accessToken",l.ID="idToken",l.REFRESH="refreshToken"})(M9||(M9={}));function dl(l){return l&&l.accessToken}function Wl(l){return l&&l.idToken}function bn(l){return l&&l.refreshToken}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function C7(l,n={}){const e=await l.token.prepareTokenParams(n),t=Xs(l,e);let{flow:u="default",withCredentials:r=!0,activationToken:o=void 0,recoveryToken:i=void 0,maxAge:a=void 0,acrValues:s=void 0}=Object.assign(Object.assign({},l.options),n);return Object.assign(Object.assign({},t),{flow:u,withCredentials:r,activationToken:o,recoveryToken:i,maxAge:a,acrValues:s})}function Zs(l,n){const e=fn(l,n);return!!(e!=null&&e.interactionHandle)}function fn(l,n){n=P3(n),n=Object.assign(Object.assign({},l.options),n);let e;try{e=l.transactionManager.load(n)}catch{}if(!!e){if(lc(e,n))return e;J3("Saved transaction meta does not match the current configuration. This may indicate that two apps are sharing a storage key.")}}async function Tm(l,n){n=P3(n),n=Object.assign(Object.assign({},l.options),n);const e=fn(l,n);return e||C7(l,n)}function b7(l,n){l.transactionManager.save(n,{muteWarning:!0})}function Em(l){l.transactionManager.clear()}function lc(l,n={}){if(bm(l,n,["issuer","clientId","redirectUri","state","codeChallenge","codeChallengeMethod","activationToken","recoveryToken"])===!1)return!1;const{flow:t}=n;return Cm(l,t)!==!1}function Cm(l,n){return!(n&&n!=="default"&&n!=="proceed"&&n!==l.flow)}function bm(l,n,e){return!e.some(u=>{const r=n[u];if(r&&r!==l[u])return!0})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function I4(l){return Object.prototype.toString.call(l)==="[object String]"}function nc(l){return Object.prototype.toString.call(l)==="[object Object]"}function Om(l){return Object.prototype.toString.call(l)==="[object Number]"}function uo(l){return!!l&&{}.toString.call(l)==="[object Function]"}function km(l){return l&&l.finally&&typeof l.finally=="function"}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const oe="oktaStateToken",ec=500,tc=300,uc=86400,O7="okta-token-storage",rc="okta-cache-storage",Pm="okta-pkce-storage",oc="okta-transaction-storage",ic="okta-shared-transaction-storage",ac="okta-original-uri-storage",sc="okta-idx-response-storage",Am="accessToken",_m="idToken",F9="refreshToken",t0="referrerPath",L9=43,cc=128,k7="S256",P7="1.0.0";var ro=Object.freeze(Object.defineProperty({__proto__:null,ACCESS_TOKEN_STORAGE_KEY:Am,CACHE_STORAGE_NAME:rc,DEFAULT_CACHE_DURATION:uc,DEFAULT_CODE_CHALLENGE_METHOD:k7,DEFAULT_MAX_CLOCK_SKEW:tc,DEFAULT_POLLING_DELAY:ec,IDX_API_VERSION:P7,IDX_RESPONSE_STORAGE_NAME:sc,ID_TOKEN_STORAGE_KEY:_m,MAX_VERIFIER_LENGTH:cc,MIN_VERIFIER_LENGTH:L9,ORIGINAL_URI_STORAGE_NAME:ac,PKCE_STORAGE_NAME:Pm,REFERRER_PATH_STORAGE_KEY:t0,REFRESH_TOKEN_STORAGE_KEY:F9,SHARED_TRANSACTION_STORAGE_NAME:ic,STATE_TOKEN_KEY_NAME:oe,TOKEN_STORAGE_NAME:O7,TRANSACTION_STORAGE_NAME:oc},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class j0 extends t1{constructor(n,e,t){const u=n.errorSummary;super(u),this.name="AuthApiError",this.errorSummary=n.errorSummary,this.errorCode=n.errorCode,this.errorLink=n.errorLink,this.errorId=n.errorId,this.errorCauses=n.errorCauses,e&&(this.xhr=e),t&&(this.meta=t)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class u1 extends t1{constructor(n,e){super(e),this.name="OAuthError",this.errorCode=n,this.errorSummary=e,this.error=n,this.error_description=e}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Rm=l=>{if(!l)throw new z("Missing header string");return l.split(",").map(n=>n.trim()).map(n=>n.split("=")).reduce((n,e)=>(n[e[0]]=e[1].replace(/^"(.*)"$/,"$1"),n),{})},Im=(l,n)=>{var e,t;let u,r={};if(n.responseText&&I4(n.responseText))try{r=JSON.parse(n.responseText)}catch{r={errorSummary:"Unknown error"}}if(n.status>=500&&(r.errorSummary="Unknown error"),l.options.transformErrorXHR&&(n=l.options.transformErrorXHR(m3(n))),r.error&&r.error_description?u=new u1(r.error,r.error_description):u=new j0(r,n),(n==null?void 0:n.status)===403&&!!(!((e=n==null?void 0:n.headers)===null||e===void 0)&&e["www-authenticate"])){const{error:o,error_description:i,max_age:a,acr_values:s}=Rm((t=n==null?void 0:n.headers)===null||t===void 0?void 0:t["www-authenticate"]);o==="insufficient_authentication_context"&&(u=new j0({errorSummary:o,errorCauses:[{errorSummary:i}]},n,Object.assign({max_age:+a},s&&{acr_values:s})))}return u};function j3(l,n){if(n=n||{},l.options.httpRequestInterceptors)for(const v of l.options.httpRequestInterceptors)v(n);var e=n.url,t=n.method,u=n.args,r=n.saveAuthnState,o=n.accessToken,i=n.withCredentials===!0,a=l.options.storageUtil,s=a.storage,c=l.storageManager.getHttpCache(l.options.cookies);if(n.cacheResponse){var f=c.getStorage(),d=f[e];if(d&&Date.now()/1e3<d.expiresAt)return Promise.resolve(d.response)}var h=l._oktaUserAgent.getHttpHeader(),p=Object.assign({Accept:"application/json","Content-Type":"application/json"},h);Object.assign(p,l.options.headers,n.headers),p=P3(p),o&&I4(o)&&(p.Authorization="Bearer "+o);var y={headers:p,data:u||void 0,withCredentials:i},m,g;return l.options.httpRequestClient(t,e,y).then(function(v){return g=v.responseText,g&&I4(g)&&(g=JSON.parse(g),g&&typeof g=="object"&&!g.headers&&(Array.isArray(g)?g.forEach(w=>{w.headers=v.headers}):g.headers=v.headers)),r&&(g.stateToken||s.delete(oe)),g&&g.stateToken&&g.expiresAt&&s.set(oe,g.stateToken,g.expiresAt,l.options.cookies),g&&n.cacheResponse&&c.updateStorage(e,{expiresAt:Math.floor(Date.now()/1e3)+uc,response:g}),g}).catch(function(v){throw m=Im(l,v),m.errorCode==="E0000011"&&s.delete(oe),m})}function N4(l,n,e){n=S6(n)?n:l.getIssuerOrigin()+n;var t={url:n,method:"GET"};return Object.assign(t,e),j3(l,t)}function hn(l,n,e,t){n=S6(n)?n:l.getIssuerOrigin()+n;var u={url:n,method:"POST",args:e,saveAuthnState:!0};return Object.assign(u,t),j3(l,u)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function oo(l){return{meta:l,interactionHandle:l.interactionHandle,state:l.state}}async function dc(l,n={}){n=P3(n);let e=fn(l,n);if(e!=null&&e.interactionHandle)return oo(e);e=await C7(l,Object.assign(Object.assign({},e),n));const t=Ys(l);let{clientId:u,redirectUri:r,state:o,scopes:i,withCredentials:a,codeChallenge:s,codeChallengeMethod:c,activationToken:f,recoveryToken:d,maxAge:h,acrValues:p,nonce:y}=e;const m=n.clientSecret||l.options.clientSecret;a=a!=null?a:!0;const g=`${t}/v1/interact`,v=Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({client_id:u,scope:i.join(" "),redirect_uri:r,code_challenge:s,code_challenge_method:c,state:o},f&&{activation_token:f}),d&&{recovery_token:d}),m&&{client_secret:m}),h&&{max_age:h}),p&&{acr_values:p}),y&&{nonce:y}),I=(await j3(l,{method:"POST",url:g,headers:{"Content-Type":"application/x-www-form-urlencoded"},withCredentials:a,args:v})).interaction_handle,C=Object.assign(Object.assign({},e),{interactionHandle:I,withCredentials:a,state:o,scopes:i,recoveryToken:d,activationToken:f});return b7(l,C),oo(C)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 *//*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function r1(l,n){var e={};for(var t in l)Object.prototype.hasOwnProperty.call(l,t)&&n.indexOf(t)<0&&(e[t]=l[t]);if(l!=null&&typeof Object.getOwnPropertySymbols=="function")for(var u=0,t=Object.getOwnPropertySymbols(l);u<t.length;u++)n.indexOf(t[u])<0&&Object.prototype.propertyIsEnumerable.call(l,t[u])&&(e[t[u]]=l[t[u]]);return e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Nm=function(n){return n.mutable!==!1},Mm=function(n){var e,t;const u={},r=[],o={};if(!n.value)return r.push(n),{defaultParamsForAction:u,neededParamsForAction:r,immutableParamsForAction:o};for(let i of n.value)Nm(i)?(r.push(i),(e=i.value)!==null&&e!==void 0&&e&&(u[i.name]=i.value)):o[i.name]=(t=i.value)!==null&&t!==void 0?t:"";return{defaultParamsForAction:u,neededParamsForAction:r,immutableParamsForAction:o}},Fm=function(n){n=Array.isArray(n)?n:[n];const e=[],t={},u={};for(let r of n){const{defaultParamsForAction:o,neededParamsForAction:i,immutableParamsForAction:a}=Mm(r);e.push(i),t[r.name]=o,u[r.name]=a}return{defaultParams:t,neededParams:e,immutableParams:u}};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Lm=function(n,{actionDefinition:e,defaultParamsForAction:t={},immutableParamsForAction:u={},toPersist:r={}}){const o=e.href;return async function(i={}){var a;const s={"Content-Type":"application/json",Accept:e.accepts||"application/ion+json"},c=JSON.stringify(Object.assign(Object.assign(Object.assign({},t),i),u));try{const f=await j3(n,{url:o,method:e.method,headers:s,args:c,withCredentials:(a=r==null?void 0:r.withCredentials)!==null&&a!==void 0?a:!0});return n.idx.makeIdxResponse(Object.assign({},f),r,!0)}catch(f){if(!(f instanceof j0)||!(f!=null&&f.xhr))throw f;const d=f.xhr,h=d.responseJSON||JSON.parse(d.responseText),p=d.headers["WWW-Authenticate"]||d.headers["www-authenticate"],y=n.idx.makeIdxResponse(Object.assign({},h),r,!1);return d.status===401&&p==='Oktadevicejwt realm="Okta Device"'&&(y.stepUp=!0),y}}},D9=function(n,e,t){const u=Lm,{defaultParams:r,neededParams:o,immutableParams:i}=Fm(e),a=u(n,{actionDefinition:e,defaultParamsForAction:r[e.name],immutableParamsForAction:i[e.name],toPersist:t});return a.neededParams=o,a};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Dm=function(n,e,t={}){return Object.fromEntries(e.map(u=>[u.name,D9(n,u,t)]))};function L3(l){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?L3=function(n){return typeof n}:L3=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},L3(l)}function $m(l,n){if(!(l instanceof n))throw new TypeError("Cannot call a class as a function")}function jm(l,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function");l.prototype=Object.create(n&&n.prototype,{constructor:{value:l,writable:!0,configurable:!0}}),n&&Ae(l,n)}function Pe(l){return Pe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},Pe(l)}function Ae(l,n){return Ae=Object.setPrototypeOf||function(t,u){return t.__proto__=u,t},Ae(l,n)}function fc(){if(typeof Reflect=="undefined"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}function ie(l,n,e){return fc()?ie=Reflect.construct:ie=function(u,r,o){var i=[null];i.push.apply(i,r);var a=Function.bind.apply(u,i),s=new a;return o&&Ae(s,o.prototype),s},ie.apply(null,arguments)}function Bm(l){return Function.toString.call(l).indexOf("[native code]")!==-1}function $9(l){var n=typeof Map=="function"?new Map:void 0;return $9=function(t){if(t===null||!Bm(t))return t;if(typeof t!="function")throw new TypeError("Super expression must either be null or a function");if(typeof n!="undefined"){if(n.has(t))return n.get(t);n.set(t,u)}function u(){return ie(t,arguments,Pe(this).constructor)}return u.prototype=Object.create(t.prototype,{constructor:{value:u,enumerable:!1,writable:!0,configurable:!0}}),Ae(u,t)},$9(l)}function Um(l){if(l===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return l}function Hm(l,n){return n&&(typeof n=="object"||typeof n=="function")?n:Um(l)}function zm(l){var n=fc();return function(){var t=Pe(l),u;if(n){var r=Pe(this).constructor;u=Reflect.construct(t,arguments,r)}else u=t.apply(this,arguments);return Hm(this,u)}}function io(l){return Vm(l)||Wm(l)||hc(l)||Gm()}function Vm(l){if(Array.isArray(l))return j9(l)}function Wm(l){if(typeof Symbol!="undefined"&&l[Symbol.iterator]!=null||l["@@iterator"]!=null)return Array.from(l)}function hc(l,n){if(!!l){if(typeof l=="string")return j9(l,n);var e=Object.prototype.toString.call(l).slice(8,-1);if(e==="Object"&&l.constructor&&(e=l.constructor.name),e==="Map"||e==="Set")return Array.from(l);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return j9(l,n)}}function j9(l,n){(n==null||n>l.length)&&(n=l.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=l[e];return t}function Gm(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function Km(l,n){var e=typeof Symbol!="undefined"&&l[Symbol.iterator]||l["@@iterator"];if(!e){if(Array.isArray(l)||(e=hc(l))||n&&l&&typeof l.length=="number"){e&&(l=e);var t=0,u=function(){};return{s:u,n:function(){return t>=l.length?{done:!0}:{done:!1,value:l[t++]}},e:function(a){throw a},f:u}}throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}var r=!0,o=!1,i;return{s:function(){e=e.call(l)},n:function(){var a=e.next();return r=a.done,a},e:function(a){o=!0,i=a},f:function(){try{!r&&e.return!=null&&e.return()}finally{if(o)throw i}}}}var e3=Object.prototype.hasOwnProperty;function I5(l,n){return l=l.slice(),l.push(n),l}function t4(l,n){return n=n.slice(),n.unshift(l),n}var qm=function(l){jm(e,l);var n=zm(e);function e(t){var u;return $m(this,e),u=n.call(this,'JSONPath should not be called with "new" (it prevents return of (unwrapped) scalar values)'),u.avoidNew=!0,u.value=t,u.name="NewError",u}return e}($9(Error));function O2(l,n,e,t,u){if(!(this instanceof O2))try{return new O2(l,n,e,t,u)}catch(a){if(!a.avoidNew)throw a;return a.value}typeof l=="string"&&(u=t,t=e,e=n,n=l,l=null);var r=l&&L3(l)==="object";if(l=l||{},this.json=l.json||e,this.path=l.path||n,this.resultType=l.resultType||"value",this.flatten=l.flatten||!1,this.wrap=e3.call(l,"wrap")?l.wrap:!0,this.sandbox=l.sandbox||{},this.preventEval=l.preventEval||!1,this.parent=l.parent||null,this.parentProperty=l.parentProperty||null,this.callback=l.callback||t||null,this.otherTypeCallback=l.otherTypeCallback||u||function(){throw new TypeError("You must supply an otherTypeCallback callback option with the @other() operator.")},l.autostart!==!1){var o={path:r?l.path:n};r?"json"in l&&(o.json=l.json):o.json=e;var i=this.evaluate(o);if(!i||L3(i)!=="object")throw new qm(i);return i}}O2.prototype.evaluate=function(l,n,e,t){var u=this,r=this.parent,o=this.parentProperty,i=this.flatten,a=this.wrap;if(this.currResultType=this.resultType,this.currPreventEval=this.preventEval,this.currSandbox=this.sandbox,e=e||this.callback,this.currOtherTypeCallback=t||this.otherTypeCallback,n=n||this.json,l=l||this.path,l&&L3(l)==="object"&&!Array.isArray(l)){if(!l.path&&l.path!=="")throw new TypeError('You must supply a "path" property when providing an object argument to JSONPath.evaluate().');if(!e3.call(l,"json"))throw new TypeError('You must supply a "json" property when providing an object argument to JSONPath.evaluate().');var s=l;n=s.json,i=e3.call(l,"flatten")?l.flatten:i,this.currResultType=e3.call(l,"resultType")?l.resultType:this.currResultType,this.currSandbox=e3.call(l,"sandbox")?l.sandbox:this.currSandbox,a=e3.call(l,"wrap")?l.wrap:a,this.currPreventEval=e3.call(l,"preventEval")?l.preventEval:this.currPreventEval,e=e3.call(l,"callback")?l.callback:e,this.currOtherTypeCallback=e3.call(l,"otherTypeCallback")?l.otherTypeCallback:this.currOtherTypeCallback,r=e3.call(l,"parent")?l.parent:r,o=e3.call(l,"parentProperty")?l.parentProperty:o,l=l.path}if(r=r||null,o=o||null,Array.isArray(l)&&(l=O2.toPathString(l)),!(!l&&l!==""||!n)){var c=O2.toPathArray(l);c[0]==="$"&&c.length>1&&c.shift(),this._hasParentSelector=null;var f=this._trace(c,n,["$"],r,o,e).filter(function(d){return d&&!d.isParentSelector});return f.length?!a&&f.length===1&&!f[0].hasArrExpr?this._getPreferredOutput(f[0]):f.reduce(function(d,h){var p=u._getPreferredOutput(h);return i&&Array.isArray(p)?d=d.concat(p):d.push(p),d},[]):a?[]:void 0}};O2.prototype._getPreferredOutput=function(l){var n=this.currResultType;switch(n){case"all":{var e=Array.isArray(l.path)?l.path:O2.toPathArray(l.path);return l.pointer=O2.toPointer(e),l.path=typeof l.path=="string"?l.path:O2.toPathString(l.path),l}case"value":case"parent":case"parentProperty":return l[n];case"path":return O2.toPathString(l[n]);case"pointer":return O2.toPointer(l.path);default:throw new TypeError("Unknown result type")}};O2.prototype._handleCallback=function(l,n,e){if(n){var t=this._getPreferredOutput(l);l.path=typeof l.path=="string"?l.path:O2.toPathString(l.path),n(t,e,l)}};O2.prototype._trace=function(l,n,e,t,u,r,o,i){var a=this,s;if(!l.length)return s={path:e,value:n,parent:t,parentProperty:u,hasArrExpr:o},this._handleCallback(s,r,"value"),s;var c=l[0],f=l.slice(1),d=[];function h(K){Array.isArray(K)?K.forEach(function(X){d.push(X)}):d.push(K)}if((typeof c!="string"||i)&&n&&e3.call(n,c))h(this._trace(f,n[c],I5(e,c),n,c,r,o));else if(c==="*")this._walk(c,f,n,e,t,u,r,function(K,X,n2,Z,b,L,Y,c2){h(a._trace(t4(K,n2),Z,b,L,Y,c2,!0,!0))});else if(c==="..")h(this._trace(f,n,e,t,u,r,o)),this._walk(c,f,n,e,t,u,r,function(K,X,n2,Z,b,L,Y,c2){L3(Z[K])==="object"&&h(a._trace(t4(X,n2),Z[K],I5(b,K),Z,K,c2,!0))});else{if(c==="^")return this._hasParentSelector=!0,{path:e.slice(0,-1),expr:f,isParentSelector:!0};if(c==="~")return s={path:I5(e,c),value:u,parent:t,parentProperty:null},this._handleCallback(s,r,"property"),s;if(c==="$")h(this._trace(f,n,e,null,null,r,o));else if(/^(\x2D?[0-9]*):(\x2D?[0-9]*):?([0-9]*)$/.test(c))h(this._slice(c,f,n,e,t,u,r));else if(c.indexOf("?(")===0){if(this.currPreventEval)throw new Error("Eval [?(expr)] prevented in JSONPath expression.");this._walk(c,f,n,e,t,u,r,function(K,X,n2,Z,b,L,Y,c2){a._eval(X.replace(/^\?\(((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?)\)$/,"$1"),Z[K],K,b,L,Y)&&h(a._trace(t4(K,n2),Z,b,L,Y,c2,!0))})}else if(c[0]==="("){if(this.currPreventEval)throw new Error("Eval [(expr)] prevented in JSONPath expression.");h(this._trace(t4(this._eval(c,n,e[e.length-1],e.slice(0,-1),t,u),f),n,e,t,u,r,o))}else if(c[0]==="@"){var p=!1,y=c.slice(1,-2);switch(y){case"scalar":(!n||!["object","function"].includes(L3(n)))&&(p=!0);break;case"boolean":case"string":case"undefined":case"function":L3(n)===y&&(p=!0);break;case"integer":Number.isFinite(n)&&!(n%1)&&(p=!0);break;case"number":Number.isFinite(n)&&(p=!0);break;case"nonFinite":typeof n=="number"&&!Number.isFinite(n)&&(p=!0);break;case"object":n&&L3(n)===y&&(p=!0);break;case"array":Array.isArray(n)&&(p=!0);break;case"other":p=this.currOtherTypeCallback(n,e,t,u);break;case"null":n===null&&(p=!0);break;default:throw new TypeError("Unknown value type "+y)}if(p)return s={path:e,value:n,parent:t,parentProperty:u},this._handleCallback(s,r,"value"),s}else if(c[0]==="`"&&n&&e3.call(n,c.slice(1))){var m=c.slice(1);h(this._trace(f,n[m],I5(e,m),n,m,r,o,!0))}else if(c.includes(",")){var g=c.split(","),v=Km(g),w;try{for(v.s();!(w=v.n()).done;){var S=w.value;h(this._trace(t4(S,f),n,e,t,u,r,!0))}}catch(K){v.e(K)}finally{v.f()}}else!i&&n&&e3.call(n,c)&&h(this._trace(f,n[c],I5(e,c),n,c,r,o,!0))}if(this._hasParentSelector)for(var I=0;I<d.length;I++){var C=d[I];if(C&&C.isParentSelector){var D=this._trace(C.expr,n,C.path,t,u,r,o);if(Array.isArray(D)){d[I]=D[0];for(var F=D.length,j=1;j<F;j++)I++,d.splice(I,0,D[j])}else d[I]=D}}return d};O2.prototype._walk=function(l,n,e,t,u,r,o,i){if(Array.isArray(e))for(var a=e.length,s=0;s<a;s++)i(s,l,n,e,t,u,r,o);else e&&L3(e)==="object"&&Object.keys(e).forEach(function(c){i(c,l,n,e,t,u,r,o)})};O2.prototype._slice=function(l,n,e,t,u,r,o){if(!!Array.isArray(e)){var i=e.length,a=l.split(":"),s=a[2]&&Number.parseInt(a[2])||1,c=a[0]&&Number.parseInt(a[0])||0,f=a[1]&&Number.parseInt(a[1])||i;c=c<0?Math.max(0,c+i):Math.min(i,c),f=f<0?Math.max(0,f+i):Math.min(i,f);for(var d=[],h=c;h<f;h+=s){var p=this._trace(t4(h,n),e,t,u,r,o,!0);p.forEach(function(y){d.push(y)})}return d}};O2.prototype._eval=function(l,n,e,t,u,r){l.includes("@parentProperty")&&(this.currSandbox._$_parentProperty=r,l=l.replace(/@parentProperty/g,"_$_parentProperty")),l.includes("@parent")&&(this.currSandbox._$_parent=u,l=l.replace(/@parent/g,"_$_parent")),l.includes("@property")&&(this.currSandbox._$_property=e,l=l.replace(/@property/g,"_$_property")),l.includes("@path")&&(this.currSandbox._$_path=O2.toPathString(t.concat([e])),l=l.replace(/@path/g,"_$_path")),l.includes("@root")&&(this.currSandbox._$_root=this.json,l=l.replace(/@root/g,"_$_root")),/@([\t-\r \)\.\[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF])/.test(l)&&(this.currSandbox._$_v=n,l=l.replace(/@([\t-\r \)\.\[\xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF])/g,"_$_v$1"));try{return this.vm.runInNewContext(l,this.currSandbox)}catch(o){throw console.log(o),new Error("jsonPath: "+o.message+": "+l)}};O2.cache={};O2.toPathString=function(l){for(var n=l,e=n.length,t="$",u=1;u<e;u++)/^(~|\^|@(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\(\))$/.test(n[u])||(t+=/^[\*0-9]+$/.test(n[u])?"["+n[u]+"]":"['"+n[u]+"']");return t};O2.toPointer=function(l){for(var n=l,e=n.length,t="",u=1;u<e;u++)/^(~|\^|@(?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\(\))$/.test(n[u])||(t+="/"+n[u].toString().replace(/~/g,"~0").replace(/\//g,"~1"));return t};O2.toPathArray=function(l){var n=O2.cache;if(n[l])return n[l].concat();var e=[],t=l.replace(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\(\)/g,";$&;").replace(/['\[](\??\((?:[\0-\t\x0B\f\x0E-\u2027\u202A-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*?\))['\]]/g,function(r,o){return"[#"+(e.push(o)-1)+"]"}).replace(/\[["']((?:(?!['\]])[\s\S])*)["']\]/g,function(r,o){return"['"+o.replace(/\./g,"%@%").replace(/~/g,"%%@@%%")+"']"}).replace(/~/g,";~;").replace(/["']?\.["']?(?!(?:(?!\[)[\s\S])*\])|\[["']?/g,";").replace(/%@%/g,".").replace(/%%@@%%/g,"~").replace(/(?:;)?(\^+)(?:;)?/g,function(r,o){return";"+o.split("").join(";")+";"}).replace(/;;;|;;/g,";..;").replace(/;$|'?\]|'$/g,""),u=t.split(";").map(function(r){var o=r.match(/#([0-9]+)/);return!o||!o[1]?r:e[o[1]]});return n[l]=u,n[l].concat()};var Qm=function(n,e,t){for(var u=n.length,r=0;r<u;r++){var o=n[r];t(o)&&e.push(n.splice(r--,1)[0])}};O2.prototype.vm={runInNewContext:function(n,e){var t=Object.keys(e),u=[];Qm(t,u,function(s){return typeof e[s]=="function"});var r=t.map(function(s,c){return e[s]}),o=u.reduce(function(s,c){var f=e[c].toString();return/function/.test(f)||(f="function "+f),"var "+c+"="+f+";"+s},"");n=o+n,!/(["'])use strict\1/.test(n)&&!t.includes("arguments")&&(n="var arguments = undefined;"+n),n=n.replace(/;[\t-\r \xA0\u1680\u2000-\u200A\u2028\u2029\u202F\u205F\u3000\uFEFF]*$/,"");var i=n.lastIndexOf(";"),a=i>-1?n.slice(0,i+1)+" return "+n.slice(i+1):" return "+n;return ie(Function,io(t).concat([a])).apply(void 0,io(r))}};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ym(l){return O2(Object.assign({preventEval:!0},l))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Xm=Object.fromEntries(["remediation","context"].map(l=>[l,!0])),Jm=function(n,e,t={}){const u={},r={};return Object.keys(e).filter(o=>!Xm[o]).forEach(o=>{if(!(typeof e[o]=="object"&&!!e[o])){r[o]=e[o];return}if(e[o].rel){u[e[o].name]=D9(n,e[o],t);return}const a=e[o],{value:s,type:c}=a,f=r1(a,["value","type"]);if(r[o]=Object.assign({type:c},f),c!=="object"){r[o].value=s;return}r[o].value={},Object.entries(s).forEach(([d,h])=>{h.rel?u[`${o}-${d.name||d}`]=D9(n,h,t):r[o].value[d]=h})}),{context:r,actions:u}},pc=(l,n)=>{Object.keys(n).forEach(e=>{if(e==="relatesTo"){const t=Array.isArray(n[e])?n[e][0]:n[e];if(typeof t=="string"){const u=Ym({path:t,json:l})[0];if(u){n[e]=u;return}else throw new z(`Cannot resolve relatesTo: ${t}`)}}Array.isArray(n[e])&&n[e].forEach(t=>pc(l,t))})},Zm=(l,n,e)=>{if(n.rel){const u=Dm(l,[n],e)[n.name];return Object.assign(Object.assign({},n),{action:u})}return n},lv=function(n,e,t={}){var u;const r=((u=e.remediation)===null||u===void 0?void 0:u.value)||[];r.forEach(s=>pc(e,s));const o=r.map(s=>Zm(n,s,t)),{context:i,actions:a}=Jm(n,e,t);return{remediations:o,context:i,actions:a}};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function nv(l,n,e,t){var u,r,o;const i=n,{remediations:a,context:s,actions:c}=lv(l,n,e),f=[...a],d=async function(y,m={}){const g=a.find(w=>w.name===y);return g?typeof g.action!="function"?Promise.reject(`Current remediation cannot make form submit action: [${y}]`):g.action(m):Promise.reject(`Unknown remediation choice: [${y}]`)},h=y=>y.name==="interaction_code",p=(o=(r=(u=i.successWithInteractionCode)===null||u===void 0?void 0:u.value)===null||r===void 0?void 0:r.find(h))===null||o===void 0?void 0:o.value;return{proceed:d,neededToProceed:f,actions:c,context:s,rawIdxState:i,interactionCode:p,toPersist:e,requestDidSucceed:t}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var ev={makeIdxState:nv};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const gc=function(n){switch(n){case"1.0.0":return ev;case void 0:case null:throw new Error("Api version is required");default:throw new Error(`Unknown api version: ${n}.  Use an exact semver version.`)}};function mc(l){if(!l)throw new Error("version is required");if((l!=null?l:"").replace(/[^0-9a-zA-Z._-]/,"")!==l||!l)throw new Error("invalid version supplied - version is required and uses semver syntax");gc(l)}function vc(l,n,e,t){var u;const r=(u=n==null?void 0:n.version)!==null&&u!==void 0?u:P7;mc(r);const{makeIdxState:o}=gc(r);return o(l,n,e,t)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function yc(l){return l&&l.version}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function tv(l){return l instanceof j0}function uv(l){return l instanceof u1}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function B9(l,n={}){var e;let t,u;const r=l.transactionManager.loadIdxResponse(n);if(r&&(t=r.rawIdxResponse,u=r.requestDidSucceed),!t){const i=n.version||P7,a=ym(l),{interactionHandle:s,stateHandle:c}=n,f=(e=n.withCredentials)!==null&&e!==void 0?e:!0;try{u=!0,mc(i);const d=`${a}/idp/idx/introspect`,h=c?{stateToken:c}:{interactionHandle:s},p={"Content-Type":`application/ion+json; okta-version=${i}`,Accept:`application/ion+json; okta-version=${i}`};t=await j3(l,{method:"POST",url:d,headers:p,withCredentials:f,args:h})}catch(d){if(tv(d)&&d.xhr&&yc(d.xhr.responseJSON))t=d.xhr.responseJSON,u=!1;else throw d}}const{withCredentials:o}=n;return vc(l,t,{withCredentials:o},u)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function rv(l){var n;return(n=l.value)===null||n===void 0?void 0:n.map(e=>e.name)}function ov(l){var n;return(n=l.value)===null||n===void 0?void 0:n.reduce((e,t)=>(t.required&&e.push(t.name),e),[])}function $1(l){return l.charAt(0).toUpperCase()+l.substring(1)}function x6(l){return l.value.find(({name:n})=>n==="authenticator")}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function ao(l){let n;if($0(l))n=l;else if(typeof l=="string")n={key:l};else throw new Error("Invalid format for authenticator");return n}function d4(l,n){return!l||!n?!1:l.id&&n.id?l.id===n.id:l.key&&n.key?l.key===n.key:!1}function iv(l,n){let e;for(let t of l)if(e=n.find(({relatesTo:u})=>u.key&&u.key===t.key),e)break;return e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class i3{constructor(n,e={},t={}){this.values=Object.assign({},e),this.options=Object.assign({},t),this.formatAuthenticators(),this.remediation=n}formatAuthenticators(){if(this.values.authenticators=this.values.authenticators||[],this.values.authenticators=this.values.authenticators.map(n=>ao(n)),this.values.authenticator){const n=ao(this.values.authenticator);this.values.authenticators.some(t=>d4(n,t))||this.values.authenticators.push(n)}this.values.authenticatorsData=this.values.authenticators.reduce((n,e)=>(typeof e=="object"&&Object.keys(e).length>1&&n.push(e),n),this.values.authenticatorsData||[])}getName(){return this.remediation.name}canRemediate(n){return!ov(this.remediation).find(u=>!this.hasData(u))}getData(n){if(!n)return rv(this.remediation).reduce((u,r)=>(u[r]=this.getData(r),u),{});if(typeof this[`map${$1(n)}`]=="function"){const e=this[`map${$1(n)}`](this.remediation.value.find(({name:t})=>t===n));if(e)return e}if(this.map&&this.map[n]){const e=this.map[n];for(let t=0;t<e.length;t++){let u=this.values[e[t]];if(u)return u}}return this.values[n]}hasData(n){return!!this.getData(n)}getNextStep(n,e){const t=this.getName(),u=this.getInputs(),r=this.getAuthenticator(),o=r==null?void 0:r.type;return Object.assign(Object.assign({name:t,inputs:u},o&&{type:o}),r&&{authenticator:r})}getInputs(){const n=[];return(this.remediation.value||[]).forEach(t=>{let u,{name:r,type:o,visible:i,messages:a}=t;if(i!==!1){if(typeof this[`getInput${$1(r)}`]=="function")u=this[`getInput${$1(r)}`](t);else if(o!=="object"){let s;const c=(this.map?this.map[r]:null)||[];c.length===1?s=c[0]:s=c.find(f=>Object.keys(this.values).includes(f)),s&&(u=Object.assign(Object.assign({},t),{name:s}))}u||(u=t),Array.isArray(u)?u.forEach(s=>n.push(s)):(a&&(u.messages=a),n.push(u))}}),n}static getMessages(n){var e,t;if(!!n.value)return(t=(e=n.value[0])===null||e===void 0?void 0:e.form)===null||t===void 0?void 0:t.value.reduce((u,r)=>(r.messages&&(u=[...u,...r.messages.value]),u),[])}getValuesAfterProceed(){const n=this.remediation.value||[],e=this.getInputs(),t=[...n,...e];for(const u of t)delete this.values[u.name];return this.values}getAuthenticator(){var n,e;const t=(n=this.remediation.relatesTo)===null||n===void 0?void 0:n.value;if(!t)return;const u=x6(this.remediation);if(!u)return t;const r=u.form.value.find(({name:i})=>i==="id").value,o=(e=u.form.value.find(({name:i})=>i==="enrollmentId"))===null||e===void 0?void 0:e.value;return Object.assign(Object.assign({},t),{id:r,enrollmentId:o})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class s5{constructor(n){this.meta=n}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class wc extends s5{canVerify(n){return!!(n.credentials||n.verificationCode||n.otp)}mapCredentials(n){const{credentials:e,verificationCode:t,otp:u}=n;if(!(!e&&!t&&!u))return e||{passcode:t||u}}getInputs(n){var e;return Object.assign(Object.assign({},(e=n.form)===null||e===void 0?void 0:e.value[0]),{name:"verificationCode",type:"string",required:n.required})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class av extends wc{mapCredentials(n){const{verificationCode:e}=n;if(!!e)return{totp:e}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Sc extends s5{canVerify(n){return!!(n.credentials||n.password||n.passcode)}mapCredentials(n){const{credentials:e,password:t,passcode:u}=n;if(!(!e&&!t&&!u))return e||{passcode:u||t}}getInputs(n){var e;return Object.assign(Object.assign({},(e=n.form)===null||e===void 0?void 0:e.value[0]),{name:"password",type:"string",required:n.required})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class sv extends s5{canVerify(n){const{credentials:e}=n;if(e&&e.questionKey&&e.answer)return!0;const{questionKey:t,question:u,answer:r}=n;return!!(t&&r)||!!(u&&r)}mapCredentials(n){const{questionKey:e,question:t,answer:u}=n;if(!(!u||!e&&!t))return{questionKey:t?"custom":e,question:t,answer:u}}getInputs(){return[{name:"questionKey",type:"string",required:!0},{name:"question",type:"string",label:"Create a security question"},{name:"answer",type:"string",label:"Answer",required:!0}]}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class cv extends s5{canVerify(n){const{credentials:e}=n;if(e&&e.answer)return!0;const{answer:t}=n;return!!t}mapCredentials(n){const{answer:e}=n;if(!!e)return{questionKey:this.meta.contextualData.enrolledQuestion.questionKey,answer:e}}getInputs(){return[{name:"answer",type:"string",label:"Answer",required:!0}]}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class dv extends s5{canVerify(n){const{credentials:e}=n,t=e||n,{clientData:u,attestation:r}=t;return!!(u&&r)}mapCredentials(n){const{credentials:e,clientData:t,attestation:u}=n;if(!(!e&&!t&&!u))return e||{clientData:t,attestation:u}}getInputs(){return[{name:"clientData",type:"string",required:!0,visible:!1,label:"Client Data"},{name:"attestation",type:"string",required:!0,visible:!1,label:"Attestation"}]}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class fv extends s5{canVerify(n){const{credentials:e}=n,t=e||n,{clientData:u,authenticatorData:r,signatureData:o}=t;return!!(u&&r&&o)}mapCredentials(n){const{credentials:e,authenticatorData:t,clientData:u,signatureData:r}=n;if(!(!e&&!t&&!u&&!r))return e||{authenticatorData:t,clientData:u,signatureData:r}}getInputs(){return[{name:"authenticatorData",type:"string",label:"Authenticator Data",required:!0,visible:!1},{name:"clientData",type:"string",label:"Client Data",required:!0,visible:!1},{name:"signatureData",type:"string",label:"Signature Data",required:!0,visible:!1}]}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function hv(l){var n,e;const t=l.relatesTo,u=(t==null?void 0:t.value)||{};switch(u.key){case F3.OKTA_PASSWORD:return new Sc(u);case F3.SECURITY_QUESTION:return!((n=u.contextualData)===null||n===void 0)&&n.enrolledQuestion?new cv(u):new sv(u);case F3.OKTA_VERIFY:return new av(u);case F3.WEBAUTHN:return!((e=u.contextualData)===null||e===void 0)&&e.challengeData?new fv(u):new dv(u);default:return new wc(u)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class A7 extends i3{constructor(n,e={}){super(n,e),this.authenticator=hv(n)}getNextStep(n,e){var t;const u=super.getNextStep(n,e),r=(t=e==null?void 0:e.authenticatorEnrollments)===null||t===void 0?void 0:t.value;return Object.assign(Object.assign({},u),{authenticatorEnrollments:r})}canRemediate(){return this.authenticator.canVerify(this.values)}mapCredentials(){return this.authenticator.mapCredentials(this.values)}getInputCredentials(n){return this.authenticator.getInputs(n)}getValuesAfterProceed(){return this.values=super.getValuesAfterProceed(),Object.keys(this.values).filter(e=>e!=="credentials").reduce((e,t)=>Object.assign(Object.assign({},e),{[t]:this.values[t]}),{})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class T6 extends A7{}T6.remediationName="enroll-authenticator";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class c5 extends i3{canRemediate(){return!!this.values.startPolling||this.options.step==="enroll-poll"}getNextStep(n,e){const t=super.getNextStep(n,e);let u=this.getAuthenticator();return!u&&(e==null?void 0:e.currentAuthenticator)&&(u=e.currentAuthenticator.value),Object.assign(Object.assign({},t),{authenticator:u,poll:{required:!0,refresh:this.remediation.refresh}})}getValuesAfterProceed(){return Object.keys(this.values).filter(e=>e!=="startPolling").reduce((e,t)=>Object.assign(Object.assign({},e),{[t]:this.values[t]}),{})}}c5.remediationName="enroll-poll";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class E6 extends i3{canRemediate(){if(this.values.channel)return!0;if(this.values.authenticator){const{id:n,channel:e}=this.values.authenticator;if(!!n&&!!e)return!0}return!1}getNextStep(n,e){const t=super.getNextStep(n,e),u=e.currentAuthenticator.value;return Object.assign(Object.assign({},t),{authenticator:u})}getData(){var n;return{authenticator:{id:this.remediation.value[0].value.form.value[0].value,channel:((n=this.values.authenticator)===null||n===void 0?void 0:n.channel)||this.values.channel},stateHandle:this.values.stateHandle}}getValuesAfterProceed(){this.values=super.getValuesAfterProceed(),delete this.values.authenticators;const n=this.values.channel?"channel":"authenticator";return Object.keys(this.values).filter(t=>t!==n).reduce((t,u)=>Object.assign(Object.assign({},t),{[u]:this.values[u]}),{})}}E6.remediationName="select-enrollment-channel";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class C6 extends i3{getInputEmail(){return[{name:"email",type:"string",required:!0,label:"Email"}]}getInputPhoneNumber(){return[{name:"phoneNumber",type:"string",required:!0,label:"Phone Number"}]}canRemediate(){return Boolean(this.values.email||this.values.phoneNumber)}getNextStep(n,e){const t=super.getNextStep(n,e),u=e.currentAuthenticator.value;return Object.assign(Object.assign({},t),{authenticator:u})}getData(){return{stateHandle:this.values.stateHandle,email:this.values.email,phoneNumber:this.values.phoneNumber}}getValuesAfterProceed(){return Object.keys(this.values).filter(e=>!["email","phoneNumber"].includes(e)).reduce((e,t)=>Object.assign(Object.assign({},e),{[t]:this.values[t]}),{})}}C6.remediationName="enrollment-channel-data";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class o1 extends A7{}o1.remediationName="challenge-authenticator";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class b6 extends c5{canRemediate(){return!!this.values.startPolling||this.options.step==="challenge-poll"}}b6.remediationName="challenge-poll";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class _7 extends A7{}_7.remediationName="reset-authenticator";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class R7 extends i3{constructor(n,e={},t={}){super(n,e,t),this.authenticator=null,this.getCredentialsFromRemediation()&&(this.authenticator=this.authenticator=new Sc({}))}canRemediate(){if(this.authenticator&&!this.authenticator.canVerify(this.values))return!1;const n=this.getData().userProfile;return n?this.remediation.value.find(({name:t})=>t==="userProfile").form.value.reduce((t,u)=>(u.required&&(t=t&&!!n[u.name]),t),!0):!1}getCredentialsFromRemediation(){return this.remediation.value.find(({name:n})=>n==="credentials")}mapUserProfile({form:{value:n}}){const t=n.map(({name:u})=>u).reduce((u,r)=>this.values[r]?Object.assign(Object.assign({},u),{[r]:this.values[r]}):u,{});if(Object.keys(t).length!==0)return t}mapCredentials(){const n=this.authenticator&&this.authenticator.mapCredentials(this.values);if(!!n)return n}getInputUserProfile(n){return[...n.form.value]}getInputCredentials(n){return[...n.form.value]}getErrorMessages(n){return n.value[0].form.value.reduce((e,t)=>(t.messages&&e.push(t.messages.value[0].message),e),[])}}R7.remediationName="enroll-profile";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class M4 extends i3{constructor(){super(...arguments),this.map={identifier:["username"]}}canRemediate(){const{identifier:n}=this.getData();return!!n}mapCredentials(){const{credentials:n,password:e}=this.values;if(!(!n&&!e))return n||{passcode:e}}getInputCredentials(n){return Object.assign(Object.assign({},n.form.value[0]),{name:"password",required:n.required})}}M4.remediationName="identify";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class O6 extends i3{mapCredentials(){const{newPassword:n}=this.values;if(!!n)return{passcode:n}}getInputCredentials(n){const t=this.getAuthenticator().type==="password"?"newPassword":"verificationCode";return Object.assign(Object.assign({},n.form.value[0]),{name:t})}}O6.remediationName="reenroll-authenticator";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class I7 extends i3{canRemediate(){return!1}getNextStep(){const{name:n,type:e,idp:t,href:u}=this.remediation;return{name:n,type:e,idp:t,href:u}}}I7.remediationName="redirect-idp";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class N7 extends i3{findMatchedOption(n,e){let t;for(let u of n)if(t=e.find(({relatesTo:r})=>r.key&&r.key===u.key),t)break;return t}canRemediate(n){var e,t;const{authenticators:u,authenticator:r}=this.values,o=x6(this.remediation),{options:i}=o;if(!u||!u.length)return!1;if($0(r)&&r.id)return!0;const a=this.findMatchedOption(u,i);if(a){const s=(n==null?void 0:n.currentAuthenticator)&&(n==null?void 0:n.currentAuthenticator.value.id)===((e=a.relatesTo)===null||e===void 0?void 0:e.id),c=(n==null?void 0:n.currentAuthenticatorEnrollment)&&(n==null?void 0:n.currentAuthenticatorEnrollment.value.id)===((t=a.relatesTo)===null||t===void 0?void 0:t.id);return!s&&!c}return!1}mapAuthenticator(n){const{authenticators:e,authenticator:t}=this.values;if($0(t)&&t.id)return this.selectedAuthenticator=t,t;const{options:u}=n,r=iv(e,u);return this.selectedAuthenticator=r.relatesTo,this.selectedOption=r,{id:r==null?void 0:r.value.form.value.find(({name:o})=>o==="id").value}}getInputAuthenticator(n){const e=n.options.map(({label:t,relatesTo:u})=>({label:t,value:u.key}));return{name:"authenticator",type:"string",options:e}}getValuesAfterProceed(){this.values=super.getValuesAfterProceed();const n=this.values.authenticators.filter(e=>d4(e,this.selectedAuthenticator)!==!0);return Object.assign(Object.assign({},this.values),{authenticators:n})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class i1 extends N7{constructor(n,e={},t={}){var u;super(n,e,t);const r=this.options.flow==="recoverPassword";((u=x6(n).options)===null||u===void 0?void 0:u.some(({relatesTo:i})=>(i==null?void 0:i.key)===F3.OKTA_PASSWORD))&&(r||this.values.password)&&(this.values.authenticators=[...this.values.authenticators||[],{key:F3.OKTA_PASSWORD}])}}i1.remediationName="select-authenticator-authenticate";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class a1 extends N7{}a1.remediationName="select-authenticator-enroll";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class M7 extends N7{constructor(){super(...arguments),this.map={identifier:["username"]}}canRemediate(){return!!this.getData("identifier")&&super.canRemediate()}mapAuthenticator(n){var e,t,u;const r=super.mapAuthenticator(n),o=(e=this.selectedOption)===null||e===void 0?void 0:e.value.form.value.find(({name:a})=>a==="methodType"),i=this.values.methodType||(o==null?void 0:o.value)||((u=(t=o==null?void 0:o.options)===null||t===void 0?void 0:t[0])===null||u===void 0?void 0:u.value);return i?Object.assign(Object.assign({},r),{methodType:i}):r}getInputUsername(){return{name:"username",type:"string"}}}M7.remediationName="select-authenticator-unlock-account";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class F7 extends i3{canRemediate(){return!0}}F7.remediationName="select-enroll-profile";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class xc extends i3{constructor(n,e={}){super(n,e),this.authenticator=this.getAuthenticator(),this.formatAuthenticatorData()}formatAuthenticatorData(){if(this.getAuthenticatorData())this.values.authenticatorsData=this.values.authenticatorsData.map(e=>d4(this.authenticator,e)?this.mapAuthenticatorDataFromValues(e):e);else{const e=this.mapAuthenticatorDataFromValues();e&&this.values.authenticatorsData.push(e)}}getAuthenticatorData(){return this.values.authenticatorsData.find(n=>d4(this.authenticator,n))}canRemediate(){return this.values.authenticatorsData.some(n=>d4(this.authenticator,n))}mapAuthenticatorDataFromValues(n){let{methodType:e,authenticator:t}=this.values;!e&&$0(t)&&(e=t==null?void 0:t.methodType);const{id:u,enrollmentId:r}=this.authenticator,o=Object.assign(Object.assign({id:u,enrollmentId:r},n&&n),e&&{methodType:e});return o.methodType?o:null}getAuthenticatorFromRemediation(){return this.remediation.value.find(({name:e})=>e==="authenticator")}getValuesAfterProceed(){this.values=super.getValuesAfterProceed();const n=this.values.authenticatorsData.filter(e=>d4(this.authenticator,e)!==!0);return Object.assign(Object.assign({},this.values),{authenticatorsData:n})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class s1 extends xc{mapAuthenticator(){return this.getAuthenticatorData()}getInputAuthenticator(){const n=this.getAuthenticatorFromRemediation(),e=n.form.value.find(({name:u})=>u==="methodType");return e&&e.options?{name:"methodType",type:"string",required:!0,options:e.options}:[...n.form.value]}getValuesAfterProceed(){return this.values=super.getValuesAfterProceed(),Object.keys(this.values).filter(e=>e!=="authenticator").reduce((e,t)=>Object.assign(Object.assign({},e),{[t]:this.values[t]}),{})}}s1.remediationName="authenticator-verification-data";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class c1 extends xc{mapAuthenticator(){const n=this.getAuthenticatorData();return{id:x6(this.remediation).form.value.find(({name:t})=>t==="id").value,methodType:n.methodType,phoneNumber:n.phoneNumber}}getInputAuthenticator(n){return[{name:"methodType",type:"string"},{name:"phoneNumber",label:"Phone Number",type:"string"}].map(e=>{const t=n.form.value.find(u=>u.name===e.name);return Object.assign(Object.assign({},t),e)})}mapAuthenticatorDataFromValues(n){n=super.mapAuthenticatorDataFromValues(n);const{phoneNumber:e}=this.values;if(!(!n&&!e))return Object.assign(Object.assign({},n&&n),e&&{phoneNumber:e})}}c1.remediationName="authenticator-enrollment-data";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class k6 extends i3{canRemediate(){return!!this.values.skip||this.options.step==="skip"}}k6.remediationName="skip";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function u0(l){if(Array.isArray(l))return l.map(e=>typeof e=="string"||typeof e=="number"||typeof e=="boolean"?e:u0(e));const n={};for(const[e,t]of Object.entries(l))if(!(t===null||typeof t=="undefined"))if(typeof t=="object"){const u=Object.keys(t);if(["value","form"].includes(e)&&u.length===1&&["value","form"].includes(u[0])){const r=u0(t);Object.entries(r).forEach(([o,i])=>{n[o]=i})}else n[e]=u0(t)}else n[e]=t;return n}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class L7 extends i3{canRemediate(){return typeof this.remediation.action!="function"?!1:!!(this.remediation.name==="poll"||this.remediation.name.endsWith("-poll")||this.options.step)}getData(){return this.getInputs().reduce((e,{name:t})=>(e[t]=this.values[t],e),{})}getNextStep(n,e){const t=this.getName(),u=this.getInputs(),r=this.remediation,{href:o,method:i,rel:a,accepts:s,produces:c,value:f,action:d}=r,h=r1(r,["href","method","rel","accepts","produces","value","action"]);return d?Object.assign(Object.assign(Object.assign({},h),!!u.length&&{inputs:u}),{action:async p=>n.idx.proceed(Object.assign({step:t},p))}):Object.assign({},this.remediation)}getInputs(){return(this.remediation.value||[]).filter(({name:n})=>n!=="stateHandle").map(u0).map(n=>(n.type=n.type||"string",n))}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var pv=Object.freeze(Object.defineProperty({__proto__:null,Remediator:i3,EnrollAuthenticator:T6,EnrollPoll:c5,SelectEnrollmentChannel:E6,EnrollmentChannelData:C6,ChallengeAuthenticator:o1,ChallengePoll:b6,ResetAuthenticator:_7,EnrollProfile:R7,Identify:M4,ReEnrollAuthenticator:O6,RedirectIdp:I7,SelectAuthenticatorAuthenticate:i1,SelectAuthenticatorEnroll:a1,SelectAuthenticatorUnlockAccount:M7,SelectEnrollProfile:F7,AuthenticatorVerificationData:s1,AuthenticatorEnrollmentData:c1,Skip:k6,GenericRemediator:L7},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function B0(l){const{neededToProceed:n,interactionCode:e}=l;return!n.length&&!e}function gv(l){return l.neededToProceed.some(({name:n})=>n==="skip")}function mv(l){return Object.keys(l.actions).some(n=>n.includes("resend"))}function U9(l){if(!(!l||!Array.isArray(l)))return l.reduce((n,e)=>{if(e.messages&&(n=[...n,...e.messages.value]),e.form){const t=U9(e.form.value)||[];n=[...n,...t]}if(e.options){let t=[];e.options.forEach(r=>{!r.value||typeof r.value=="string"||(t=[...t,r.value])});const u=U9(t)||[];n=[...n,...u]}return n},[])}function Tc(l,n){var e;let t=[];const{rawIdxState:u,neededToProceed:r}=l,o=(e=u.messages)===null||e===void 0?void 0:e.value.map(a=>a);if(o&&(t=[...t,...o]),!n.useGenericRemediator)for(let a of r){const s=U9(a.value);s&&(t=[...t,...s])}const i={};return t=t.reduce((a,s)=>{var c;const f=(c=s.i18n)===null||c===void 0?void 0:c.key;return f&&i[f]&&s.message===i[f].message||(i[f]=s,a=[...a,s]),a},[]),t}function vv(l){const n=[],{actions:e,neededToProceed:t}=l;return e["currentAuthenticator-recover"]&&n.push(Ll.PASSWORD_RECOVERY),t.some(({name:u})=>u==="select-enroll-profile")&&n.push(Ll.REGISTRATION),t.some(({name:u})=>u==="redirect-idp")&&n.push(Ll.SOCIAL_IDP),t.some(({name:u})=>u==="unlock-account")&&n.push(Ll.ACCOUNT_UNLOCK),n}function yv(l,n,e){var t;const u=[],r=Object.values(pv).reduce((o,i)=>(i.remediationName&&(o[i.remediationName]=i),o),{});for(let o of n.neededToProceed){const i=H9(o,{useGenericRemediator:e,remediators:r});if(i){const a=new i(o);u.push(a.getNextStep(l,n.context))}}for(const[o]of Object.entries(n.actions||{})){let i={name:o,action:async a=>l.idx.proceed({actions:[{name:o,params:a}]})};if(o.startsWith("currentAuthenticator")){const[a,s]=gm(o,"-"),c=n.rawIdxState[a].value[s],f=r1(c,["href","method","rel","accepts","produces"]),d=(t=c.value)===null||t===void 0?void 0:t.filter(h=>h.name!=="stateHandle");i=Object.assign(Object.assign(Object.assign({},f),d&&{value:d}),i)}u.push(i)}return u}function wv(l,n,e){const u=(l.neededToProceed||[]).find(o=>o.name===n);return u?u.value.reduce((o,i)=>{const{name:a,value:s}=i;return a==="stateHandle"?o[a]=s:o[a]=e[a],o},{}):(J3(`filterValuesForRemediation: "${n}" did not match any remediations`),e)}function H9(l,n){const{useGenericRemediator:e,remediators:t}=n;if(!!l)return e?L7:t[l.name]}function z9(l,n,e){const t=e.remediators,u=e.useGenericRemediator,{neededToProceed:r,context:o}=l;let i;if(e.step){const s=r.find(({name:c})=>c===e.step);if(s){const c=H9(s,e);return c?new c(s,n,e):void 0}else{J3(`step "${e.step}" did not match any remediations`);return}}const a=[];if(u)a.push(new L7(r[0],n,e));else for(let s of r){if(!Object.keys(t).includes(s.name))continue;const f=H9(s,e);if(i=new f(s,n,e),i.canRemediate(o))return i;a.push(i)}return a[0]}function V9(l,n,e){const t=n.getNextStep(l,e.context),u=gv(e),r=mv(e);return Object.assign(Object.assign(Object.assign({},t),u&&{canSkip:u}),r&&{canResend:r})}function j1(l,n,e={}){const t=B0(n),u=Tc(n,e);if(t)return{idxResponse:n,terminal:t,messages:u};{const r=z9(n,{},e),o=r&&V9(l,r,n);return Object.assign({idxResponse:n,messages:u},o&&{nextStep:o})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Sv(l,n){return Object.keys(n.actions).find(e=>!!l.resend&&e.includes("-resend"))}function xv(l){return Object.assign(Object.assign({},l),{resend:void 0})}function Tv(l,n){let e=l.actions||[];return e=e.filter(t=>typeof t=="string"?t!==n:t.name!==n),Object.assign(Object.assign({},l),{actions:e})}async function r0(l,n,e,t){let{neededToProceed:u,interactionCode:r}=n;const{flow:o}=t;if(r)return{idxResponse:n};const i=z9(n,e,t),a=Sv(e,n),c=[...t.actions||[],...a&&[a]||[]];if(c)for(let p of c){let y={};typeof p!="string"&&(y=p.params||{},p=p.name);let m=xv(e),g=Tv(t,p);if(typeof n.actions[p]=="function")return n=await n.actions[p](y),n.requestDidSucceed===!1?j1(l,n,t):p==="cancel"?{idxResponse:n,canceled:!0}:r0(l,n,m,g);if(u.find(({name:w})=>w===p))return n=await n.proceed(p,y),n.requestDidSucceed===!1?j1(l,n,t):r0(l,n,e,g)}const f=B0(n);if(f)return{idxResponse:n,terminal:f};if(!i){if(t.step)return e=wv(n,t.step,e),n=await n.proceed(t.step,e),n.requestDidSucceed===!1?j1(l,n,t):{idxResponse:n};if(o==="default")return{idxResponse:n};throw new z(`
      No remediation can match current flow, check policy settings in your org.
      Remediations: [${u.reduce((p,y)=>p?p+" ,"+y.name:y.name,"")}]
    `)}if(!i.canRemediate()){const p=V9(l,i,n);return{idxResponse:n,nextStep:p}}const d=i.getName(),h=i.getData();if(n=await n.proceed(d,h),n.requestDidSucceed===!1)return j1(l,n,t);if(e=i.getValuesAfterProceed(),t=Object.assign(Object.assign({},t),{step:void 0}),t.useGenericRemediator&&!n.interactionCode&&!B0(n)){const p=z9(n,e,t),y=V9(l,p,n);return{idxResponse:n,nextStep:y}}return r0(l,n,e,t)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const so={identify:M4,"select-authenticator-authenticate":i1,"select-authenticator-enroll":a1,"authenticator-enrollment-data":c1,"authenticator-verification-data":s1,"enroll-authenticator":T6,"challenge-authenticator":o1,"challenge-poll":b6,"reenroll-authenticator":O6,"enroll-poll":c5,"select-enrollment-channel":E6,"enrollment-channel-data":C6,"redirect-idp":I7,skip:k6};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Ev={identify:M4,"identify-recovery":M4,"select-authenticator-authenticate":i1,"select-authenticator-enroll":a1,"challenge-authenticator":o1,"authenticator-verification-data":s1,"authenticator-enrollment-data":c1,"reset-authenticator":_7,"reenroll-authenticator":O6,"enroll-poll":c5};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Cv={"select-enroll-profile":F7,"enroll-profile":R7,"authenticator-enrollment-data":c1,"select-authenticator-enroll":a1,"enroll-poll":c5,"select-enrollment-channel":E6,"enrollment-channel-data":C6,"enroll-authenticator":T6,skip:k6};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const bv={identify:M4,"select-authenticator-unlock-account":M7,"select-authenticator-authenticate":i1,"challenge-authenticator":o1,"challenge-poll":b6,"authenticator-verification-data":s1};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function D7(l,n="default"){let e,t,u=!0;switch(n){case"register":case"signup":case"enrollProfile":e=Cv,u=!1;break;case"recoverPassword":case"resetPassword":e=Ev,t=["currentAuthenticator-recover","currentAuthenticatorEnrollment-recover"],u=!1;break;case"unlockAccount":e=bv,u=!1,t=["unlock-account"];break;case"authenticate":case"login":case"signin":e=so;break;default:e=so;break}return{flow:n,remediators:e,actions:t,withCredentials:u}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ov(l){const n=["flow","remediators","actions","withCredentials","step","useGenericRemediator","exchangeCodeForTokens"],e=Object.assign({},l);return n.forEach(t=>{delete e[t]}),e}function kv(l,n){let{options:e}=n;e=Object.assign(Object.assign({},l.options.idx),e);let{flow:t,withCredentials:u,remediators:r,actions:o}=e;const i=Cn.PENDING;if(t=t||l.idx.getFlow()||"default",t){l.idx.setFlow(t);const a=D7(l,t);u=typeof u!="undefined"?u:a.withCredentials,r=r||a.remediators,o=o||a.actions}return Object.assign(Object.assign({},n),{options:Object.assign(Object.assign({},e),{flow:t,withCredentials:u,remediators:r,actions:o}),status:i})}async function Pv(l,n){const{options:e}=n,{stateHandle:t,withCredentials:u,version:r,state:o,scopes:i,recoveryToken:a,activationToken:s,maxAge:c,acrValues:f,nonce:d}=e;let h,p=fn(l,{state:o,recoveryToken:a,activationToken:s});if(t)h=await B9(l,{withCredentials:u,version:r,stateHandle:t});else{let y=p==null?void 0:p.interactionHandle;if(!y){l.transactionManager.clear();const m=await dc(l,{withCredentials:u,state:o,scopes:i,activationToken:s,recoveryToken:a,maxAge:c,acrValues:f,nonce:d});y=m.interactionHandle,p=m.meta}h=await B9(l,{withCredentials:u,version:r,interactionHandle:y})}return Object.assign(Object.assign({},n),{idxResponse:h,meta:p})}async function Av(l,n){let{idxResponse:e,options:t,values:u}=n;const{autoRemediate:r,remediators:o,actions:i,flow:a,step:s,useGenericRemediator:c}=t;if(!(r!==!1&&(o||i||s)))return n;u=Object.assign(Object.assign({},u),{stateHandle:e.rawIdxState.stateHandle});const{idxResponse:d,nextStep:h,canceled:p}=await r0(l,e,u,{remediators:o,actions:i,flow:a,step:s,useGenericRemediator:c});return e=d,Object.assign(Object.assign({},n),{idxResponse:e,nextStep:h,canceled:p})}async function _v(l,n){let{meta:e,idxResponse:t}=n;const{interactionCode:u}=t,{clientId:r,codeVerifier:o,ignoreSignature:i,redirectUri:a,urls:s,scopes:c}=e;return(await l.token.exchangeCodeForTokens({interactionCode:u,clientId:r,codeVerifier:o,ignoreSignature:i,redirectUri:a,scopes:c},s)).tokens}async function Rv(l,n){let{options:e,idxResponse:t,canceled:u,status:r}=n;const{exchangeCodeForTokens:o}=e;let i=!1,a=!1,s=!0,c,f,d,h,p,y;if(t&&(i=!!(t.requestDidSucceed||t.stepUp),d=vv(t),h=yv(l,t,e.useGenericRemediator),p=Tc(t,e),y=B0(t)),y){r=Cn.TERMINAL;const m=Object.keys(t.actions).length>0,g=!!p.find(w=>w.class==="ERROR");!m&&!g&&t.requestDidSucceed===!0?a=!0:i=!!m,s=!1}else u?(r=Cn.CANCELED,a=!0):t!=null&&t.interactionCode&&(c=t.interactionCode,o===!1?(r=Cn.SUCCESS,a=!1):(f=await _v(l,n),r=Cn.SUCCESS,a=!0));return Object.assign(Object.assign({},n),{status:r,interactionCode:c,tokens:f,shouldSaveResponse:i,shouldClearTransaction:a,clearSharedStorage:s,enabledFeatures:d,availableSteps:h,messages:p,terminal:y})}async function Wn(l,n={}){var e;let t={options:n,values:Ov(n)};t=kv(l,t),t=await Pv(l,t),t=await Av(l,t),t=await Rv(l,t);const{idxResponse:u,meta:r,shouldSaveResponse:o,shouldClearTransaction:i,clearSharedStorage:a,status:s,enabledFeatures:c,availableSteps:f,tokens:d,nextStep:h,messages:p,error:y,interactionCode:m}=t;if(i)l.transactionManager.clear({clearSharedStorage:a});else if(b7(l,Object.assign({},r)),o){const{rawIdxState:F,requestDidSucceed:j}=u;l.transactionManager.saveIdxResponse({rawIdxResponse:F,requestDidSucceed:j,stateHandle:(e=u.context)===null||e===void 0?void 0:e.stateHandle,interactionHandle:r==null?void 0:r.interactionHandle})}const{actions:g,context:v,neededToProceed:w,proceed:S,rawIdxState:I,requestDidSucceed:C,stepUp:D}=u||{};return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({status:s},r&&{meta:r}),c&&{enabledFeatures:c}),f&&{availableSteps:f}),d&&{tokens:d}),h&&{nextStep:h}),p&&p.length&&{messages:p}),y&&{error:y}),D&&{stepUp:D}),{interactionCode:m,actions:g,context:v,neededToProceed:w,proceed:S,rawIdxState:I,requestDidSucceed:C})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Iv(l,n={}){return n.password&&!n.authenticator&&(n.authenticator=F3.OKTA_PASSWORD),Wn(l,Object.assign(Object.assign({},n),{flow:"authenticate"}))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Nv(l,n){const e=l.transactionManager.load(),t=D7(l,e.flow);return Wn(l,Object.assign(Object.assign(Object.assign({},n),t),{actions:["cancel"]}))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ec(l){var n=/\+/g,e=/([^&=]+)=?([^&]*)/g,t=l||"";t.charAt(0)==="#"&&t.charAt(1)==="/"&&(t=t.substring(2)),(t.charAt(0)==="#"||t.charAt(0)==="?")&&(t=t.substring(1));for(var u={},r;r=e.exec(t),!!r;){var o=r[1],i=r[2];o==="id_token"||o==="access_token"||o==="code"?u[o]=i:u[o]=decodeURIComponent(i.replace(n," "))}return u}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Mv extends t1{constructor(n,e){super(`Enter the OTP code in the originating client: ${e}`),this.name="EmailVerifyCallbackError",this.state=n,this.otp=e}}function Fv(l){return l.name==="EmailVerifyCallbackError"}function Cc(l){return/(otp=)/i.test(l)&&/(state=)/i.test(l)}function bc(l){return Ec(l)}async function Lv(l,n){if(Cc(n)){const{state:e,otp:t}=bc(n);if(l.idx.canProceed({state:e}))return await l.idx.proceed({state:e,otp:t});throw new Mv(e,t)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Oc(l,n={}){return!!(fn(l,n)||n.stateHandle)}async function kc(l,n={}){if(!Oc(l,n))throw new z("Unable to proceed: saved transaction could not be loaded");let{flow:e,state:t}=n;if(!e){const u=fn(l,{state:t});e=u==null?void 0:u.flow}return Wn(l,Object.assign(Object.assign({},n),{flow:e}))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Pc(l,n={}){var e;let t=await kc(l,{startPolling:!0});const u=fn(l);let r=(e=u==null?void 0:u.remediations)===null||e===void 0?void 0:e.find(o=>o.includes("poll"));return r!=null&&r.length||J3("No polling remediations available at the current IDX flow stage"),Number.isInteger(n.refresh)?new Promise(function(o,i){setTimeout(async function(){var a,s;try{const c=(s=(a=t.nextStep)===null||a===void 0?void 0:a.poll)===null||s===void 0?void 0:s.refresh;o(c?Pc(l,{refresh:c}):t)}catch(c){i(c)}},n.refresh)}):t}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function $7(l,n={}){return l.transactionManager.clear(),Wn(l,Object.assign({exchangeCodeForTokens:!1},n))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Dv(l,n={}){if(!Zs(l)){const{enabledFeatures:e}=await $7(l,Object.assign(Object.assign({},n),{flow:"register",autoRemediate:!1}));if(!n.activationToken&&e&&!e.includes(Ll.REGISTRATION))throw new z("Registration is not supported based on your current org configuration.")}return Wn(l,Object.assign(Object.assign({},n),{flow:"register"}))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function $v(l,n={}){const e=D7(l,"recoverPassword");return Wn(l,Object.assign(Object.assign({},n),e))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function jv(l,n){const e=l.transactionManager.load();if(!e)throw new z("No transaction data was found in storage");const{codeVerifier:t,state:u}=e,{searchParams:r}=new URL(n),o=r.get("state"),i=r.get("interaction_code"),a=r.get("error");if(a)throw new u1(a,r.get("error_description"));if(o!==u)throw new z("State in redirect uri does not match with transaction state");if(!i)throw new z("Unable to parse interaction_code from the url");const{tokens:s}=await l.token.exchangeCodeForTokens({interactionCode:i,codeVerifier:t});l.tokenManager.setTokens(s)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Bv(l,n={}){if(n.flow="unlockAccount",!Zs(l)){const{enabledFeatures:e}=await $7(l,Object.assign(Object.assign({},n),{autoRemediate:!1}));if(e&&!e.includes(Ll.ACCOUNT_UNLOCK))throw new z("Self Service Account Unlock is not supported based on your current org configuration.")}return Wn(l,Object.assign({},n))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ac(l){return l.name!=="OAuthError"?!1:l.errorCode==="interaction_required"}function Uv(l){return uv(l)&&l.errorCode==="invalid_grant"&&l.errorSummary==="The refresh token is invalid or expired."}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Hv(l){return/((id|access)_token=)/i.test(l)}function zv(l){return/(code=)/i.test(l)}function Vv(l){return/(interaction_code=)/i.test(l)}function Wv(l){return/(error=)/i.test(l)||/(error_description)/i.test(l)}function Gv(l,n){var e=n.options;return!l||!e.redirectUri?!1:l.indexOf(e.redirectUri)===0}function _c(l){return l.pkce||l.responseType==="code"||l.responseMode==="query"}function Rc(l){var n=_c(l),e=n&&l.responseMode!=="fragment";return e?window.location.search:window.location.hash}function j7(l){if(!Gv(window.location.href,l))return!1;var n=_c(l.options),e=Rc(l.options);if(Wv(e))return!0;if(n){var t=zv(e)||Vv(e);return t}return Hv(window.location.hash)}function Kv(l,n){if(!n){if(!j7(l))return!1;n=Rc(l.options)}return/(error=interaction_required)/i.test(n)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function qv(l){const n=$7.bind(null,l);return{interact:dc.bind(null,l),introspect:B9.bind(null,l),makeIdxResponse:vc.bind(null,l),authenticate:Iv.bind(null,l),register:Dv.bind(null,l),start:n,startTransaction:n,poll:Pc.bind(null,l),proceed:kc.bind(null,l),cancel:Nv.bind(null,l),recoverPassword:$v.bind(null,l),handleInteractionCodeRedirect:jv.bind(null,l),isInteractionRequired:Kv.bind(null,l),isInteractionRequiredError:Ac,handleEmailVerifyCallback:Lv.bind(null,l),isEmailVerifyCallback:Cc,parseEmailVerifyCallback:bc,isEmailVerifyCallbackError:Fv,getSavedTransactionMeta:fn.bind(null,l),createTransactionMeta:C7.bind(null,l),getTransactionMeta:Tm.bind(null,l),saveTransactionMeta:b7.bind(null,l),clearTransactionMeta:Em.bind(null,l),isTransactionMetaValid:lc,setFlow:t=>{l.options.flow=t},getFlow:()=>l.options.flow,canProceed:Oc.bind(null,l),unlockAccount:Bv.bind(null,l)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const B7=function(l){return atob(l)},Fn=function(l){return btoa(l)},fl=typeof crypto=="undefined"?null:crypto;/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Qv=/windows phone|iemobile|wpdesktop/i;function a3(){return typeof document!="undefined"&&typeof window!="undefined"}function U7(){if(!a3())return!1;const l=document.documentMode;return!!l&&l<=11}function Ic(){return navigator.userAgent}function Nc(){const l=Ic();return l&&!Qv.test(l)}function Yv(){if(!a3())return!1;const l=document.documentMode;var n=l&&l<10;return typeof window.postMessage!="undefined"&&!n}function Mc(){return typeof fl!="undefined"&&fl!==null&&typeof fl.subtle!="undefined"&&typeof Uint8Array!="undefined"}function Fc(){return typeof TextEncoder!="undefined"}function Xv(){return Mc()&&Fc()}function Lc(){return a3()?window.location.protocol==="https:":!1}function Dc(){return a3()&&window.location.hostname==="localhost"}var R8=Object.freeze(Object.defineProperty({__proto__:null,getUserAgent:Ic,hasTextEncoder:Fc,isBrowser:a3,isFingerprintSupported:Nc,isHTTPS:Lc,isIE11OrLess:U7,isLocalhost:Dc,isPKCESupported:Xv,isPopupPostMessageSupported:Yv,isTokenVerifySupported:Mc},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Jv(l){class n{constructor(...t){const u=new l(t.length?t[0]||{}:{});this.options=P3(u),this.emitter=new wm,this.features=R8}}return n.features=R8,n.constants=ro,n.features=n.prototype.features=R8,Object.assign(n,{constants:ro}),n}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Zv(l,n){return class extends l{constructor(...t){super(...t);const{storageManager:u,cookies:r,storageUtil:o}=this.options;this.storageManager=new n(u,r,o)}clearStorage(){}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class ly{constructor(){this.environments=["okta-auth-js/7.4.2"],this.maybeAddNodeEnvironment()}addEnvironment(n){this.environments.push(n)}getHttpHeader(){return{"X-Okta-User-Agent-Extended":this.environments.join(" ")}}getVersion(){return"7.4.2"}maybeAddNodeEnvironment(){if(a3()||!process||!process.versions)return;const{node:n}=process.versions;this.environments.push(`nodejs/${n}`)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function ny(l,n,e){l.options.headers=l.options.headers||{},l.options.headers[n]=e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function ey(l){return class extends l{constructor(...e){super(...e),this._oktaUserAgent=new ly,this.http={setRequestHeader:ny.bind(null,this)}}setHeaders(e){this.options.headers=Object.assign({},this.options.headers,e)}getIssuerOrigin(){return this.options.issuer.split("/oauth2/")[0]}webfinger(e){var t="/.well-known/webfinger"+cn(e),u={headers:{Accept:"application/jrd+json"}};return N4(this,t,u)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function H7(l){var n=Fn(l);return $c(n)}function $c(l){return l.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}function z7(l){return l.replace(/-/g,"+").replace(/_/g,"/")}function W9(l){var n=z7(l);switch(n.length%4){case 0:break;case 2:n+="==";break;case 3:n+="=";break;default:throw new z("Not a valid Base64Url")}var e=B7(n);try{return decodeURIComponent(escape(e))}catch{return e}}function G9(l){for(var n=new Uint8Array(l.length),e=0;e<l.length;e++)n[e]=l.charCodeAt(e);return n}function V7(l){return B7(z7(l))}function _e(l){return Uint8Array.from(V7(l),n=>n.charCodeAt(0))}function E4(l){return Fn(new Uint8Array(l).reduce((n,e)=>n+String.fromCharCode(e),""))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function jc(l){var n=new TextEncoder().encode(l);return fl.subtle.digest("SHA-256",n).then(function(e){var t=new Uint8Array(e),u=t.slice(0,16),r=String.fromCharCode.apply(null,u),o=H7(r);return o})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Bc(l,n){n=m3(n);var e="jwk",t={name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}},u=!0,r=["verify"];return delete n.use,fl.subtle.importKey(e,n,t,u,r).then(function(o){var i=l.split("."),a=G9(i[0]+"."+i[1]),s=V7(i[2]),c=G9(s);return fl.subtle.verify(t,o,c,a)})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var ty=Object.freeze(Object.defineProperty({__proto__:null,base64ToBase64Url:$c,base64UrlDecode:V7,base64UrlToBase64:z7,base64UrlToBuffer:_e,base64UrlToString:W9,bufferToBase64Url:E4,stringToBase64Url:H7,stringToBuffer:G9,getOidcHash:jc,verifyToken:Bc,atob:B7,btoa:Fn,webcrypto:fl},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class W7{constructor(n={quiet:!1}){this.queue=[],this.running=!1,this.options=n}push(n,e,...t){return new Promise((u,r)=>{this.queue.length>0&&this.options.quiet!==!1&&J3("Async method is being called but another async method is already running. The new method will be delayed until the previous method completes."),this.queue.push({method:n,thisObject:e,args:t,resolve:u,reject:r}),this.run()})}run(){if(!this.running&&this.queue.length!==0){this.running=!0;var n=this.queue.shift(),e=n.method.apply(n.thisObject,n.args);km(e)?e.then(n.resolve,n.reject).finally(()=>{this.running=!1,this.run()}):(n.resolve(e),this.running=!1,this.run())}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function uy(l){return("0"+l.toString(16)).substr(-2)}function ry(l){var n=new Uint8Array(Math.ceil(l/2));fl.getRandomValues(n);var e=Array.from(n,uy).join("");return e.slice(0,l)}function oy(l){var n=l||"";return n.length<L9&&(n=n+ry(L9-n.length)),encodeURIComponent(n).slice(0,cc)}function iy(l){var n=new TextEncoder().encode(l);return fl.subtle.digest("SHA-256",n).then(function(e){var t=String.fromCharCode.apply(null,new Uint8Array(e)),u=H7(t);return u})}var ae={DEFAULT_CODE_CHALLENGE_METHOD:k7,generateVerifier:oy,computeChallenge:iy};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Uc(l){var n=l.split("."),e;try{e={header:JSON.parse(W9(n[0])),payload:JSON.parse(W9(n[1])),signature:n[2]}}catch{throw new z("Malformed token")}return e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function P6(l){const{pkce:n,clientId:e,redirectUri:t,responseType:u,responseMode:r,scopes:o,acrValues:i,maxAge:a,state:s,ignoreSignature:c}=l.options,f=a3()?window.location.href:void 0;return P3({pkce:n,clientId:e,redirectUri:t||f,responseType:u||["token","id_token"],responseMode:r,state:s||Qs(),nonce:vm(),scopes:o||["openid","email"],acrValues:i,maxAge:a,ignoreSignature:c})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function ay(l){if(!l.clientId)throw new z("A clientId must be specified in the OktaAuth constructor to get a token");if(!l.redirectUri)throw new z("The redirectUri passed to /authorize must also be passed to /token");if(!l.authorizationCode&&!l.interactionCode)throw new z("An authorization code (returned from /authorize) must be passed to /token");if(!l.codeVerifier)throw new z('The "codeVerifier" (generated and saved by your app) must be passed to /token')}function sy(l,n){var e=P3({client_id:n.clientId,redirect_uri:n.redirectUri,grant_type:n.interactionCode?"interaction_code":"authorization_code",code_verifier:n.codeVerifier});n.interactionCode?e.interaction_code=n.interactionCode:n.authorizationCode&&(e.code=n.authorizationCode);const{clientSecret:t}=l.options;return t&&(e.client_secret=t),cn(e).slice(1)}function cy(l,n,e){ay(n);var t=sy(l,n);const u={"Content-Type":"application/x-www-form-urlencoded"};return j3(l,{url:e.tokenUrl,method:"POST",args:t,headers:u})}function dy(l,n,e){return j3(l,{url:e.tokenUrl,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},args:Object.entries({client_id:n.clientId,grant_type:"refresh_token",scope:e.scopes.join(" "),refresh_token:e.refreshToken}).map(function([t,u]){return t+"="+encodeURIComponent(u)}).join("&")})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function A6(l,n){var e=n||l.options.issuer;return N4(l,e+"/.well-known/openid-configuration",{cacheResponse:!0})}function fy(l,n,e){var t=l.storageManager.getHttpCache(l.options.cookies);return A6(l,n).then(function(u){var r=u.jwks_uri,o=t.getStorage(),i=o[r];if(i&&Date.now()/1e3<i.expiresAt){var a=_9(i.response.keys,{kid:e});if(a)return a}return t.clearStorage(r),N4(l,r,{cacheResponse:!0}).then(function(s){var c=_9(s.keys,{kid:e});if(c)return c;throw new z("The key id, "+e+", was not found in the server's keys")})})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function hy(l,n,e){const t=e.clientId,u=e.issuer,r=e.nonce,o=e.acrValues;if(!n||!u||!t)throw new z("The jwt, iss, and aud arguments are all required");if(r&&n.nonce!==r)throw new z("OAuth flow response nonce doesn't match request nonce");const i=Math.floor(Date.now()/1e3);if(n.iss!==u)throw new z("The issuer ["+n.iss+"] does not match ["+u+"]");if(n.aud!==t)throw new z("The audience ["+n.aud+"] does not match ["+t+"]");if(o&&n.acr!==o)throw new z("The acr ["+n.acr+"] does not match acr_values ["+o+"]");if(n.iat>n.exp)throw new z("The JWT expired before it was issued");if(!l.options.ignoreLifetime){if(i-l.options.maxClockSkew>n.exp)throw new z("The JWT expired and is no longer valid");if(n.iat>i+l.options.maxClockSkew)throw new z("The JWT was issued in the future")}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Hc(l,n,e){if(!n||!n.idToken)throw new z("Only idTokens may be verified");const t=Uc(n.idToken),u=(e==null?void 0:e.issuer)||l.options.issuer,{issuer:r}=await A6(l,u),o=Object.assign({clientId:l.options.clientId,ignoreSignature:l.options.ignoreSignature},e,{issuer:r});if(hy(l,t.payload,o),o.ignoreSignature==!0||!l.features.isTokenVerifySupported())return n;const i=await fy(l,n.issuer,t.header.kid);if(!await Bc(n.idToken,i))throw new z("The token signature is not valid");if(e&&e.accessToken&&n.claims.at_hash&&await jc(e.accessToken)!==n.claims.at_hash)throw new z("Token hash verification failed");return n}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function py(l,n){if(l.error&&l.error_description)throw new u1(l.error,l.error_description);if(l.state!==n.state)throw new z("OAuth flow response state doesn't match request state")}async function Re(l,n,e,t){if(l.options.pkce!==!1&&(e.code||e.interaction_code))return l.token.exchangeCodeForTokens(Object.assign({},n,{authorizationCode:e.code,interactionCode:e.interaction_code}),t);n=n||P6(l),t=t||dn(l,n);let r=n.responseType||[];!Array.isArray(r)&&r!=="none"&&(r=[r]);let o;e.scope?o=e.scope.split(" "):o=m3(n.scopes);const i=n.clientId||l.options.clientId;py(e,n);const a={},s=e.expires_in,c=e.token_type,f=e.access_token,d=e.id_token,h=e.refresh_token,p=Math.floor(Date.now()/1e3);if(f){const y=l.token.decode(f);a.accessToken={accessToken:f,claims:y.payload,expiresAt:Number(s)+p,tokenType:c,scopes:o,authorizeUrl:t.authorizeUrl,userinfoUrl:t.userinfoUrl}}if(h&&(a.refreshToken={refreshToken:h,expiresAt:Number(s)+p,scopes:o,tokenUrl:t.tokenUrl,authorizeUrl:t.authorizeUrl,issuer:t.issuer}),d){const y=l.token.decode(d),m={idToken:d,claims:y.payload,expiresAt:y.payload.exp-y.payload.iat+p,scopes:o,authorizeUrl:t.authorizeUrl,issuer:t.issuer,clientId:i},g={clientId:i,issuer:t.issuer,nonce:n.nonce,accessToken:f,acrValues:n.acrValues};n.ignoreSignature!==void 0&&(g.ignoreSignature=n.ignoreSignature),await Hc(l,m,g),a.idToken=m}if(r.indexOf("token")!==-1&&!a.accessToken)throw new z('Unable to parse OAuth flow response: response type "token" was requested but "access_token" was not returned.');if(r.indexOf("id_token")!==-1&&!a.idToken)throw new z('Unable to parse OAuth flow response: response type "id_token" was requested but "id_token" was not returned.');return{tokens:a,state:e.state,code:e.code,responseType:r}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function gy(l,n,e){e=e||dn(l,n),n=Object.assign({},P6(l),m3(n));const{authorizationCode:t,interactionCode:u,codeVerifier:r,clientId:o,redirectUri:i,scopes:a,ignoreSignature:s,state:c,acrValues:f}=n;var d={clientId:o,redirectUri:i,authorizationCode:t,interactionCode:u,codeVerifier:r};return cy(l,d,e).then(h=>{const p=["token"];return a.indexOf("openid")!==-1&&p.push("id_token"),Re(l,{clientId:o,redirectUri:i,scopes:a,responseType:p,ignoreSignature:s,acrValues:f},h,e).then(m=>(m.code=t,m.state=c,m))}).finally(()=>{l.transactionManager.clear()})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function my(l,n,e){return n||(n=(await l.tokenManager.getTokens()).accessToken),e||(e=(await l.tokenManager.getTokens()).idToken),!n||!dl(n)?Promise.reject(new z("getUserInfo requires an access token object")):!e||!Wl(e)?Promise.reject(new z("getUserInfo requires an ID token object")):j3(l,{url:n.userinfoUrl,method:"GET",accessToken:n.accessToken}).then(t=>t.sub===e.claims.sub?t:Promise.reject(new z("getUserInfo request was rejected due to token mismatch"))).catch(function(t){if(t.xhr&&(t.xhr.status===401||t.xhr.status===403)){var u;if(t.xhr.headers&&uo(t.xhr.headers.get)&&t.xhr.headers.get("WWW-Authenticate")?u=t.xhr.headers.get("WWW-Authenticate"):uo(t.xhr.getResponseHeader)&&(u=t.xhr.getResponseHeader("WWW-Authenticate")),u){var r=u.match(/error="(.*?)"/)||[],o=u.match(/error_description="(.*?)"/)||[],i=r[1],a=o[1];i&&a&&(t=new u1(i,a))}}throw t})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function zc(l,n,e){l.addEventListener?l.addEventListener(n,e):l.attachEvent("on"+n,e)}function Vc(l,n,e){l.removeEventListener?l.removeEventListener(n,e):l.detachEvent("on"+n,e)}function vy(l){var n=document.createElement("iframe");return n.style.display="none",n.src=l,document.body.appendChild(n)}function yy(l,n){var e=n.popupTitle||"External Identity Provider User Authentication",t="toolbar=no, scrollbars=yes, resizable=yes, top=100, left=500, width=600, height=600";return window.open(l,e,t)}function co(l,n,e){var t,u,r=new Promise(function(o,i){t=function(s){if(!(!s.data||s.data.state!==e)){if(s.origin!==l.getIssuerOrigin())return i(new z("The request does not match client configuration"));o(s.data)}},zc(window,"message",t),u=setTimeout(function(){i(new z("OAuth flow timed out"))},n||12e4)});return r.finally(function(){clearTimeout(u),Vc(window,"message",t)})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function wy(l){if(!l.features.isPKCESupported()){var n="PKCE requires a modern browser with encryption support running in a secure context.";throw l.features.isHTTPS()||(n+=`
The current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.`),l.features.hasTextEncoder()||(n+=`
"TextEncoder" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.`),new z(n)}}async function Sy(l,n){n=n||l.options.codeChallengeMethod||k7;var t=(await A6(l)).code_challenge_methods_supported||[];if(t.indexOf(n)===-1)throw new z("Invalid code_challenge_method");return n}async function xy(l,n){let{codeVerifier:e,codeChallenge:t,codeChallengeMethod:u}=n;return t=t||l.options.codeChallenge,t||(wy(l),e=e||ae.generateVerifier(),t=await ae.computeChallenge(e)),u=await Sy(l,u),n=Object.assign(Object.assign({},n),{responseType:"code",codeVerifier:e,codeChallenge:t,codeChallengeMethod:u}),n}async function G7(l,n={}){const e=P6(l);return n=Object.assign(Object.assign({},e),n),n.pkce===!1?n:xy(l,n)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ty(l){if(!l.clientId)throw new z("A clientId must be specified in the OktaAuth constructor to get a token");if(I4(l.responseType)&&l.responseType.indexOf(" ")!==-1)throw new z("Multiple OAuth responseTypes must be defined as an array");var n={client_id:l.clientId,code_challenge:l.codeChallenge,code_challenge_method:l.codeChallengeMethod,display:l.display,idp:l.idp,idp_scope:l.idpScope,login_hint:l.loginHint,max_age:l.maxAge,nonce:l.nonce,prompt:l.prompt,redirect_uri:l.redirectUri,response_mode:l.responseMode,response_type:l.responseType,sessionToken:l.sessionToken,state:l.state,acr_values:l.acrValues,enroll_amr_values:l.enrollAmrValues};if(n=P3(n),["idp_scope","response_type","enroll_amr_values"].forEach(function(e){Array.isArray(n[e])&&(n[e]=n[e].join(" "))}),l.responseType.indexOf("id_token")!==-1&&l.scopes.indexOf("openid")===-1)throw new z("openid scope must be specified in the scopes argument when requesting an id_token");return l.scopes&&(n.scope=l.scopes.join(" ")),n}function K7(l){var n=Ty(l);return cn(Object.assign(Object.assign({},n),l.extraParams&&Object.assign({},l.extraParams)))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Wc(l,n){if(arguments.length>2)return Promise.reject(new z('As of version 3.0, "getToken" takes only a single set of options'));n=n||{};const e=n.popupWindow;return n.popupWindow=void 0,G7(l,n).then(function(t){var u={prompt:"none",responseMode:"okta_post_message",display:null},r={display:"popup"};n.sessionToken?Object.assign(t,u):n.idp&&Object.assign(t,r);var o,i,a;a=dn(l,t),i=n.codeVerifier?a.tokenUrl:a.authorizeUrl,o=i+K7(t);var s;switch(t.sessionToken||t.display===null?s="IFRAME":t.display==="popup"?s="POPUP":s="IMPLICIT",s){case"IFRAME":var c=co(l,n.timeout,t.state),f=vy(o);return c.then(function(p){return Re(l,t,p,a)}).finally(function(){var p;document.body.contains(f)&&((p=f.parentElement)===null||p===void 0||p.removeChild(f))});case"POPUP":var d;if(t.responseMode==="okta_post_message"){if(!l.features.isPopupPostMessageSupported())throw new z("This browser doesn't have full postMessage support");d=co(l,n.timeout,t.state)}e&&e.location.assign(o);var h=new Promise(function(p,y){var m=setInterval(function(){(!e||e.closed)&&(clearInterval(m),y(new z("Unable to parse OAuth flow response")))},100);d.then(function(g){clearInterval(m),p(g)}).catch(function(g){clearInterval(m),y(g)})});return h.then(function(p){return Re(l,t,p,a)}).finally(function(){e&&!e.closed&&e.close()});default:throw new z("The full page redirect flow is not supported")}})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function q7(l,n){return arguments.length>2?Promise.reject(new z('As of version 3.0, "getWithoutPrompt" takes only a single set of options')):(n=m3(n)||{},Object.assign(n,{prompt:"none",responseMode:"okta_post_message",display:null}),Wc(l,n))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ey(l,n){if(arguments.length>2)return Promise.reject(new z('As of version 3.0, "getWithPopup" takes only a single set of options'));const e=yy("/",n);return n=m3(n)||{},Object.assign(n,{display:"popup",responseMode:"okta_post_message",popupWindow:e}),Wc(l,n)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Cy(l,n){if(arguments.length>2)return Promise.reject(new z('As of version 3.0, "getWithRedirect" takes only a single set of options'));n=m3(n)||{};const e=await G7(l,n),t=Xs(l,e),u=t.urls.authorizeUrl+K7(e);l.transactionManager.save(t),l.options.setLocation?l.options.setLocation(u):window.location.assign(u)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function by(l){var n=l.token.parseFromUrl._getHistory(),e=l.token.parseFromUrl._getDocument(),t=l.token.parseFromUrl._getLocation();n&&n.replaceState?n.replaceState(null,e.title,t.pathname+t.search):t.hash=""}function Oy(l){var n=l.token.parseFromUrl._getHistory(),e=l.token.parseFromUrl._getDocument(),t=l.token.parseFromUrl._getLocation();n&&n.replaceState?n.replaceState(null,e.title,t.pathname+t.hash):t.search=""}function Gc(l){var n=l.options.pkce?"query":"fragment",e=l.options.responseMode||n;return e}function Kc(l,n){n=n||{},I4(n)?n={url:n}:n=n;var e=n.url,t=n.responseMode||Gc(l),u=l.token.parseFromUrl._getLocation(),r;if(t==="query"?r=e?e.substring(e.indexOf("?")):u.search:r=e?e.substring(e.indexOf("#")):u.hash,!r)throw new z("Unable to parse a token from the url");return Ec(r)}function ky(l,n){(n.responseMode||Gc(l))==="query"?Oy(l):by(l)}async function Py(l,n){n=n||{},I4(n)?n={url:n}:n=n;const e=Kc(l,n),t=e.state,u=l.transactionManager.load({state:t});if(!u)throw l.options.pkce?new z("Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.",void 0):new z("Unable to retrieve OAuth redirect params from storage");const r=u.urls;return delete u.urls,n.url||ky(l,n),Re(l,u,e,r).catch(o=>{throw Ac(o)||l.transactionManager.clear({state:t}),o}).then(o=>(l.transactionManager.clear({state:t}),o))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ay(l,n){return l.refreshToken===n.refreshToken}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Q7(l,n,e){const{clientId:t}=l.options;if(!t)throw new z("A clientId must be specified in the OktaAuth constructor to renew tokens");try{const u=Object.assign({},n,{clientId:t}),r=await dy(l,u,e),o=dn(l,n),{tokens:i}=await Re(l,u,r,o),{refreshToken:a}=i;return a&&!Ay(a,e)&&l.tokenManager.updateRefreshToken(a),i}catch(u){throw Uv(u)&&l.tokenManager.removeRefreshToken(),u}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function qc(){throw new z("Renew must be passed a token with an array of scopes and an accessToken or idToken")}function fo(l,n){if(Wl(l))return n.idToken;if(dl(l))return n.accessToken;qc()}async function _y(l,n){!Wl(n)&&!dl(n)&&qc();let e=l.tokenManager.getTokensSync();if(e.refreshToken)return e=await Q7(l,{scopes:n.scopes},e.refreshToken),fo(n,e);var t;l.options.pkce?t="code":dl(n)?t="token":t="id_token";const{scopes:u,authorizeUrl:r,userinfoUrl:o,issuer:i}=n;return q7(l,{responseType:t,scopes:u,authorizeUrl:r,userinfoUrl:o,issuer:i}).then(function(a){return fo(n,a.tokens)})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Ry(l,n){var e;const t=(e=n==null?void 0:n.tokens)!==null&&e!==void 0?e:l.tokenManager.getTokensSync();if(t.refreshToken)return Q7(l,n||{},t.refreshToken);if(!t.accessToken&&!t.idToken)throw new z("renewTokens() was called but there is no existing token");const u=t.accessToken||{},r=t.idToken||{},o=u.scopes||r.scopes;if(!o)throw new z("renewTokens: invalid tokens: could not read scopes");const i=u.authorizeUrl||r.authorizeUrl;if(!i)throw new z("renewTokens: invalid tokens: could not read authorizeUrl");const a=u.userinfoUrl||l.options.userinfoUrl,s=r.issuer||l.options.issuer;if(n=Object.assign({scopes:o,authorizeUrl:i,userinfoUrl:a,issuer:s},n),l.options.pkce)n.responseType="code";else{const{responseType:c}=P6(l);n.responseType=c}return q7(l,n).then(c=>c.tokens)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function Iy(l,n){let e="",t="";if(n&&(e=n.accessToken,t=n.refreshToken),!e&&!t)throw new z("A valid access or refresh token object is required");var u=l.options.clientId,r=l.options.clientSecret;if(!u)throw new z("A clientId must be specified in the OktaAuth constructor to revoke a token");var o=dn(l).revokeUrl,i=cn({token_type_hint:t?"refresh_token":"access_token",token:t||e}).slice(1),a=Fn(r?`${u}:${r}`:u);return hn(l,o,i,{headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+a}})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Ny={accessToken:"access_token",idToken:"id_token",refreshToken:"refresh_token"};async function My(l,n,e){var t;let u,r=l.options.clientId,o=l.options.clientSecret;if(e||(e=l.tokenManager.getTokens()[n]),!e)throw new z(`unable to find ${n} in storage or fn params`);if(n!==M9.ACCESS?u=e==null?void 0:e.issuer:u=(t=e==null?void 0:e.claims)===null||t===void 0?void 0:t.iss,u!=null||(u=l.options.issuer),!r)throw new z("A clientId must be specified in the OktaAuth constructor to introspect a token");if(!u)throw new z("Unable to find issuer");const{introspection_endpoint:i}=await A6(l,u),a=Fn(o?`${r}:${o}`:r),s=cn({token_type_hint:Ny[n],token:e[n]}).slice(1);return hn(l,i,s,{headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+a}})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Fy(l,n){const e=l.options.issuer,t=dn(l,n);return{issuer:e,urls:t,clientId:n.clientId,redirectUri:n.redirectUri,responseType:n.responseType,responseMode:n.responseMode,state:n.state,acrValues:n.acrValues,enrollAmrValues:n.enrollAmrValues}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ly(l){const{clientId:n,redirectUri:e,responseMode:t,state:u}=l.options,r=a3()?window.location.href:void 0;return P3({clientId:n,redirectUri:e||r,responseMode:t,state:u||Qs(),responseType:"none",prompt:"enroll_authenticator"})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Dy(l){if(l=Object.assign(Object.assign({},l),{responseType:"none",prompt:"enroll_authenticator",maxAge:0}),!l.enrollAmrValues)throw new z("enroll_amr_values must be specified");if(!l.acrValues)throw new z("acr_values must be specified");return delete l.scopes,delete l.nonce,l}function $y(l,n){return Dy(Object.assign(Object.assign({},Ly(l)),n))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function jy(l,n){n=m3(n)||{};const e=$y(l,n),t=Fy(l,e),u=t.urls.authorizeUrl+K7(e);l.transactionManager.save(t),l.options.setLocation?l.options.setLocation(u):window.location.assign(u)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function By(l,n){const e=a=>W7.prototype.push.bind(n,a,null),t=e(Cy.bind(null,l)),u=e(Py.bind(null,l)),r=Object.assign(u,{_getHistory:function(){return window.history},_getLocation:function(){return window.location},_getDocument:function(){return window.document}}),o={prepareTokenParams:G7.bind(null,l),exchangeCodeForTokens:gy.bind(null,l),getWithoutPrompt:q7.bind(null,l),getWithPopup:Ey.bind(null,l),getWithRedirect:t,parseFromUrl:r,decode:Uc,revoke:Iy.bind(null,l),renew:_y.bind(null,l),renewTokensWithRefresh:Q7.bind(null,l),renewTokens:Ry.bind(null,l),getUserInfo:(a,s)=>my(l,a,s),verify:Hc.bind(null,l),isLoginRedirect:j7.bind(null,l),introspect:My.bind(null,l)};return["getWithoutPrompt","getWithPopup","revoke","renew","renewTokensWithRefresh","renewTokens"].forEach(a=>{o[a]=e(o[a])}),o}function Uy(l){return{authorize:{enrollAuthenticator:jy.bind(null,l)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function B1(l,n){if(!Wl(l)&&!dl(l)&&!bn(l))throw new z("Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property");if(n==="accessToken"&&!dl(l))throw new z("invalid accessToken");if(n==="idToken"&&!Wl(l))throw new z("invalid idToken");if(n==="refreshToken"&&!bn(l))throw new z("invalid refreshToken")}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Y7{constructor(n){this.localOffset=parseInt(n||0)}static create(){var n=0;return new Y7(n)}now(){var n=(Date.now()+this.localOffset)/1e3;return n}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const K9="expired",H5="renewed",On="added",kn="removed",Hy="error",z5="set_storage";/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const ho={autoRenew:!0,autoRemove:!0,syncStorage:!0,clearPendingRemoveTokens:!0,storage:void 0,expireEarlySeconds:30,storageKey:O7};function zy(){return{expireTimeouts:{},renewPromise:null}}class Vy{constructor(n,e={}){if(this.sdk=n,this.emitter=n.emitter,!this.emitter)throw new z("Emitter should be initialized before TokenManager");e=Object.assign({},ho,P3(e)),Dc()||(e.expireEarlySeconds=ho.expireEarlySeconds),this.options=e;const t=P3({storageKey:e.storageKey,secure:e.secure});typeof e.storage=="object"?t.storageProvider=e.storage:e.storage&&(t.storageType=e.storage),this.storage=n.storageManager.getTokenStorage(Object.assign(Object.assign({},t),{useSeparateCookies:!0})),this.clock=Y7.create(),this.state=zy()}on(n,e,t){t?this.emitter.on(n,e,t):this.emitter.on(n,e)}off(n,e){e?this.emitter.off(n,e):this.emitter.off(n)}start(){this.options.clearPendingRemoveTokens&&this.clearPendingRemoveTokens(),this.setExpireEventTimeoutAll(),this.state.started=!0}stop(){this.clearExpireEventTimeoutAll(),this.state.started=!1}isStarted(){return!!this.state.started}getOptions(){return m3(this.options)}getExpireTime(n){const e=this.options.expireEarlySeconds||0;var t=n.expiresAt-e;return t}hasExpired(n){var e=this.getExpireTime(n);return e<=this.clock.now()}emitExpired(n,e){this.emitter.emit(K9,n,e)}emitRenewed(n,e,t){this.emitter.emit(H5,n,e,t)}emitAdded(n,e){this.emitter.emit(On,n,e)}emitRemoved(n,e){this.emitter.emit(kn,n,e)}emitError(n){this.emitter.emit(Hy,n)}clearExpireEventTimeout(n){clearTimeout(this.state.expireTimeouts[n]),delete this.state.expireTimeouts[n],this.state.renewPromise=null}clearExpireEventTimeoutAll(){var n=this.state.expireTimeouts;for(var e in n)!Object.prototype.hasOwnProperty.call(n,e)||this.clearExpireEventTimeout(e)}setExpireEventTimeout(n,e){if(!bn(e)){var t=this.getExpireTime(e),u=Math.max(t-this.clock.now(),0)*1e3;this.clearExpireEventTimeout(n);var r=setTimeout(()=>{this.emitExpired(n,e)},u);this.state.expireTimeouts[n]=r}}setExpireEventTimeoutAll(){var n=this.storage.getStorage();for(var e in n)if(!!Object.prototype.hasOwnProperty.call(n,e)){var t=n[e];this.setExpireEventTimeout(e,t)}}resetExpireEventTimeoutAll(){this.clearExpireEventTimeoutAll(),this.setExpireEventTimeoutAll()}add(n,e){var t=this.storage.getStorage();B1(e),t[n]=e,this.storage.setStorage(t),this.emitSetStorageEvent(),this.emitAdded(n,e),this.setExpireEventTimeout(n,e)}getSync(n){var e=this.storage.getStorage();return e[n]}async get(n){return this.getSync(n)}getTokensSync(){const n={},e=this.storage.getStorage();return Object.keys(e).forEach(t=>{const u=e[t];dl(u)?n.accessToken=u:Wl(u)?n.idToken=u:bn(u)&&(n.refreshToken=u)}),n}async getTokens(){return this.getTokensSync()}getStorageKeyByType(n){const e=this.storage.getStorage();return Object.keys(e).filter(u=>{const r=e[u];return dl(r)&&n==="accessToken"||Wl(r)&&n==="idToken"||bn(r)&&n==="refreshToken"})[0]}getTokenType(n){if(dl(n))return"accessToken";if(Wl(n))return"idToken";if(bn(n))return"refreshToken";throw new z("Unknown token type")}emitSetStorageEvent(){if(U7()){const n=this.storage.getStorage();this.emitter.emit(z5,n)}}getStorage(){return this.storage}setTokens(n,e,t,u){const r=(d,h)=>{const p=this.getTokenType(h);p==="accessToken"?e&&e(d,h):p==="idToken"?t&&t(d,h):p==="refreshToken"&&u&&u(d,h)},o=(d,h)=>{this.emitAdded(d,h),this.setExpireEventTimeout(d,h),r(d,h)},i=(d,h,p)=>{this.emitRenewed(d,h,p),this.clearExpireEventTimeout(d),this.setExpireEventTimeout(d,h),r(d,h)},a=(d,h)=>{this.clearExpireEventTimeout(d),this.emitRemoved(d,h),r(d,h)},s=["idToken","accessToken","refreshToken"],c=this.getTokensSync();s.forEach(d=>{const h=n[d];h&&B1(h,d)});const f=s.reduce((d,h)=>{const p=n[h];if(p){const y=this.getStorageKeyByType(h)||h;d[y]=p}return d},{});this.storage.setStorage(f),this.emitSetStorageEvent(),s.forEach(d=>{const h=n[d],p=c[d],y=this.getStorageKeyByType(d)||d;h&&p?(a(y,p),o(y,h),i(y,h,p)):h?o(y,h):p&&a(y,p)})}remove(n){this.clearExpireEventTimeout(n);var e=this.storage.getStorage(),t=e[n];delete e[n],this.storage.setStorage(e),this.emitSetStorageEvent(),this.emitRemoved(n,t)}async renewToken(n){var e;return(e=this.sdk.token)===null||e===void 0?void 0:e.renew(n)}validateToken(n){return B1(n)}renew(n){if(this.state.renewPromise)return this.state.renewPromise;try{var e=this.getSync(n);if(!e)throw new z("The tokenManager has no token for the key: "+n)}catch(u){return Promise.reject(u)}return this.clearExpireEventTimeout(n),this.state.renewPromise=this.sdk.token.renewTokens().then(u=>{this.setTokens(u);const r=this.getTokenType(e);return u[r]}).catch(u=>{throw this.remove(n),u.tokenKey=n,this.emitError(u),u}).finally(()=>{this.state.renewPromise=null})}clear(){const n=this.getTokensSync();this.clearExpireEventTimeoutAll(),this.storage.clearStorage(),this.emitSetStorageEvent(),Object.keys(n).forEach(e=>{this.emitRemoved(e,n[e])})}clearPendingRemoveTokens(){const n=this.storage.getStorage(),e={};Object.keys(n).forEach(t=>{n[t].pendingRemove&&(e[t]=n[t],delete n[t])}),this.storage.setStorage(n),this.emitSetStorageEvent(),Object.keys(e).forEach(t=>{this.clearExpireEventTimeout(t),this.emitRemoved(t,e[t])})}updateRefreshToken(n){const e=this.getStorageKeyByType("refreshToken")||F9;var t=this.storage.getStorage();B1(n),t[e]=n,this.storage.setStorage(t),this.emitSetStorageEvent()}removeRefreshToken(){const n=this.getStorageKeyByType("refreshToken")||F9;this.remove(n)}addPendingRemoveFlags(){const n=this.getTokensSync();Object.keys(n).forEach(e=>{n[e].pendingRemove=!0}),this.setTokens(n)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var o0={browserHasLocalStorage:function(){try{var l=this.getLocalStorage();return this.testStorage(l)}catch{return!1}},browserHasSessionStorage:function(){try{var l=this.getSessionStorage();return this.testStorage(l)}catch{return!1}},testStorageType:function(l){var n=!1;switch(l){case"sessionStorage":n=this.browserHasSessionStorage();break;case"localStorage":n=this.browserHasLocalStorage();break;case"cookie":case"memory":n=!0;break;default:n=!1;break}return n},getStorageByType:function(l,n){let e;switch(l){case"sessionStorage":e=this.getSessionStorage();break;case"localStorage":e=this.getLocalStorage();break;case"cookie":e=this.getCookieStorage(n);break;case"memory":e=this.getInMemoryStorage();break;default:throw new z(`Unrecognized storage option: ${l}`)}return e},findStorageType:function(l){let n,e;return l=l.slice(),n=l.shift(),e=l.length?l[0]:null,!e||this.testStorageType(n)?n:(J3(`This browser doesn't support ${n}. Switching to ${e}.`),this.findStorageType(l))},getLocalStorage:function(){return U7()&&!window.onstorage&&(window.onstorage=function(){}),localStorage},getSessionStorage:function(){return sessionStorage},getCookieStorage:function(l){const n=l.secure,e=l.sameSite,t=l.sessionCookie;if(typeof n=="undefined"||typeof e=="undefined")throw new z('getCookieStorage: "secure" and "sameSite" options must be provided');const u={getItem:this.storage.get,setItem:(r,o,i="2200-01-01T00:00:00.000Z")=>{i=t?null:i,this.storage.set(r,o,i,{secure:n,sameSite:e})},removeItem:r=>{this.storage.delete(r)}};return l.useSeparateCookies?{getItem:function(r){var o=u.getItem(),i={};return Object.keys(o).forEach(a=>{a.indexOf(r)===0&&(i[a.replace(`${r}_`,"")]=JSON.parse(o[a]))}),JSON.stringify(i)},setItem:function(r,o){var i=JSON.parse(this.getItem(r));o=JSON.parse(o),Object.keys(o).forEach(a=>{var s=r+"_"+a,c=JSON.stringify(o[a]);u.setItem(s,c),delete i[a]}),Object.keys(i).forEach(a=>{u.removeItem(r+"_"+a)})},removeItem:function(r){var o=JSON.parse(this.getItem(r));Object.keys(o).forEach(i=>{u.removeItem(r+"_"+i)})}}:u},inMemoryStore:{},getInMemoryStorage:function(){return{getItem:l=>this.inMemoryStore[l],setItem:(l,n)=>{this.inMemoryStore[l]=n}}},testStorage:function(l){var n="okta-test-storage";try{return l.setItem(n,n),l.removeItem(n),!0}catch{return!1}},storage:{set:function(l,n,e,t){const{sameSite:u,secure:r}=t;if(typeof r=="undefined"||typeof u=="undefined")throw new z('storage.set: "secure" and "sameSite" options must be provided');var o={path:t.path||"/",secure:r,sameSite:u};return Date.parse(e)&&(o.expires=new Date(e)),D1.set(l,n,o),this.get(l)},get:function(l){return arguments.length?D1.get(l):D1.get()},delete:function(l){return D1.remove(l,{path:"/"})}}};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Wy(l){return class extends l{setOriginalUri(e,t){o0.getSessionStorage().setItem(t0,e),t=t||this.options.state,t&&this.storageManager.getOriginalUriStorage().setItem(t,e)}getOriginalUri(e){if(e=e||this.options.state,e){const r=this.storageManager.getOriginalUriStorage().getItem(e);if(r)return r}const t=o0.getSessionStorage();return t&&t.getItem(t0)||void 0}removeOriginalUri(e){if(o0.getSessionStorage().removeItem(t0),e=e||this.options.state,e){const u=this.storageManager.getOriginalUriStorage();u.removeItem&&u.removeItem(e)}}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Gy(l,n){var e;const t=Wy(l);return e=class extends t{constructor(...r){super(...r),this.transactionManager=new n(Object.assign({storageManager:this.storageManager},this.options.transactionManager)),this.pkce={DEFAULT_CODE_CHALLENGE_METHOD:ae.DEFAULT_CODE_CHALLENGE_METHOD,generateVerifier:ae.generateVerifier,computeChallenge:ae.computeChallenge},this._pending={handleLogin:!1},this._tokenQueue=new W7,this.token=By(this,this._tokenQueue),this.tokenManager=new Vy(this,this.options.tokenManager),this.endpoints=Uy(this)}clearStorage(){super.clearStorage(),this.tokenManager.clear()}async isAuthenticated(r={}){const{autoRenew:o,autoRemove:i}=this.tokenManager.getOptions(),a=r.onExpiredToken?r.onExpiredToken==="renew":o,s=r.onExpiredToken?r.onExpiredToken==="remove":i;let{accessToken:c}=this.tokenManager.getTokensSync();if(c&&this.tokenManager.hasExpired(c))if(c=void 0,a)try{c=await this.tokenManager.renew("accessToken")}catch{}else s&&this.tokenManager.remove("accessToken");let{idToken:f}=this.tokenManager.getTokensSync();if(f&&this.tokenManager.hasExpired(f))if(f=void 0,a)try{f=await this.tokenManager.renew("idToken")}catch{}else s&&this.tokenManager.remove("idToken");return!!(c&&f)}async signInWithRedirect(r={}){const{originalUri:o}=r,i=r1(r,["originalUri"]);if(!this._pending.handleLogin){this._pending.handleLogin=!0;try{o&&this.setOriginalUri(o);const a=Object.assign({scopes:this.options.scopes||["openid","email","profile"]},i);await this.token.getWithRedirect(a)}finally{this._pending.handleLogin=!1}}}async getUser(){const{idToken:r,accessToken:o}=this.tokenManager.getTokensSync();return this.token.getUserInfo(o,r)}getIdToken(){const{idToken:r}=this.tokenManager.getTokensSync();return r?r.idToken:void 0}getAccessToken(){const{accessToken:r}=this.tokenManager.getTokensSync();return r?r.accessToken:void 0}getRefreshToken(){const{refreshToken:r}=this.tokenManager.getTokensSync();return r?r.refreshToken:void 0}async storeTokensFromRedirect(){const{tokens:r,responseType:o}=await this.token.parseFromUrl();o!=="none"&&this.tokenManager.setTokens(r)}isLoginRedirect(){return j7(this)}isPKCE(){return!!this.options.pkce}hasResponseType(r){let o=!1;return Array.isArray(this.options.responseType)&&this.options.responseType.length?o=this.options.responseType.indexOf(r)>=0:o=this.options.responseType===r,o}isAuthorizationCodeFlow(){return this.hasResponseType("code")}async invokeApiMethod(r){if(!r.accessToken){const o=(await this.tokenManager.getTokens()).accessToken;r.accessToken=o==null?void 0:o.accessToken}return j3(this,r)}async revokeAccessToken(r){if(!r){r=(await this.tokenManager.getTokens()).accessToken;const o=this.tokenManager.getStorageKeyByType("accessToken");this.tokenManager.remove(o)}return r?this.token.revoke(r):Promise.resolve(null)}async revokeRefreshToken(r){if(!r){r=(await this.tokenManager.getTokens()).refreshToken;const o=this.tokenManager.getStorageKeyByType("refreshToken");this.tokenManager.remove(o)}return r?this.token.revoke(r):Promise.resolve(null)}getSignOutRedirectUrl(r={}){let{idToken:o,postLogoutRedirectUri:i,state:a}=r;if(o||(o=this.tokenManager.getTokensSync().idToken),!o)return"";i===void 0&&(i=this.options.postLogoutRedirectUri);const s=dn(this).logoutUrl,c=o.idToken;let f=s+"?id_token_hint="+encodeURIComponent(c);return i&&(f+="&post_logout_redirect_uri="+encodeURIComponent(i)),a&&(f+="&state="+encodeURIComponent(a)),f}async signOut(r){r=Object.assign({},r);const o=window.location.origin,i=window.location.href,a=r.postLogoutRedirectUri===null?null:r.postLogoutRedirectUri||this.options.postLogoutRedirectUri||o,s=r==null?void 0:r.state;let c=r.accessToken,f=r.refreshToken;const d=r.revokeAccessToken!==!1,h=r.revokeRefreshToken!==!1;h&&typeof f=="undefined"&&(f=this.tokenManager.getTokensSync().refreshToken),d&&typeof c=="undefined"&&(c=this.tokenManager.getTokensSync().accessToken),r.idToken||(r.idToken=this.tokenManager.getTokensSync().idToken),h&&f&&await this.revokeRefreshToken(f),d&&c&&await this.revokeAccessToken(c);const p=this.getSignOutRedirectUrl(Object.assign(Object.assign({},r),{postLogoutRedirectUri:a}));if(p)return r.clearTokensBeforeRedirect?this.tokenManager.clear():this.tokenManager.addPendingRemoveFlags(),window.location.assign(p),!0;{const y=await this.closeSession(),m=new URL(a||o);return s&&m.searchParams.append("state",s),a===i?window.location.href=m.href:window.location.assign(m.href),y}}},e.crypto=ty,e}var X7={exports:{}};class Qc extends Error{constructor(n){super(n||"Promise was canceled"),this.name="CancelError"}get isCanceled(){return!0}}class _6{static fn(n){return(...e)=>new _6((t,u,r)=>{e.push(r),n(...e).then(t,u)})}constructor(n){this._cancelHandlers=[],this._isPending=!0,this._isCanceled=!1,this._rejectOnCancel=!0,this._promise=new Promise((e,t)=>{this._reject=t;const u=i=>{(!this._isCanceled||!o.shouldReject)&&(this._isPending=!1,e(i))},r=i=>{this._isPending=!1,t(i)},o=i=>{if(!this._isPending)throw new Error("The `onCancel` handler was attached after the promise settled.");this._cancelHandlers.push(i)};return Object.defineProperties(o,{shouldReject:{get:()=>this._rejectOnCancel,set:i=>{this._rejectOnCancel=i}}}),n(u,r,o)})}then(n,e){return this._promise.then(n,e)}catch(n){return this._promise.catch(n)}finally(n){return this._promise.finally(n)}cancel(n){if(!(!this._isPending||this._isCanceled)){if(this._isCanceled=!0,this._cancelHandlers.length>0)try{for(const e of this._cancelHandlers)e()}catch(e){this._reject(e);return}this._rejectOnCancel&&this._reject(new Qc(n))}}get isCanceled(){return this._isCanceled}}Object.setPrototypeOf(_6.prototype,Promise.prototype);X7.exports=_6;X7.exports.CancelError=Qc;var Ky=X7.exports;/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const qy=null,po={updateAuthStatePromise:null,canceledTimes:0},I8="authStateChange",Qy=10,Yy=(l,n)=>l?l.isAuthenticated===n.isAuthenticated&&JSON.stringify(l.idToken)===JSON.stringify(n.idToken)&&JSON.stringify(l.accessToken)===JSON.stringify(n.accessToken)&&l.error===n.error:!1;class Xy{constructor(n){if(!n.emitter)throw new z("Emitter should be initialized before AuthStateManager");this._sdk=n,this._pending=Object.assign({},po),this._authState=qy,this._logOptions={},this._prevAuthState=null,this._transformQueue=new W7({quiet:!0}),n.tokenManager.on(On,(e,t)=>{this._setLogOptions({event:On,key:e,token:t}),this.updateAuthState()}),n.tokenManager.on(kn,(e,t)=>{this._setLogOptions({event:kn,key:e,token:t}),this.updateAuthState()})}_setLogOptions(n){this._logOptions=n}getAuthState(){return this._authState}getPreviousAuthState(){return this._prevAuthState}async updateAuthState(){const{transformAuthState:n,devMode:e}=this._sdk.options,t=i=>{const{event:a,key:s,token:c}=this._logOptions;U5().group(`OKTA-AUTH-JS:updateAuthState: Event:${a} Status:${i}`),U5().log(s,c),U5().log("Current authState",this._authState),U5().groupEnd(),this._logOptions={}},u=i=>{if(Yy(this._authState,i)){e&&t("unchanged");return}this._prevAuthState=this._authState,this._authState=i,this._sdk.emitter.emit(I8,Object.assign({},i)),e&&t("emitted")},r=i=>this._pending.updateAuthStatePromise.then(()=>{const a=this._pending.updateAuthStatePromise;return a&&a!==i?r(a):this.getAuthState()});if(this._pending.updateAuthStatePromise){if(this._pending.canceledTimes>=Qy)return e&&t("terminated"),r(this._pending.updateAuthStatePromise);this._pending.updateAuthStatePromise.cancel()}const o=new Ky((i,a,s)=>{s.shouldReject=!1,s(()=>{this._pending.updateAuthStatePromise=null,this._pending.canceledTimes=this._pending.canceledTimes+1,e&&t("canceled")});const c=f=>{if(o.isCanceled){i();return}u(f),i(),this._pending=Object.assign({},po)};this._sdk.isAuthenticated().then(()=>{if(o.isCanceled){i();return}const{accessToken:f,idToken:d,refreshToken:h}=this._sdk.tokenManager.getTokensSync(),p={accessToken:f,idToken:d,refreshToken:h,isAuthenticated:!!(f&&d)};(n?this._transformQueue.push(n,null,this._sdk,p):Promise.resolve(p)).then(m=>c(m)).catch(m=>c({accessToken:f,idToken:d,refreshToken:h,isAuthenticated:!1,error:m}))})});return this._pending.updateAuthStatePromise=o,r(o)}subscribe(n){this._sdk.emitter.on(I8,n)}unsubscribe(n){this._sdk.emitter.off(I8,n)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Jy{constructor(n,e={}){this.started=!1,this.tokenManager=n,this.options=e,this.renewTimeQueue=[],this.onTokenExpiredHandler=this.onTokenExpiredHandler.bind(this)}shouldThrottleRenew(){let n=!1;if(this.renewTimeQueue.push(Date.now()),this.renewTimeQueue.length>=10){const e=this.renewTimeQueue.shift();n=this.renewTimeQueue[this.renewTimeQueue.length-1]-e<30*1e3}return n}requiresLeadership(){return!!this.options.syncStorage&&a3()}processExpiredTokens(){const e=this.tokenManager.getStorage().getStorage();Object.keys(e).forEach(t=>{const u=e[t];!bn(u)&&this.tokenManager.hasExpired(u)&&this.onTokenExpiredHandler(t)})}onTokenExpiredHandler(n){if(this.options.autoRenew)if(this.shouldThrottleRenew()){const e=new z("Too many token renew requests");this.tokenManager.emitError(e)}else this.tokenManager.renew(n).catch(()=>{});else this.options.autoRemove&&this.tokenManager.remove(n)}canStart(){return(!!this.options.autoRenew||!!this.options.autoRemove)&&!this.started}async start(){this.canStart()&&(this.tokenManager.on(K9,this.onTokenExpiredHandler),this.tokenManager.isStarted()&&this.processExpiredTokens(),this.started=!0)}async stop(){this.started&&(this.tokenManager.off(K9,this.onTokenExpiredHandler),this.renewTimeQueue=[],this.started=!1)}isStarted(){return this.started}}function Zy(l){return!!(l&&typeof l.then=="function")}Promise.resolve(!1);var lw=Promise.resolve(!0),hl=Promise.resolve();function Pn(l,n){return l||(l=0),new Promise(function(e){return setTimeout(function(){return e(n)},l)})}function nw(l,n){return Math.floor(Math.random()*(n-l+1)+l)}function R6(){return Math.random().toString(36).substring(2)}var go=0,N8=0;function I6(){var l=new Date().getTime();return l===go?(N8++,l*1e3+N8):(go=l,N8=0,l*1e3)}var ew=I6,tw="native";function uw(l){var n={messagesCallback:null,bc:new BroadcastChannel(l),subFns:[]};return n.bc.onmessage=function(e){n.messagesCallback&&n.messagesCallback(e.data)},n}function rw(l){l.bc.close(),l.subFns=[]}function ow(l,n){try{return l.bc.postMessage(n,!1),hl}catch(e){return Promise.reject(e)}}function iw(l,n){l.messagesCallback=n}function aw(){if(typeof window=="undefined")return!1;if(typeof BroadcastChannel=="function"){if(BroadcastChannel._pubkey)throw new Error("BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill");return!0}else return!1}function sw(){return 150}var cw={create:uw,close:rw,onMessage:iw,postMessage:ow,canBeUsed:aw,type:tw,averageResponseTime:sw,microSeconds:ew},Yc=function(){function l(n){this.ttl=n,this.map=new Map,this._to=!1}return l.prototype.has=function(n){return this.map.has(n)},l.prototype.add=function(n){var e=this;this.map.set(n,Xc()),this._to||(this._to=!0,setTimeout(function(){e._to=!1,dw(e)},0))},l.prototype.clear=function(){this.map.clear()},l}();function dw(l){for(var n=Xc()-l.ttl,e=l.map[Symbol.iterator]();;){var t=e.next().value;if(!t)return;var u=t[0],r=t[1];if(r<n)l.map.delete(u);else return}}function Xc(){return new Date().getTime()}function J7(){var l=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},n=JSON.parse(JSON.stringify(l));return typeof n.webWorkerSupport=="undefined"&&(n.webWorkerSupport=!0),n.idb||(n.idb={}),n.idb.ttl||(n.idb.ttl=1e3*45),n.idb.fallbackInterval||(n.idb.fallbackInterval=150),l.idb&&typeof l.idb.onclose=="function"&&(n.idb.onclose=l.idb.onclose),n.localstorage||(n.localstorage={}),n.localstorage.removeTimeout||(n.localstorage.removeTimeout=1e3*60),l.methods&&(n.methods=l.methods),n.node||(n.node={}),n.node.ttl||(n.node.ttl=1e3*60*2),n.node.maxParallelWrites||(n.node.maxParallelWrites=2048),typeof n.node.useFastPath=="undefined"&&(n.node.useFastPath=!0),n}var fw=I6,hw="pubkey.broadcast-channel-0-",vl="messages",N6={durability:"relaxed"},pw="idb";function Jc(){if(typeof indexedDB!="undefined")return indexedDB;if(typeof window!="undefined"){if(typeof window.mozIndexedDB!="undefined")return window.mozIndexedDB;if(typeof window.webkitIndexedDB!="undefined")return window.webkitIndexedDB;if(typeof window.msIndexedDB!="undefined")return window.msIndexedDB}return!1}function Z7(l){l.commit&&l.commit()}function gw(l){var n=Jc(),e=hw+l,t=n.open(e);t.onupgradeneeded=function(r){var o=r.target.result;o.createObjectStore(vl,{keyPath:"id",autoIncrement:!0})};var u=new Promise(function(r,o){t.onerror=function(i){return o(i)},t.onsuccess=function(){r(t.result)}});return u}function mw(l,n,e){var t=new Date().getTime(),u={uuid:n,time:t,data:e},r=l.transaction([vl],"readwrite",N6);return new Promise(function(o,i){r.oncomplete=function(){return o()},r.onerror=function(s){return i(s)};var a=r.objectStore(vl);a.add(u),Z7(r)})}function vw(l,n){var e=l.transaction(vl,"readonly",N6),t=e.objectStore(vl),u=[],r=IDBKeyRange.bound(n+1,1/0);if(t.getAll){var o=t.getAll(r);return new Promise(function(a,s){o.onerror=function(c){return s(c)},o.onsuccess=function(c){a(c.target.result)}})}function i(){try{return r=IDBKeyRange.bound(n+1,1/0),t.openCursor(r)}catch{return t.openCursor()}}return new Promise(function(a,s){var c=i();c.onerror=function(f){return s(f)},c.onsuccess=function(f){var d=f.target.result;d?d.value.id<n+1?d.continue(n+1):(u.push(d.value),d.continue()):(Z7(e),a(u))}})}function yw(l,n){var e=l.transaction([vl],"readwrite",N6),t=e.objectStore(vl);return Promise.all(n.map(function(u){var r=t.delete(u);return new Promise(function(o){r.onsuccess=function(){return o()}})}))}function ww(l,n){var e=new Date().getTime()-n,t=l.transaction(vl,"readonly",N6),u=t.objectStore(vl),r=[];return new Promise(function(o){u.openCursor().onsuccess=function(i){var a=i.target.result;if(a){var s=a.value;if(s.time<e)r.push(s),a.continue();else{Z7(t),o(r);return}}else o(r)}})}function Sw(l,n){return ww(l,n).then(function(e){return yw(l,e.map(function(t){return t.id}))})}function xw(l,n){return n=J7(n),gw(l).then(function(e){var t={closed:!1,lastCursorId:0,channelName:l,options:n,uuid:R6(),eMIs:new Yc(n.idb.ttl*2),writeBlockPromise:hl,messagesCallback:null,readQueuePromises:[],db:e};return e.onclose=function(){t.closed=!0,n.idb.onclose&&n.idb.onclose()},Zc(t),t})}function Zc(l){l.closed||ld(l).then(function(){return Pn(l.options.idb.fallbackInterval)}).then(function(){return Zc(l)})}function Tw(l,n){return!(l.uuid===n.uuid||n.eMIs.has(l.id)||l.data.time<n.messagesCallbackTime)}function ld(l){return l.closed||!l.messagesCallback?hl:vw(l.db,l.lastCursorId).then(function(n){var e=n.filter(function(t){return!!t}).map(function(t){return t.id>l.lastCursorId&&(l.lastCursorId=t.id),t}).filter(function(t){return Tw(t,l)}).sort(function(t,u){return t.time-u.time});return e.forEach(function(t){l.messagesCallback&&(l.eMIs.add(t.id),l.messagesCallback(t.data))}),hl})}function Ew(l){l.closed=!0,l.db.close()}function Cw(l,n){return l.writeBlockPromise=l.writeBlockPromise.then(function(){return mw(l.db,l.uuid,n)}).then(function(){nw(0,10)===0&&Sw(l.db,l.options.idb.ttl)}),l.writeBlockPromise}function bw(l,n,e){l.messagesCallbackTime=e,l.messagesCallback=n,ld(l)}function Ow(){var l=Jc();return!!l}function kw(l){return l.idb.fallbackInterval*2}var Pw={create:xw,close:Ew,onMessage:bw,postMessage:Cw,canBeUsed:Ow,type:pw,averageResponseTime:kw,microSeconds:fw},Aw=I6,_w="pubkey.broadcastChannel-",Rw="localstorage";function nd(){var l;if(typeof window=="undefined")return null;try{l=window.localStorage,l=window["ie8-eventlistener/storage"]||window.localStorage}catch{}return l}function ed(l){return _w+l}function Iw(l,n){return new Promise(function(e){Pn().then(function(){var t=ed(l.channelName),u={token:R6(),time:new Date().getTime(),data:n,uuid:l.uuid},r=JSON.stringify(u);nd().setItem(t,r);var o=document.createEvent("Event");o.initEvent("storage",!0,!0),o.key=t,o.newValue=r,window.dispatchEvent(o),e()})})}function Nw(l,n){var e=ed(l),t=function(r){r.key===e&&n(JSON.parse(r.newValue))};return window.addEventListener("storage",t),t}function Mw(l){window.removeEventListener("storage",l)}function Fw(l,n){if(n=J7(n),!td())throw new Error("BroadcastChannel: localstorage cannot be used");var e=R6(),t=new Yc(n.localstorage.removeTimeout),u={channelName:l,uuid:e,eMIs:t};return u.listener=Nw(l,function(r){!u.messagesCallback||r.uuid!==e&&(!r.token||t.has(r.token)||r.data.time&&r.data.time<u.messagesCallbackTime||(t.add(r.token),u.messagesCallback(r.data)))}),u}function Lw(l){Mw(l.listener)}function Dw(l,n,e){l.messagesCallbackTime=e,l.messagesCallback=n}function td(){var l=nd();if(!l)return!1;try{var n="__broadcastchannel_check";l.setItem(n,"works"),l.removeItem(n)}catch{return!1}return!0}function $w(){var l=120,n=navigator.userAgent.toLowerCase();return n.includes("safari")&&!n.includes("chrome")?l*2:l}var jw={create:Fw,close:Lw,onMessage:Dw,postMessage:Iw,canBeUsed:td,type:Rw,averageResponseTime:$w,microSeconds:Aw},Bw=I6,Uw="simulate",lu=new Set;function Hw(l){var n={name:l,messagesCallback:null};return lu.add(n),n}function zw(l){lu.delete(l)}function Vw(l,n){return new Promise(function(e){return setTimeout(function(){var t=Array.from(lu);t.filter(function(u){return u.name===l.name}).filter(function(u){return u!==l}).filter(function(u){return!!u.messagesCallback}).forEach(function(u){return u.messagesCallback(n)}),e()},5)})}function Ww(l,n){l.messagesCallback=n}function Gw(){return!0}function Kw(){return 5}var qw={create:Hw,close:zw,onMessage:Ww,postMessage:Vw,canBeUsed:Gw,type:Uw,averageResponseTime:Kw,microSeconds:Bw},mo=[cw,Pw,jw];function Qw(l){var n=[].concat(l.methods,mo).filter(Boolean);if(l.type){if(l.type==="simulate")return qw;var e=n.find(function(u){return u.type===l.type});if(e)return e;throw new Error("method-type "+l.type+" not found")}l.webWorkerSupport||(n=n.filter(function(u){return u.type!=="idb"}));var t=n.find(function(u){return u.canBeUsed()});if(t)return t;throw new Error("No useable method found in "+JSON.stringify(mo.map(function(u){return u.type})))}var ud=new Set,Yw=0,M6=function(n,e){this.id=Yw++,ud.add(this),this.name=n,vo&&(e=vo),this.options=J7(e),this.method=Qw(this.options),this._iL=!1,this._onML=null,this._addEL={message:[],internal:[]},this._uMP=new Set,this._befC=[],this._prepP=null,Xw(this)};M6._pubkey=!0;var vo;M6.prototype={postMessage:function(n){if(this.closed)throw new Error("BroadcastChannel.postMessage(): Cannot post message after channel has closed "+JSON.stringify(n));return yo(this,"message",n)},postInternal:function(n){return yo(this,"internal",n)},set onmessage(l){var n=this.method.microSeconds(),e={time:n,fn:l};So(this,"message",this._onML),l&&typeof l=="function"?(this._onML=e,wo(this,"message",e)):this._onML=null},addEventListener:function(n,e){var t=this.method.microSeconds(),u={time:t,fn:e};wo(this,n,u)},removeEventListener:function(n,e){var t=this._addEL[n].find(function(u){return u.fn===e});So(this,n,t)},close:function(){var n=this;if(!this.closed){ud.delete(this),this.closed=!0;var e=this._prepP?this._prepP:hl;return this._onML=null,this._addEL.message=[],e.then(function(){return Promise.all(Array.from(n._uMP))}).then(function(){return Promise.all(n._befC.map(function(t){return t()}))}).then(function(){return n.method.close(n._state)})}},get type(){return this.method.type},get isClosed(){return this.closed}};function yo(l,n,e){var t=l.method.microSeconds(),u={time:t,type:n,data:e},r=l._prepP?l._prepP:hl;return r.then(function(){var o=l.method.postMessage(l._state,u);return l._uMP.add(o),o.catch().then(function(){return l._uMP.delete(o)}),o})}function Xw(l){var n=l.method.create(l.name,l.options);Zy(n)?(l._prepP=n,n.then(function(e){l._state=e})):l._state=n}function rd(l){return l._addEL.message.length>0||l._addEL.internal.length>0}function wo(l,n,e){l._addEL[n].push(e),Jw(l)}function So(l,n,e){l._addEL[n]=l._addEL[n].filter(function(t){return t!==e}),Zw(l)}function Jw(l){if(!l._iL&&rd(l)){var n=function(u){l._addEL[u.type].forEach(function(r){var o=1e5,i=r.time-o;u.time>=i&&r.fn(u.data)})},e=l.method.microSeconds();l._prepP?l._prepP.then(function(){l._iL=!0,l.method.onMessage(l._state,n,e)}):(l._iL=!0,l.method.onMessage(l._state,n,e))}}function Zw(l){if(l._iL&&!rd(l)){l._iL=!1;var n=l.method.microSeconds();l.method.onMessage(l._state,null,n)}}var lS=Object.prototype.toString.call(typeof process!="undefined"?process:0)==="[object process]";function nS(l){if(!(typeof WorkerGlobalScope=="function"&&self instanceof WorkerGlobalScope)){if(typeof window.addEventListener!="function")return;window.addEventListener("beforeunload",function(){l()},!0),window.addEventListener("unload",function(){l()},!0)}}var eS={add:nS},tS={},uS=lS?tS:eS,se=new Set,xo=!1;function rS(){xo||(xo=!0,uS.add(iS))}function oS(l){if(rS(),typeof l!="function")throw new Error("Listener is no function");se.add(l);var n={remove:function(){return se.delete(l)},run:function(){return se.delete(l),l()}};return n}function iS(){var l=[];return se.forEach(function(n){l.push(n()),se.delete(n)}),Promise.all(l)}var od=function(n,e){var t=this;this.broadcastChannel=n,this._options=e,this.isLeader=!1,this.hasLeader=!1,this.isDead=!1,this.token=R6(),this._aplQ=hl,this._aplQC=0,this._unl=[],this._lstns=[],this._dpL=function(){},this._dpLC=!1;var u=function(o){o.context==="leader"&&(o.action==="death"&&(t.hasLeader=!1),o.action==="tell"&&(t.hasLeader=!0))};this.broadcastChannel.addEventListener("internal",u),this._lstns.push(u)};od.prototype={applyOnce:function(n){var e=this;if(this.isLeader)return Pn(0,!0);if(this.isDead)return Pn(0,!1);if(this._aplQC>1)return this._aplQ;var t=function(){if(e.isLeader)return lw;var r=!1,o,i=new Promise(function(f){o=function(){r=!0,f()}}),a=function(d){d.context==="leader"&&d.token!=e.token&&(d.action==="apply"&&d.token>e.token&&o(),d.action==="tell"&&(o(),e.hasLeader=!0))};e.broadcastChannel.addEventListener("internal",a);var s=n?e._options.responseTime*4:e._options.responseTime,c=C4(e,"apply").then(function(){return Promise.race([Pn(s),i.then(function(){return Promise.reject(new Error)})])}).then(function(){return C4(e,"apply")}).then(function(){return Promise.race([Pn(s),i.then(function(){return Promise.reject(new Error)})])}).catch(function(){}).then(function(){return e.broadcastChannel.removeEventListener("internal",a),r?!1:sS(e).then(function(){return!0})});return c};return this._aplQC=this._aplQC+1,this._aplQ=this._aplQ.then(function(){return t()}).then(function(){e._aplQC=e._aplQC-1}),this._aplQ.then(function(){return e.isLeader})},awaitLeadership:function(){return this._aLP||(this._aLP=aS(this)),this._aLP},set onduplicate(l){this._dpL=l},die:function(){var n=this;return this._lstns.forEach(function(e){return n.broadcastChannel.removeEventListener("internal",e)}),this._lstns=[],this._unl.forEach(function(e){return e.remove()}),this._unl=[],this.isLeader&&(this.hasLeader=!1,this.isLeader=!1),this.isDead=!0,C4(this,"death")}};function aS(l){return l.isLeader?hl:new Promise(function(n){var e=!1;function t(){e||(e=!0,l.broadcastChannel.removeEventListener("internal",r),n(!0))}l.applyOnce().then(function(){l.isLeader&&t()});var u=function o(){return Pn(l._options.fallbackInterval).then(function(){if(!(l.isDead||e))if(l.isLeader)t();else return l.applyOnce(!0).then(function(){l.isLeader?t():o()})})};u();var r=function(i){i.context==="leader"&&i.action==="death"&&(l.hasLeader=!1,l.applyOnce().then(function(){l.isLeader&&t()}))};l.broadcastChannel.addEventListener("internal",r),l._lstns.push(r)})}function C4(l,n){var e={context:"leader",action:n,token:l.token};return l.broadcastChannel.postInternal(e)}function sS(l){l.isLeader=!0,l.hasLeader=!0;var n=oS(function(){return l.die()});l._unl.push(n);var e=function(u){u.context==="leader"&&u.action==="apply"&&C4(l,"tell"),u.context==="leader"&&u.action==="tell"&&!l._dpLC&&(l._dpLC=!0,l._dpL(),C4(l,"tell"))};return l.broadcastChannel.addEventListener("internal",e),l._lstns.push(e),C4(l,"tell")}function cS(l,n){return l||(l={}),l=JSON.parse(JSON.stringify(l)),l.fallbackInterval||(l.fallbackInterval=3e3),l.responseTime||(l.responseTime=n.method.averageResponseTime(n.options)),l}function dS(l,n){if(l._leaderElector)throw new Error("BroadcastChannel already has a leader-elector");n=cS(n,l);var e=new od(l,n);return l._befC.push(function(){return e.die()}),l._leaderElector=e,e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class fS{constructor(n,e={}){this.started=!1,this.enablePostMessage=!0,this.tokenManager=n,this.options=e,this.onTokenAddedHandler=this.onTokenAddedHandler.bind(this),this.onTokenRemovedHandler=this.onTokenRemovedHandler.bind(this),this.onTokenRenewedHandler=this.onTokenRenewedHandler.bind(this),this.onSetStorageHandler=this.onSetStorageHandler.bind(this),this.onSyncMessageHandler=this.onSyncMessageHandler.bind(this)}requiresLeadership(){return!1}isStarted(){return this.started}canStart(){return!!this.options.syncStorage&&a3()&&!this.started}async start(){if(!this.canStart())return;const{syncChannelName:n}=this.options;try{this.channel=new M6(n)}catch{throw new z("SyncStorageService is not supported in current browser.")}this.tokenManager.on(On,this.onTokenAddedHandler),this.tokenManager.on(kn,this.onTokenRemovedHandler),this.tokenManager.on(H5,this.onTokenRenewedHandler),this.tokenManager.on(z5,this.onSetStorageHandler),this.channel.addEventListener("message",this.onSyncMessageHandler),this.started=!0}async stop(){var n,e;this.started&&(this.tokenManager.off(On,this.onTokenAddedHandler),this.tokenManager.off(kn,this.onTokenRemovedHandler),this.tokenManager.off(H5,this.onTokenRenewedHandler),this.tokenManager.off(z5,this.onSetStorageHandler),(n=this.channel)===null||n===void 0||n.removeEventListener("message",this.onSyncMessageHandler),await((e=this.channel)===null||e===void 0?void 0:e.close()),this.channel=void 0,this.started=!1)}onTokenAddedHandler(n,e){var t;!this.enablePostMessage||(t=this.channel)===null||t===void 0||t.postMessage({type:On,key:n,token:e})}onTokenRemovedHandler(n,e){var t;!this.enablePostMessage||(t=this.channel)===null||t===void 0||t.postMessage({type:kn,key:n,token:e})}onTokenRenewedHandler(n,e,t){var u;!this.enablePostMessage||(u=this.channel)===null||u===void 0||u.postMessage({type:H5,key:n,token:e,oldToken:t})}onSetStorageHandler(n){var e;(e=this.channel)===null||e===void 0||e.postMessage({type:z5,storage:n})}onSyncMessageHandler(n){switch(this.enablePostMessage=!1,n.type){case z5:this.tokenManager.getStorage().setStorage(n.storage);break;case On:this.tokenManager.emitAdded(n.key,n.token),this.tokenManager.setExpireEventTimeout(n.key,n.token);break;case kn:this.tokenManager.clearExpireEventTimeout(n.key),this.tokenManager.emitRemoved(n.key,n.token);break;case H5:this.tokenManager.emitRenewed(n.key,n.token,n.oldToken);break}this.enablePostMessage=!0}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class hS{constructor(n={}){this.started=!1,this.options=n,this.onLeaderDuplicate=this.onLeaderDuplicate.bind(this),this.onLeader=this.onLeader.bind(this)}onLeaderDuplicate(){}async onLeader(){var n,e;await((e=(n=this.options).onLeader)===null||e===void 0?void 0:e.call(n))}isLeader(){var n;return!!(!((n=this.elector)===null||n===void 0)&&n.isLeader)}hasLeader(){var n;return!!(!((n=this.elector)===null||n===void 0)&&n.hasLeader)}async start(){if(this.canStart()){const{electionChannelName:n}=this.options;this.channel=new M6(n),this.elector=dS(this.channel),this.elector.onduplicate=this.onLeaderDuplicate,this.elector.awaitLeadership().then(this.onLeader),this.started=!0}}async stop(){this.started&&(this.elector&&(await this.elector.die(),this.elector=void 0),this.channel&&(this.channel.postInternal=()=>Promise.resolve(),await this.channel.close(),this.channel=void 0),this.started=!1)}requiresLeadership(){return!1}isStarted(){return this.started}canStart(){return a3()&&!this.started}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const id="autoRenew",ad="syncStorage",i0="leaderElection";class F4{constructor(n,e={}){this.sdk=n,this.onLeader=this.onLeader.bind(this);const{autoRenew:t,autoRemove:u,syncStorage:r}=n.tokenManager.getOptions();e.electionChannelName=e.electionChannelName||e.broadcastChannelName,this.options=Object.assign({},F4.defaultOptions,{autoRenew:t,autoRemove:u,syncStorage:r},{electionChannelName:`${n.options.clientId}-election`,syncChannelName:`${n.options.clientId}-sync`},P3(e)),this.started=!1,this.services=new Map,F4.knownServices.forEach(o=>{const i=this.createService(o);i&&this.services.set(o,i)})}async onLeader(){this.started&&await this.startServices()}isLeader(){var n;return(n=this.getService(i0))===null||n===void 0?void 0:n.isLeader()}isLeaderRequired(){return[...this.services.values()].some(n=>n.canStart()&&n.requiresLeadership())}async start(){this.started||(await this.startServices(),this.started=!0)}async stop(){await this.stopServices(),this.started=!1}getService(n){return this.services.get(n)}async startServices(){for(const[n,e]of this.services.entries())this.canStartService(n,e)&&await e.start()}async stopServices(){for(const n of this.services.values())await n.stop()}canStartService(n,e){let t=e.canStart()&&!e.isStarted();return n===i0?t&&(t=this.isLeaderRequired()):e.requiresLeadership()&&t&&(t=this.isLeader()),t}createService(n){const e=this.sdk.tokenManager;let t;switch(n){case i0:t=new hS(Object.assign(Object.assign({},this.options),{onLeader:this.onLeader}));break;case id:t=new Jy(e,Object.assign({},this.options));break;case ad:t=new fS(e,Object.assign({},this.options));break;default:throw new Error(`Unknown service ${n}`)}return t}}F4.knownServices=[id,ad,i0];F4.defaultOptions={autoRenew:!0,autoRemove:!0,syncStorage:!0};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function pS(l){return class extends l{constructor(...e){super(...e),this.authStateManager=new Xy(this),this.serviceManager=new F4(this,this.options.services)}async start(){await this.serviceManager.start(),this.tokenManager.start(),this.token.isLoginRedirect()||await this.authStateManager.updateAuthState()}async stop(){this.tokenManager.stop(),await this.serviceManager.stop()}async handleRedirect(e){await this.handleLoginRedirect(void 0,e)}async handleLoginRedirect(e,t){let u=this.options.state;if(e)this.tokenManager.setTokens(e),t=t||this.getOriginalUri(this.options.state);else if(this.isLoginRedirect())try{u=(await Kc(this,{})).state,t=t||this.getOriginalUri(u),await this.storeTokensFromRedirect()}catch(o){throw await this.authStateManager.updateAuthState(),o}else return;await this.authStateManager.updateAuthState(),this.removeOriginalUri(u);const{restoreOriginalUri:r}=this.options;r?await r(this,t):t&&window.location.replace(t)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function gS(l){return l.session.get().then(function(n){return n.status==="ACTIVE"}).catch(function(){return!1})}function mS(l){return N4(l,"/api/v1/sessions/me",{withCredentials:!0}).then(function(n){var e=re(n,"_links");return e.refresh=function(){return hn(l,R9(n,"refresh").href,{},{withCredentials:!0})},e.user=function(){return N4(l,R9(n,"user").href,{withCredentials:!0})},e}).catch(function(){return{status:"INACTIVE"}})}function vS(l){return j3(l,{url:l.getIssuerOrigin()+"/api/v1/sessions/me",method:"DELETE",withCredentials:!0})}function yS(l){return hn(l,"/api/v1/sessions/me/lifecycle/refresh",{},{withCredentials:!0})}function wS(l,n,e){e=e||window.location.href,window.location.assign(l.getIssuerOrigin()+"/login/sessionCookieRedirect"+cn({checkAccountSetupComplete:!0,token:n,redirectUrl:e}))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function SS(l){return{close:vS.bind(null,l),exists:gS.bind(null,l),get:mS.bind(null,l),refresh:yS.bind(null,l),setCookieAndRedirect:wS.bind(null,l)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function xS(l){return class extends l{constructor(...e){super(...e),this.session=SS(this)}closeSession(){return this.session.close().then(async()=>(this.clearStorage(),!0)).catch(function(e){if(e.name==="AuthApiError"&&e.errorCode==="E0000007")return!1;throw e})}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function TS(l,n,e){const t=Jv(n),u=Zv(t,l),r=ey(u),o=xS(r),i=Gy(o,e);return pS(i)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const sd=(l=[])=>{const n=[];return l.forEach(e=>{e.key==="webauthn"&&n.push({type:"public-key",id:_e(e.credentialId)})}),n},ES=(l,n)=>({publicKey:{rp:l.rp,user:{id:_e(l.user.id),name:l.user.name,displayName:l.user.displayName},challenge:_e(l.challenge),pubKeyCredParams:l.pubKeyCredParams,attestation:l.attestation,authenticatorSelection:l.authenticatorSelection,excludeCredentials:sd(n)}}),CS=(l,n)=>({publicKey:{challenge:_e(l.challenge),userVerification:l.userVerification,allowCredentials:sd(n)}}),bS=l=>{const n=l.response,e=l.id,t=E4(n.clientDataJSON),u=E4(n.attestationObject);return{id:e,clientData:t,attestation:u}},OS=l=>{const n=l.response,e=l.id,t=E4(n.clientDataJSON),u=E4(n.authenticatorData),r=E4(n.signature);return{id:e,clientData:t,authenticatorData:u,signatureData:r}};var kS=Object.freeze(Object.defineProperty({__proto__:null,buildCredentialCreationOptions:ES,buildCredentialRequestOptions:CS,getAssertion:OS,getAttestation:bS},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function PS(l){var n;return n=class extends l{constructor(...t){super(...t),this.idx=qv(this)}},n.webauthn=kS,n}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function AS(l,n,e){const t=TS(l,n,e);return PS(t)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function _S(){return class{constructor(n){this.devMode=!!n.devMode}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function RS(){return Object.assign({},o0,{inMemoryStore:{}})}const IS={token:{storageTypes:["localStorage","sessionStorage","cookie"]},cache:{storageTypes:["localStorage","sessionStorage","cookie"]},transaction:{storageTypes:["sessionStorage","localStorage","cookie"]},"shared-transaction":{storageTypes:["localStorage"]},"original-uri":{storageTypes:["localStorage"]}};function NS(l={},n){var e=l.cookies||{};return typeof e.secure=="undefined"&&(e.secure=n),typeof e.sameSite=="undefined"&&(e.sameSite=e.secure?"none":"lax"),e.secure&&!n&&(J3(`The current page is not being served with the HTTPS protocol.
For security reasons, we strongly recommend using HTTPS.
If you cannot use HTTPS, set "cookies.secure" option to false.`),e.secure=!1),e.sameSite==="none"&&!e.secure&&(e.sameSite="lax"),e}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function MS(){const l=_S();return class extends l{constructor(e){super(e),this.cookies=NS(e,Lc()),this.storageUtil=e.storageUtil||RS(),this.storageManager=Object.assign(Object.assign({},IS),e.storageManager)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const FS=/application\/\w*\+?json/;function LS(l){return l.headers.get("Content-Type")&&l.headers.get("Content-Type").toLowerCase().indexOf("application/json")>=0?l.json().catch(n=>({error:n,errorSummary:"Could not parse server response"})):l.text()}function DS(l,n,e){const t=typeof n=="object",u={};for(const o of e.headers.entries())u[o[0]]=o[1];const r={responseText:t?JSON.stringify(n):n,status:l,headers:u};return t&&(r.responseType="json",r.responseJSON=n),r}function $S(l,n,e){var t=e.data,u=e.headers||{},r=u["Content-Type"]||u["content-type"]||"";t&&typeof t!="string"&&(FS.test(r)?t=JSON.stringify(t):r==="application/x-www-form-urlencoded"&&(t=Object.entries(t).map(([a,s])=>`${a}=${encodeURIComponent(s)}`).join("&")));var o=window.fetch||xm,i=o(n,{method:l,headers:e.headers,body:t,credentials:e.withCredentials?"include":"omit"});return i.finally||(i=Promise.resolve(i)),i.then(function(a){var s=!a.ok,c=a.status;return LS(a).then(f=>DS(c,f,a)).then(f=>{var d;if(s||((d=f.responseJSON)===null||d===void 0?void 0:d.error))throw f;return f})})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function jS(){const l=MS();return class extends l{constructor(e){super(e),this.issuer=e.issuer,this.transformErrorXHR=e.transformErrorXHR,this.headers=e.headers,this.httpRequestClient=e.httpRequestClient||$S,this.httpRequestInterceptors=e.httpRequestInterceptors}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const BS=!0;/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function US(l){l=l||{};var n=l.scopes;if(n&&!Array.isArray(n))throw new z('scopes must be a array of strings. Required usage: new OktaAuth({scopes: ["openid", "email"]})');var e=l.issuer;if(!e)throw new z('No issuer passed to constructor. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com/oauth2/{authServerId}"})');var t=new RegExp("^http?s?://.+");if(!t.test(e))throw new z('Issuer must be a valid URL. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com/oauth2/{authServerId}"})');if(e.indexOf("-admin.")!==-1)throw new z('Issuer URL passed to constructor contains "-admin" in subdomain. Required usage: new OktaAuth({issuer: "https://{yourOktaDomain}.com})')}function HS(){const l=jS();return class extends l{constructor(e){super(e),US(e),this.issuer=s3(e.issuer),this.tokenUrl=s3(e.tokenUrl),this.authorizeUrl=s3(e.authorizeUrl),this.userinfoUrl=s3(e.userinfoUrl),this.revokeUrl=s3(e.revokeUrl),this.logoutUrl=s3(e.logoutUrl),this.pkce=e.pkce!==!1,this.clientId=e.clientId,this.redirectUri=e.redirectUri,a3()&&(this.redirectUri=mm(e.redirectUri,window.location.origin)),this.responseType=e.responseType,this.responseMode=e.responseMode,this.state=e.state,this.scopes=e.scopes,this.ignoreSignature=!!e.ignoreSignature,this.codeChallenge=e.codeChallenge,this.codeChallengeMethod=e.codeChallengeMethod,this.acrValues=e.acrValues,this.maxAge=e.maxAge,this.tokenManager=e.tokenManager,this.postLogoutRedirectUri=e.postLogoutRedirectUri,this.restoreOriginalUri=e.restoreOriginalUri,this.transactionManager=Object.assign({enableSharedStorage:BS},e.transactionManager),this.clientSecret=e.clientSecret,this.setLocation=e.setLocation,this.ignoreLifetime=!!e.ignoreLifetime,!e.maxClockSkew&&e.maxClockSkew!==0?this.maxClockSkew=tc:this.maxClockSkew=e.maxClockSkew}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function zS(){const l=HS();return class extends l{constructor(e){super(e),this.services=e.services,this.transformAuthState=e.transformAuthState}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function VS(){const l=zS();return class extends l{constructor(e){super(e),this.flow=e.flow,this.activationToken=e.activationToken,this.recoveryToken=e.recoveryToken,this.idx=e.idx}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class b4{constructor(n,e){if(!n)throw new z('"storage" is required');if(typeof e!="string"||!e.length)throw new z('"storageName" is required');this.storageName=e,this.storageProvider=n}getItem(n){return this.getStorage()[n]}setItem(n,e){return this.updateStorage(n,e)}removeItem(n){return this.clearStorage(n)}getStorage(){var n=this.storageProvider.getItem(this.storageName);n=n||"{}";try{return JSON.parse(n)}catch{throw new z("Unable to parse storage string: "+this.storageName)}}setStorage(n){try{var e=n?JSON.stringify(n):"{}";this.storageProvider.setItem(this.storageName,e)}catch{throw new z("Unable to set storage: "+this.storageName)}}clearStorage(n){if(!n){this.storageProvider.removeItem?this.storageProvider.removeItem(this.storageName):this.setStorage();return}var e=this.getStorage();delete e[n],this.setStorage(e)}updateStorage(n,e){var t=this.getStorage();t[n]=e,this.setStorage(t)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function a0(l){!a3()&&!l.storageProvider&&!l.storageKey&&J3("Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.")}class WS{constructor(n,e,t){this.storageManagerOptions=n,this.cookieOptions=e,this.storageUtil=t}getOptionsForSection(n,e){return Object.assign({},this.storageManagerOptions[n],e)}getStorage(n){if(n=Object.assign({},this.cookieOptions,n),n.storageProvider)return n.storageProvider;let{storageType:e,storageTypes:t}=n;if(e==="sessionStorage"&&(n.sessionCookie=!0),e&&t){const u=t.indexOf(e);u>=0&&(t=t.slice(u),e=void 0)}return e||(e=this.storageUtil.findStorageType(t)),this.storageUtil.getStorageByType(e,n)}getTokenStorage(n){n=this.getOptionsForSection("token",n),a0(n);const e=this.getStorage(n),t=n.storageKey||O7;return new b4(e,t)}getHttpCache(n){n=this.getOptionsForSection("cache",n);const e=this.getStorage(n),t=n.storageKey||rc;return new b4(e,t)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function GS(){return class extends WS{constructor(n,e,t){super(n,e,t)}getTransactionStorage(n){n=this.getOptionsForSection("transaction",n),a0(n);const e=this.getStorage(n),t=n.storageKey||oc;return new b4(e,t)}getSharedTansactionStorage(n){n=this.getOptionsForSection("shared-transaction",n),a0(n);const e=this.getStorage(n),t=n.storageKey||ic;return new b4(e,t)}getOriginalUriStorage(n){n=this.getOptionsForSection("original-uri",n),a0(n);const e=this.getStorage(n),t=n.storageKey||ac;return new b4(e,t)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function KS(){return GS()}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function qS(){const l=KS();return class extends l{constructor(e,t,u){super(e,t,u)}getIdxResponseStorage(e){let t;if(a3())try{t=this.storageUtil.getStorageByType("memory",e)}catch{J3("No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic")}else{const u=this.getTransactionStorage(e);u&&(t={getItem:r=>{const o=u.getStorage();return o&&o[r]?o[r]:null},setItem:(r,o)=>{const i=u.getStorage();if(!i)throw new z("Transaction has been cleared, failed to save idxState");i[r]=o,u.setStorage(i)},removeItem:r=>{const o=u.getStorage();!o||(delete o[r],u.setStorage(o))}})}return t?new b4(t,sc):null}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function cd(l){return!(!l||typeof l!="object"||Object.values(l).length===0)}function QS(l){return cd(l)?!!l.redirectUri||!!l.responseType:!1}function YS(l){return cd(l)?Object.values(l).find(e=>typeof e!="string")===void 0:!1}function s0(l){return!!(QS(l)||YS(l))}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const XS=30*60*1e3;function JS(l){const n=l.getSharedTansactionStorage(),e=n.getStorage();Object.keys(e).forEach(t=>{const u=e[t];Date.now()-u.dateCreated>XS&&delete e[t]}),n.setStorage(e)}function ZS(l,n,e){const t=l.getSharedTansactionStorage(),u=t.getStorage();u[n]={dateCreated:Date.now(),transaction:e},t.setStorage(u)}function lx(l,n){const u=l.getSharedTansactionStorage().getStorage()[n];return u&&u.transaction&&s0(u.transaction)?u.transaction:null}function nx(l,n){const e=l.getSharedTansactionStorage(),t=e.getStorage();delete t[n],e.setStorage(t)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function ex(){return class{constructor(n){this.storageManager=n.storageManager,this.enableSharedStorage=n.enableSharedStorage!==!1,this.saveLastResponse=n.saveLastResponse!==!1,this.options=n}clear(n={}){const e=this.storageManager.getTransactionStorage(),t=e.getStorage();if(e.clearStorage(),this.enableSharedStorage&&n.clearSharedStorage!==!1){const u=n.state||(t==null?void 0:t.state);u&&nx(this.storageManager,u)}}save(n,e={}){let t=this.storageManager.getTransactionStorage();const u=t.getStorage();s0(u)&&!e.muteWarning&&J3("a saved auth transaction exists in storage. This may indicate another auth flow is already in progress."),t.setStorage(n),this.enableSharedStorage&&n.state&&ZS(this.storageManager,n.state,n)}exists(n={}){try{return!!this.load(n)}catch{return!1}}load(n={}){let e;return this.enableSharedStorage&&n.state&&(JS(this.storageManager),e=lx(this.storageManager,n.state),s0(e))||(e=this.storageManager.getTransactionStorage().getStorage(),s0(e))?e:null}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function tx(){const l=ex();return class extends l{constructor(e){super(e)}clear(e={}){super.clear(e),e.clearIdxResponse!==!1&&this.clearIdxResponse()}saveIdxResponse(e){if(!this.saveLastResponse)return;const t=this.storageManager.getIdxResponseStorage();!t||t.setStorage(e)}loadIdxResponse(e){if(!this.saveLastResponse)return null;const t=this.storageManager.getIdxResponseStorage();if(!t)return null;const u=t.getStorage();if(!u||!yc(u.rawIdxResponse))return null;if(e){const{interactionHandle:r}=e;if(r&&u.interactionHandle!==r)return null}return u}clearIdxResponse(){if(!this.saveLastResponse)return;const e=this.storageManager.getIdxResponseStorage();e==null||e.clearStorage()}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class pn{constructor(n,e){const{res:t}=e,{headers:u}=t,r=r1(t,["headers"]);u&&(this.headers=u),Object.keys(r).forEach(o=>{o!=="_links"&&(this[o]=r[o])})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class ux extends pn{constructor(n,e){super(n,e);const{createdAt:t,modifiedAt:u,profile:r}=e.res;this.createdAt=t,this.modifiedAt=u,this.profile=r}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class rx extends pn{constructor(n,e){super(n,e),this.properties=e.res.properties}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class ox extends pn{constructor(n,e){super(n,e);const{accessToken:t,res:u}=e,{id:r,profile:o,roles:i,status:a,_links:s}=u;this.id=r,this.profile=o,this.roles=i,this.status=a,this.get=async()=>await X2({oktaAuth:n,accessToken:t,methodName:"get",links:s,transactionClassName:"EmailTransaction"})(),this.delete=async()=>await X2({oktaAuth:n,accessToken:t,methodName:"delete",links:s})(),this.challenge=async()=>await X2({oktaAuth:n,accessToken:t,methodName:"challenge",links:s,transactionClassName:"EmailChallengeTransaction"})(),s.poll&&(this.poll=async()=>await X2({oktaAuth:n,accessToken:t,methodName:"poll",links:s,transactionClassName:"EmailStatusTransaction"})()),s.verify&&(this.verify=async c=>await X2({oktaAuth:n,accessToken:t,methodName:"verify",links:s})(c))}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class ix extends pn{constructor(n,e){super(n,e);const{res:t}=e,{id:u,profile:r,expiresAt:o,status:i}=t;this.id=u,this.expiresAt=o,this.profile=r,this.status=i}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class ax extends pn{constructor(n,e){super(n,e);const{accessToken:t,res:u}=e,{id:r,expiresAt:o,profile:i,status:a,_links:s}=u;this.id=r,this.expiresAt=o,this.profile=i,this.status=a,this.poll=async()=>await X2({oktaAuth:n,accessToken:t,methodName:"poll",links:s,transactionClassName:"EmailStatusTransaction"})(),this.verify=async c=>await X2({oktaAuth:n,accessToken:t,methodName:"verify",links:s})(c)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class sx extends pn{constructor(n,e){super(n,e);const{res:t,accessToken:u}=e,{id:r,profile:o,status:i,_links:a}=t;this.id=r,this.profile=o,this.status=i,this.get=async()=>await X2({oktaAuth:n,accessToken:u,methodName:"get",links:a,transactionClassName:"PhoneTransaction"})(),this.delete=async()=>await X2({oktaAuth:n,accessToken:u,methodName:"delete",links:a})(),this.challenge=async s=>await X2({oktaAuth:n,accessToken:u,methodName:"challenge",links:a})(s),a.verify&&(this.verify=async s=>await X2({oktaAuth:n,accessToken:u,methodName:"verify",links:a})(s))}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var To;(function(l){l.PRIMARY="PRIMARY",l.SECONDARY="SECONDARY"})(To||(To={}));var Eo;(function(l){l.VERIFIED="VERIFIED",l.UNVERIFIED="UNVERIFIED"})(Eo||(Eo={}));var q9;(function(l){l.NOT_ENROLLED="NOT_ENROLLED",l.ACTIVE="ACTIVE"})(q9||(q9={}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class cx extends pn{constructor(n,e){super(n,e);const{res:t,accessToken:u}=e,{id:r,status:o,created:i,lastUpdated:a,_links:s}=t;this.id=r,this.status=o,this.created=i,this.lastUpdated=a,this.status==q9.NOT_ENROLLED?this.enroll=async c=>await X2({oktaAuth:n,accessToken:u,methodName:"enroll",links:s,transactionClassName:"PasswordTransaction"})(c):(this.get=async()=>await X2({oktaAuth:n,accessToken:u,methodName:"get",links:s,transactionClassName:"PasswordTransaction"})(),this.update=async c=>await X2({oktaAuth:n,accessToken:u,methodName:"put",links:s,transactionClassName:"PasswordTransaction"})(c),this.delete=async()=>await X2({oktaAuth:n,accessToken:u,methodName:"delete",links:s})())}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */async function I2(l,n){const{accessToken:e}=l.tokenManager.getTokensSync(),t=n.accessToken||(e==null?void 0:e.accessToken),u=l.getIssuerOrigin(),{url:r,method:o,payload:i}=n,a=r.startsWith(u)?r:`${u}${r}`;if(!t)throw new z("AccessToken is required to request MyAccount API endpoints.");const s=await j3(l,Object.assign({headers:{Accept:"*/*;okta-version=1.0.0"},accessToken:t,url:a,method:o},i&&{args:i})),f={EmailTransaction:ox,EmailStatusTransaction:ix,EmailChallengeTransaction:ax,ProfileTransaction:ux,ProfileSchemaTransaction:rx,PhoneTransaction:sx,PasswordTransaction:cx}[n.transactionClassName]||pn;return Array.isArray(s)?s.map(d=>new f(l,{res:d,accessToken:t})):new f(l,{res:s,accessToken:t})}function X2({oktaAuth:l,accessToken:n,methodName:e,links:t,transactionClassName:u}){for(const o of["GET","POST","PUT","DELETE"])if(o.toLowerCase()===e){const i=t.self;return async a=>I2(l,{accessToken:n,url:i.href,method:o,payload:a,transactionClassName:u})}const r=t[e];if(!r)throw new z(`No link is found with methodName: ${e}`);return async o=>I2(l,{accessToken:n,url:r.href,method:r.hints.allow[0],payload:o,transactionClassName:u})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const dx=async(l,n)=>await I2(l,{url:"/idp/myaccount/profile",method:"GET",accessToken:n==null?void 0:n.accessToken,transactionClassName:"ProfileTransaction"}),fx=async(l,n)=>{const{payload:e,accessToken:t}=n;return await I2(l,{url:"/idp/myaccount/profile",method:"PUT",payload:e,accessToken:t,transactionClassName:"ProfileTransaction"})},hx=async(l,n)=>await I2(l,{url:"/idp/myaccount/profile/schema",method:"GET",accessToken:n==null?void 0:n.accessToken,transactionClassName:"ProfileSchemaTransaction"});/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const px=async(l,n)=>await I2(l,{url:"/idp/myaccount/emails",method:"GET",accessToken:n==null?void 0:n.accessToken,transactionClassName:"EmailTransaction"}),gx=async(l,n)=>{const{id:e,accessToken:t}=n;return await I2(l,{url:`/idp/myaccount/emails/${e}`,method:"GET",accessToken:t,transactionClassName:"EmailTransaction"})},mx=async(l,n)=>{const{accessToken:e,payload:t}=n;return await I2(l,{url:"/idp/myaccount/emails",method:"POST",payload:t,accessToken:e,transactionClassName:"EmailTransaction"})},vx=async(l,n)=>{const{id:e,accessToken:t}=n;return await I2(l,{url:`/idp/myaccount/emails/${e}`,method:"DELETE",accessToken:t})},yx=async(l,n)=>{const{id:e,accessToken:t}=n;return await I2(l,{url:`/idp/myaccount/emails/${e}/challenge`,method:"POST",accessToken:t,transactionClassName:"EmailChallengeTransaction"})},wx=async(l,n)=>{const{emailId:e,challengeId:t,accessToken:u}=n;return await I2(l,{url:`/idp/myaccount/emails/${e}/challenge/${t}`,method:"POST",accessToken:u,transactionClassName:"EmailChallengeTransaction"})},Sx=async(l,n)=>{const{emailId:e,challengeId:t,payload:u,accessToken:r}=n;return await I2(l,{url:`/idp/myaccount/emails/${e}/challenge/${t}/verify`,method:"POST",payload:u,accessToken:r})};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const xx=async(l,n)=>await I2(l,{url:"/idp/myaccount/phones",method:"GET",accessToken:n==null?void 0:n.accessToken,transactionClassName:"PhoneTransaction"}),Tx=async(l,n)=>{const{accessToken:e,id:t}=n;return await I2(l,{url:`/idp/myaccount/phones/${t}`,method:"GET",accessToken:e,transactionClassName:"PhoneTransaction"})},Ex=async(l,n)=>{const{accessToken:e,payload:t}=n;return await I2(l,{url:"/idp/myaccount/phones",method:"POST",payload:t,accessToken:e,transactionClassName:"PhoneTransaction"})},Cx=async(l,n)=>{const{id:e,accessToken:t}=n;return await I2(l,{url:`/idp/myaccount/phones/${e}`,method:"DELETE",accessToken:t})},bx=async(l,n)=>{const{accessToken:e,id:t,payload:u}=n;return await I2(l,{url:`/idp/myaccount/phones/${t}/challenge`,method:"POST",payload:u,accessToken:e})},Ox=async(l,n)=>{const{id:e,payload:t,accessToken:u}=n;return await I2(l,{url:`/idp/myaccount/phones/${e}/verify`,method:"POST",payload:t,accessToken:u})};/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const kx=async(l,n)=>await I2(l,{url:"/idp/myaccount/password",method:"GET",accessToken:n==null?void 0:n.accessToken,transactionClassName:"PasswordTransaction"}),Px=async(l,n)=>{const{accessToken:e,payload:t}=n;return await I2(l,{url:"/idp/myaccount/password",method:"POST",payload:t,accessToken:e,transactionClassName:"PasswordTransaction"})},Ax=async(l,n)=>{const{accessToken:e,payload:t}=n;return await I2(l,{url:"/idp/myaccount/password",method:"PUT",payload:t,accessToken:e,transactionClassName:"PasswordTransaction"})},_x=async(l,n)=>await I2(l,{url:"/idp/myaccount/password",method:"DELETE",accessToken:n==null?void 0:n.accessToken});/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */var Rx=Object.freeze(Object.defineProperty({__proto__:null,getProfile:dx,getProfileSchema:hx,updateProfile:fx,addEmail:mx,deleteEmail:vx,getEmail:gx,getEmailChallenge:wx,getEmails:px,sendEmailChallenge:yx,verifyEmailChallenge:Sx,addPhone:Ex,deletePhone:Cx,getPhone:Tx,getPhones:xx,sendPhoneChallenge:bx,verifyPhoneChallenge:Ox,deletePassword:_x,enrollPassword:Px,getPassword:kx,updatePassword:Ax},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ix(l){return class extends l{constructor(...e){super(...e),this.myaccount=Object.entries(Rx).filter(([t])=>t!=="default").reduce((t,[u,r])=>(t[u]=r.bind(null,this),t),{})}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function F6(l,n){var e={};return Object.assign(e,n),!e.stateToken&&l.stateToken&&(e.stateToken=l.stateToken),e}function Nx(l){return F6(l)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function dd(l,n){return n=F6(l,n),hn(l,l.getIssuerOrigin()+"/api/v1/authn",n,{withCredentials:!0})}function Mx(l,n,e){if(!e||!e.stateToken){var t=nu(l);if(t)e={stateToken:t};else return Promise.reject(new z("No transaction to resume"))}return dd(l,e).then(function(u){return n.createTransaction(u)})}function Fx(l,n,e){if(!e||!e.stateToken){var t=nu(l);if(t)e={stateToken:t};else return Promise.reject(new z("No transaction to evaluate"))}return Lx(l,e).then(function(u){return n.createTransaction(u)})}function Lx(l,n){return n=F6(l,n),hn(l,l.getIssuerOrigin()+"/api/v1/authn/introspect",n,{withCredentials:!0})}function Dx(l){return!!nu(l)}function fd(l,n,e,t,u){return u=Object.assign({withCredentials:!0},u),hn(l,e,t,u).then(function(r){return n.createTransaction(r)})}function nu(l){return l.options.storageUtil.storage.get(oe)}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function hd(l,n,e,t,u,r){if(Array.isArray(u))return function(i,a){if(!i)throw new z("Must provide a link name");var s=_9(u,{name:i});if(!s)throw new z("No link found for that name");return hd(l,n,e,t,s,r)(a)};if(u.hints&&u.hints.allow&&u.hints.allow.length===1){var o=u.hints.allow[0];switch(o){case"GET":return function(){return N4(l,u.href,{withCredentials:!0})};case"POST":return function(i){r&&r.isPolling&&(r.isPolling=!1);var a=F6(e,i);(e.status==="MFA_ENROLL"||e.status==="FACTOR_ENROLL")&&Object.assign(a,{factorType:t.factorType,provider:t.provider});var s={},c=a.autoPush;if(c!==void 0){if(typeof c=="function")try{s.autoPush=!!c()}catch{return Promise.reject(new z("AutoPush resulted in an error."))}else c!==null&&(s.autoPush=!!c);a=re(a,"autoPush")}var f=a.rememberDevice;if(f!==void 0){if(typeof f=="function")try{s.rememberDevice=!!f()}catch{return Promise.reject(new z("RememberDevice resulted in an error."))}else f!==null&&(s.rememberDevice=!!f);a=re(a,"rememberDevice")}else a.profile&&a.profile.updatePhone!==void 0&&(a.profile.updatePhone&&(s.updatePhone=!0),a.profile=re(a.profile,"updatePhone"));var d=u.href+cn(s);return fd(l,n,d,a)}}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Co extends t1{constructor(){const n="The poll was stopped by the sdk";super(n)}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function $x(l,n,e){return function(t){var u,r,o,i;Om(t)?u=t:nc(t)&&(t=t,u=t.delay,r=t.rememberDevice,o=t.autoPush,i=t.transactionCallBack),!u&&u!==0&&(u=ec);var a=R9(n,"next","poll");function s(){var d={};if(typeof o=="function")try{d.autoPush=!!o()}catch{return Promise.reject(new z("AutoPush resulted in an error."))}else o!=null&&(d.autoPush=!!o);if(typeof r=="function")try{d.rememberDevice=!!r()}catch{return Promise.reject(new z("RememberDevice resulted in an error."))}else r!=null&&(d.rememberDevice=!!r);var h=a.href+cn(d);return hn(l,h,Nx(n),{saveAuthnState:!1,withCredentials:!0})}e.isPolling=!0;var c=0,f=function(){return e.isPolling?s().then(function(d){if(c=0,d.factorResult&&d.factorResult==="WAITING"){if(!e.isPolling)throw new Co;return typeof i=="function"&&i(d),to(u).then(f)}else return e.isPolling=!1,l.tx.createTransaction(d)}).catch(function(d){if(d.xhr&&(d.xhr.status===0||d.xhr.status===429)&&c<=4){var h=Math.pow(2,c)*1e3;return c++,to(h).then(f)}throw d}):Promise.reject(new Co)};return f().catch(function(d){throw e.isPolling=!1,d})}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function jx(l,n,e,t,u){var r={};for(var o in t._links)if(!!Object.prototype.hasOwnProperty.call(t._links,o)){var i=t._links[o];if(o==="next"&&(o=i.name),i.type){r[o]=i;continue}switch(o){case"poll":r.poll=$x(l,e,u);break;default:var a=hd(l,n,e,t,i,u);a&&(r[o]=a)}}return r}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Q9(l,n,e,t,u){if(t=t||e,t=m3(t),Array.isArray(t)){for(var r=[],o=0,i=t.length;o<i;o++)r.push(Q9(l,n,e,t[o],u));return r}var a=t._embedded||{};for(var s in a)!Object.prototype.hasOwnProperty.call(a,s)||(nc(a[s])||Array.isArray(a[s]))&&(a[s]=Q9(l,n,e,a[s],u));var c=jx(l,n,e,t,u);return Object.assign(a,c),t=re(t,"_embedded","_links"),Object.assign(t,a),t}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */class Bx{constructor(n,e,t=null){this.data=void 0,this.status=void 0,t&&(this.data=t,Object.assign(this,Q9(n,e,t,t,{})),delete this.stateToken,t.status==="RECOVERY_CHALLENGE"&&!t._links&&(this.cancel=function(){return Promise.resolve(e.createTransaction())}))}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Ux(l){const n={status:dd.bind(null,l),resume(e){return Mx(l,n,e)},exists:Dx.bind(null,l),introspect(e){return Fx(l,n,e)},createTransaction:e=>new Bx(l,n,e),postToTransaction:(e,t,u)=>fd(l,n,e,t,u)};return n}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function Hx(l,n){if(n=n||{},!Nc())return Promise.reject(new z("Fingerprinting is not supported on this device"));var e,t,u,r=new Promise(function(o,i){t=document.createElement("iframe"),t.style.display="none",u=function(s){if(!(!s||!s.data||s.origin!==l.getIssuerOrigin())){try{var c=JSON.parse(s.data)}catch{return}if(!!c){if(c.type==="FingerprintAvailable")return o(c.fingerprint);c.type==="FingerprintServiceReady"&&s.source.postMessage(JSON.stringify({type:"GetFingerprint"}),s.origin)}}},zc(window,"message",u),t.src=l.getIssuerOrigin()+"/auth/services/devicefingerprint",document.body.appendChild(t),e=setTimeout(function(){i(new z("Fingerprinting timed out"))},(n==null?void 0:n.timeout)||15e3)});return r.finally(function(){clearTimeout(e),Vc(window,"message",u),document.body.contains(t)&&t.parentElement.removeChild(t)})}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */function zx(l){return class extends l{constructor(...e){super(...e),this.authn=this.tx=Ux(this),this.fingerprint=Hx.bind(null,this)}async signIn(e){e=m3(e||{});const t=u=>(delete e.sendFingerprint,this.tx.postToTransaction("/api/v1/authn",e,u));return e.sendFingerprint?this.fingerprint().then(function(u){return t({headers:{"X-Device-Fingerprint":u}})}):t()}async signInWithCredentials(e){return this.signIn(e)}forgotPassword(e){return this.tx.postToTransaction("/api/v1/authn/recovery/password",e)}unlockAccount(e){return this.tx.postToTransaction("/api/v1/authn/recovery/unlock",e)}verifyRecoveryToken(e){return this.tx.postToTransaction("/api/v1/authn/recovery/token",e)}}}/*!
 * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * 
 * See the License for the specific language governing permissions and limitations under the License.
 */const Vx=VS(),Wx=qS(),Gx=tx(),Kx=AS(Wx,Vx,Gx),qx=Ix(Kx),Qx=zx(qx);class Y9 extends Qx{constructor(n){super(n)}}function bo(l,n,e,t,u,r,o){try{var i=l[r](o),a=i.value}catch(s){e(s);return}i.done?n(a):Promise.resolve(a).then(t,u)}function pd(l){return function(){var n=this,e=arguments;return new Promise(function(t,u){var r=l.apply(n,e);function o(a){bo(r,t,u,o,i,"next",a)}function i(a){bo(r,t,u,o,i,"throw",a)}o(void 0)})}}function Yx(l){if(Array.isArray(l))return l}function Xx(l,n){var e=l==null?null:typeof Symbol!="undefined"&&l[Symbol.iterator]||l["@@iterator"];if(e!=null){var t,u,r,o,i=[],a=!0,s=!1;try{if(r=(e=e.call(l)).next,n===0){if(Object(e)!==e)return;a=!1}else for(;!(a=(t=r.call(e)).done)&&(i.push(t.value),i.length!==n);a=!0);}catch(c){s=!0,u=c}finally{try{if(!a&&e.return!=null&&(o=e.return(),Object(o)!==o))return}finally{if(s)throw u}}return i}}function Oo(l,n){(n==null||n>l.length)&&(n=l.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=l[e];return t}function Jx(l,n){if(!!l){if(typeof l=="string")return Oo(l,n);var e=Object.prototype.toString.call(l).slice(8,-1);if(e==="Object"&&l.constructor&&(e=l.constructor.name),e==="Map"||e==="Set")return Array.from(l);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Oo(l,n)}}function Zx(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function eu(l,n){return Yx(l)||Xx(l,n)||Jx(l,n)||Zx()}var gd={exports:{}},md={exports:{}};(function(l){function n(e){return l.exports=n=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l.exports.__esModule=!0,l.exports.default=l.exports,n(e)}l.exports=n,l.exports.__esModule=!0,l.exports.default=l.exports})(md);(function(l){var n=md.exports.default;function e(){l.exports=e=function(){return u},l.exports.__esModule=!0,l.exports.default=l.exports;var t,u={},r=Object.prototype,o=r.hasOwnProperty,i=Object.defineProperty||function(_,A,x){_[A]=x.value},a=typeof Symbol=="function"?Symbol:{},s=a.iterator||"@@iterator",c=a.asyncIterator||"@@asyncIterator",f=a.toStringTag||"@@toStringTag";function d(_,A,x){return Object.defineProperty(_,A,{value:x,enumerable:!0,configurable:!0,writable:!0}),_[A]}try{d({},"")}catch{d=function(x,N,B){return x[N]=B}}function h(_,A,x,N){var B=A&&A.prototype instanceof S?A:S,U=Object.create(B.prototype),o2=new c2(N||[]);return i(U,"_invoke",{value:Z(_,x,o2)}),U}function p(_,A,x){try{return{type:"normal",arg:_.call(A,x)}}catch(N){return{type:"throw",arg:N}}}u.wrap=h;var y="suspendedStart",m="suspendedYield",g="executing",v="completed",w={};function S(){}function I(){}function C(){}var D={};d(D,s,function(){return this});var F=Object.getPrototypeOf,j=F&&F(F(a2([])));j&&j!==r&&o.call(j,s)&&(D=j);var K=C.prototype=S.prototype=Object.create(D);function X(_){["next","throw","return"].forEach(function(A){d(_,A,function(x){return this._invoke(A,x)})})}function n2(_,A){function x(B,U,o2,g2){var m2=p(_[B],_,U);if(m2.type!=="throw"){var S2=m2.arg,A2=S2.value;return A2&&n(A2)=="object"&&o.call(A2,"__await")?A.resolve(A2.__await).then(function(y3){x("next",y3,o2,g2)},function(y3){x("throw",y3,o2,g2)}):A.resolve(A2).then(function(y3){S2.value=y3,o2(S2)},function(y3){return x("throw",y3,o2,g2)})}g2(m2.arg)}var N;i(this,"_invoke",{value:function(U,o2){function g2(){return new A(function(m2,S2){x(U,o2,m2,S2)})}return N=N?N.then(g2,g2):g2()}})}function Z(_,A,x){var N=y;return function(B,U){if(N===g)throw new Error("Generator is already running");if(N===v){if(B==="throw")throw U;return{value:t,done:!0}}for(x.method=B,x.arg=U;;){var o2=x.delegate;if(o2){var g2=b(o2,x);if(g2){if(g2===w)continue;return g2}}if(x.method==="next")x.sent=x._sent=x.arg;else if(x.method==="throw"){if(N===y)throw N=v,x.arg;x.dispatchException(x.arg)}else x.method==="return"&&x.abrupt("return",x.arg);N=g;var m2=p(_,A,x);if(m2.type==="normal"){if(N=x.done?v:m,m2.arg===w)continue;return{value:m2.arg,done:x.done}}m2.type==="throw"&&(N=v,x.method="throw",x.arg=m2.arg)}}}function b(_,A){var x=A.method,N=_.iterator[x];if(N===t)return A.delegate=null,x==="throw"&&_.iterator.return&&(A.method="return",A.arg=t,b(_,A),A.method==="throw")||x!=="return"&&(A.method="throw",A.arg=new TypeError("The iterator does not provide a '"+x+"' method")),w;var B=p(N,_.iterator,A.arg);if(B.type==="throw")return A.method="throw",A.arg=B.arg,A.delegate=null,w;var U=B.arg;return U?U.done?(A[_.resultName]=U.value,A.next=_.nextLoc,A.method!=="return"&&(A.method="next",A.arg=t),A.delegate=null,w):U:(A.method="throw",A.arg=new TypeError("iterator result is not an object"),A.delegate=null,w)}function L(_){var A={tryLoc:_[0]};1 in _&&(A.catchLoc=_[1]),2 in _&&(A.finallyLoc=_[2],A.afterLoc=_[3]),this.tryEntries.push(A)}function Y(_){var A=_.completion||{};A.type="normal",delete A.arg,_.completion=A}function c2(_){this.tryEntries=[{tryLoc:"root"}],_.forEach(L,this),this.reset(!0)}function a2(_){if(_||_===""){var A=_[s];if(A)return A.call(_);if(typeof _.next=="function")return _;if(!isNaN(_.length)){var x=-1,N=function B(){for(;++x<_.length;)if(o.call(_,x))return B.value=_[x],B.done=!1,B;return B.value=t,B.done=!0,B};return N.next=N}}throw new TypeError(n(_)+" is not iterable")}return I.prototype=C,i(K,"constructor",{value:C,configurable:!0}),i(C,"constructor",{value:I,configurable:!0}),I.displayName=d(C,f,"GeneratorFunction"),u.isGeneratorFunction=function(_){var A=typeof _=="function"&&_.constructor;return!!A&&(A===I||(A.displayName||A.name)==="GeneratorFunction")},u.mark=function(_){return Object.setPrototypeOf?Object.setPrototypeOf(_,C):(_.__proto__=C,d(_,f,"GeneratorFunction")),_.prototype=Object.create(K),_},u.awrap=function(_){return{__await:_}},X(n2.prototype),d(n2.prototype,c,function(){return this}),u.AsyncIterator=n2,u.async=function(_,A,x,N,B){B===void 0&&(B=Promise);var U=new n2(h(_,A,x,N),B);return u.isGeneratorFunction(A)?U:U.next().then(function(o2){return o2.done?o2.value:U.next()})},X(K),d(K,f,"Generator"),d(K,s,function(){return this}),d(K,"toString",function(){return"[object Generator]"}),u.keys=function(_){var A=Object(_),x=[];for(var N in A)x.push(N);return x.reverse(),function B(){for(;x.length;){var U=x.pop();if(U in A)return B.value=U,B.done=!1,B}return B.done=!0,B}},u.values=a2,c2.prototype={constructor:c2,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(Y),!A)for(var x in this)x.charAt(0)==="t"&&o.call(this,x)&&!isNaN(+x.slice(1))&&(this[x]=t)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if(A.type==="throw")throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var x=this;function N(S2,A2){return o2.type="throw",o2.arg=A,x.next=S2,A2&&(x.method="next",x.arg=t),!!A2}for(var B=this.tryEntries.length-1;B>=0;--B){var U=this.tryEntries[B],o2=U.completion;if(U.tryLoc==="root")return N("end");if(U.tryLoc<=this.prev){var g2=o.call(U,"catchLoc"),m2=o.call(U,"finallyLoc");if(g2&&m2){if(this.prev<U.catchLoc)return N(U.catchLoc,!0);if(this.prev<U.finallyLoc)return N(U.finallyLoc)}else if(g2){if(this.prev<U.catchLoc)return N(U.catchLoc,!0)}else{if(!m2)throw new Error("try statement without catch or finally");if(this.prev<U.finallyLoc)return N(U.finallyLoc)}}}},abrupt:function(A,x){for(var N=this.tryEntries.length-1;N>=0;--N){var B=this.tryEntries[N];if(B.tryLoc<=this.prev&&o.call(B,"finallyLoc")&&this.prev<B.finallyLoc){var U=B;break}}U&&(A==="break"||A==="continue")&&U.tryLoc<=x&&x<=U.finallyLoc&&(U=null);var o2=U?U.completion:{};return o2.type=A,o2.arg=x,U?(this.method="next",this.next=U.finallyLoc,w):this.complete(o2)},complete:function(A,x){if(A.type==="throw")throw A.arg;return A.type==="break"||A.type==="continue"?this.next=A.arg:A.type==="return"?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):A.type==="normal"&&x&&(this.next=x),w},finish:function(A){for(var x=this.tryEntries.length-1;x>=0;--x){var N=this.tryEntries[x];if(N.finallyLoc===A)return this.complete(N.completion,N.afterLoc),Y(N),w}},catch:function(A){for(var x=this.tryEntries.length-1;x>=0;--x){var N=this.tryEntries[x];if(N.tryLoc===A){var B=N.completion;if(B.type==="throw"){var U=B.arg;Y(N)}return U}}throw new Error("illegal catch attempt")},delegateYield:function(A,x,N){return this.delegate={iterator:a2(A),resultName:x,nextLoc:N},this.method==="next"&&(this.arg=t),w}},u}l.exports=e,l.exports.__esModule=!0,l.exports.default=l.exports})(gd);var c0=gd.exports(),U0=c0;try{regeneratorRuntime=c0}catch{typeof globalThis=="object"?globalThis.regeneratorRuntime=c0:Function("r","regeneratorRuntime = r")(c0)}function L6(l,n){const e=H0(l),t=H0(n),u=e.pop(),r=t.pop(),o=X9(e,t);return o!==0?o:u&&r?X9(u.split("."),r.split(".")):u||r?u?-1:1:0}const lT=l=>typeof l=="string"&&/^[v\d]/.test(l)&&vd.test(l),tu=(l,n,e)=>{tT(e);const t=L6(l,n);return yd[e].includes(t)},nT=(l,n)=>{const e=n.match(/^([<>=~^]+)/),t=e?e[1]:"=";if(t!=="^"&&t!=="~")return tu(l,n,t);const[u,r,o]=H0(l),[i,a,s]=H0(n);return d0(u,i)!==0?!1:t==="^"?X9([r,o],[a,s])>=0:d0(r,a)!==0?!1:d0(o,s)>=0};L6.validate=lT;L6.compare=tu;L6.satisfies=nT;const vd=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,H0=l=>{if(typeof l!="string")throw new TypeError("Invalid argument expected string");const n=l.match(vd);if(!n)throw new Error(`Invalid argument not valid semver ('${l}' received)`);return n.shift(),n},ko=l=>l==="*"||l==="x"||l==="X",Po=l=>{const n=parseInt(l,10);return isNaN(n)?l:n},eT=(l,n)=>typeof l!=typeof n?[String(l),String(n)]:[l,n],d0=(l,n)=>{if(ko(l)||ko(n))return 0;const[e,t]=eT(Po(l),Po(n));return e>t?1:e<t?-1:0},X9=(l,n)=>{for(let e=0;e<Math.max(l.length,n.length);e++){const t=d0(l[e]||0,n[e]||0);if(t!==0)return t}return 0},yd={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]},Ao=Object.keys(yd),tT=l=>{if(typeof l!="string")throw new TypeError(`Invalid operator type, expected string but got ${typeof l}`);if(Ao.indexOf(l)===-1)throw new Error(`Invalid operator, expected one of ${Ao.join("|")}`)};function Ie(l){return Ie=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Ie(l)}function uT(l,n){if(Ie(l)!=="object"||l===null)return l;var e=l[Symbol.toPrimitive];if(e!==void 0){var t=e.call(l,n||"default");if(Ie(t)!=="object")return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return(n==="string"?String:Number)(l)}function rT(l){var n=uT(l,"string");return Ie(n)==="symbol"?n:String(n)}function oT(l,n,e){return n=rT(n),n in l?Object.defineProperty(l,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):l[n]=e,l}function iT(l,n){if(l==null)return{};var e=Vn(l,n),t,u;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(l);for(u=0;u<r.length;u++)t=r[u],!(n.indexOf(t)>=0)&&(!Object.prototype.propertyIsEnumerable.call(l,t)||(e[t]=l[t]))}return e}/*!
 * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */var wd=W.exports.createContext(null),Cl=function(){return W.exports.useContext(wd)},ce=function(n){var e=n.error;return e.name&&e.message?W.exports.createElement("p",null,e.name,": ",e.message):W.exports.createElement("p",null,"Error: ",e.toString())},aT=function(n){var e=n.oktaAuth,t=n.restoreOriginalUri,u=n.onAuthRequired,r=n.children,o=W.exports.useState(function(){return e?e.authStateManager.getAuthState():null}),i=eu(o,2),a=i[0],s=i[1];if(W.exports.useEffect(function(){!e||!t||(e.options.restoreOriginalUri&&console.warn("Two custom restoreOriginalUri callbacks are detected. The one from the OktaAuth configuration will be overridden by the provided restoreOriginalUri prop from the Security component."),e.options.restoreOriginalUri=function(){var p=pd(U0.mark(function y(m,g){return U0.wrap(function(w){for(;;)switch(w.prev=w.next){case 0:t(m,g);case 1:case"end":return w.stop()}},y)}));return function(y,m){return p.apply(this,arguments)}}())},[]),W.exports.useEffect(function(){if(!!e){e._oktaUserAgent?e._oktaUserAgent.addEnvironment("@okta/okta-react".concat("/","6.7.0")):console.warn("_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .");var p=e.authStateManager.getAuthState();p!==a&&s(p);var y=function(g){s(g)};return e.authStateManager.subscribe(y),e.start(),function(){e.authStateManager.unsubscribe(y)}}},[e]),!e){var c=new z("No oktaAuth instance passed to Security Component.");return W.exports.createElement(ce,{error:c})}if(!t){var f=new z("No restoreOriginalUri callback passed to Security Component.");return W.exports.createElement(ce,{error:f})}if(!e._oktaUserAgent)console.warn("_oktaUserAgent is not available on auth SDK instance. Please use okta-auth-js@^5.3.1 .");else{var d=tu(e._oktaUserAgent.getVersion(),"5.3.1",">=");if(!d){var h=new z(`
        Passed in oktaAuth is not compatible with the SDK,
        minimum supported okta-auth-js version is `.concat("5.3.1",`.
      `));return W.exports.createElement(ce,{error:h})}}return W.exports.createElement(wd.Provider,{value:{oktaAuth:e,authState:a,_onAuthRequired:u}},r)},sT=function(n){var e=n.errorComponent,t=n.loadingElement,u=t===void 0?null:t,r=n.onAuthResume,o=Cl(),i=o.oktaAuth,a=o.authState,s=W.exports.useState(null),c=eu(s,2),f=c[0],d=c[1],h=e||ce;W.exports.useEffect(function(){var m=i.idx.isInteractionRequired||i.isInteractionRequired.bind(i);if(r&&m()){r();return}i.handleLoginRedirect().catch(function(g){d(g)})},[i]);var p=a==null?void 0:a.error,y=f||p;return y?W.exports.createElement(h,{error:y}):u},cT=["onAuthRequired","errorComponent"];function _o(l,n){var e=Object.keys(l);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(l);n&&(t=t.filter(function(u){return Object.getOwnPropertyDescriptor(l,u).enumerable})),e.push.apply(e,t)}return e}function dT(l){for(var n=1;n<arguments.length;n++){var e=arguments[n]!=null?arguments[n]:{};n%2?_o(Object(e),!0).forEach(function(t){oT(l,t,e[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(l,Object.getOwnPropertyDescriptors(e)):_o(Object(e)).forEach(function(t){Object.defineProperty(l,t,Object.getOwnPropertyDescriptor(e,t))})}return l}var J9;"useRouteMatch"in _8?J9=_8["useRouteMatch"in _8?"useRouteMatch":""]:J9=function(){throw new z('Unsupported: SecureRoute only works with react-router-dom v5 or any router library with compatible APIs. See examples under the "samples" folder for how to implement your own custom SecureRoute Component.')};var Ro=function(n){var e=n.onAuthRequired,t=n.errorComponent,u=iT(n,cT),r=Cl(),o=r.oktaAuth,i=r.authState,a=r._onAuthRequired,s=J9(u),c=W.exports.useRef(!1),f=W.exports.useState(null),d=eu(f,2),h=d[0],p=d[1],y=t||ce;return W.exports.useEffect(function(){var m=function(){var g=pd(U0.mark(function v(){var w,S;return U0.wrap(function(C){for(;;)switch(C.prev=C.next){case 0:if(!c.current){C.next=2;break}return C.abrupt("return");case 2:if(c.current=!0,w=qs(window.location.href,window.location.origin),o.setOriginalUri(w),S=e||a,!S){C.next=11;break}return C.next=9,S(o);case 9:C.next=13;break;case 11:return C.next=13,o.signInWithRedirect();case 13:case"end":return C.stop()}},v)}));return function(){return g.apply(this,arguments)}}();if(!!s&&!!i){if(i.isAuthenticated){c.current=!1;return}i.isAuthenticated||m().catch(function(g){p(g)})}},[i,o,s,e,a]),h?W.exports.createElement(y,{error:h}):!i||!i.isAuthenticated?null:W.exports.createElement(yn,dT({},u))},z3=function(n,e){if(typeof n=="function"){n(e);return}n!==null&&typeof n=="object"&&(n.current=e)},Io=function(n){return n!==null&&typeof n=="object"&&n.hasOwnProperty("current")},fT=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.prevNode=null,t}var e=n.prototype;return e.componentDidMount=function(){var u=he.exports.findDOMNode(this);this.prevNode=u,z3(this.props.innerRef,u)},e.componentDidUpdate=function(u){var r=he.exports.findDOMNode(this);this.prevNode!==r&&(this.prevNode=r,z3(this.props.innerRef,r)),u.innerRef!==this.props.innerRef&&z3(this.props.innerRef,r)},e.componentWillUnmount=function(){z3(this.props.innerRef,null),delete this.prevNode},e.render=function(){var u=this.props.children;return u},n}(W.exports.Component),hT=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.currentNode=null,t.handleRefOverride=function(i){var a=t.props,s=a.children,c=a.innerRef;z3(s.ref,i),z3(c,i),t.currentNode=i},t}var e=n.prototype;return e.componentDidUpdate=function(u){u.innerRef!==this.props.innerRef&&z3(this.props.innerRef,this.currentNode)},e.componentWillUnmount=function(){delete this.currentNode},e.render=function(){var u=this.props.children;return W.exports.cloneElement(u,{ref:this.handleRefOverride})},n}(W.exports.Component),d3=function(n){var e=n.children,t=n.innerRef,u=Vn(n,["children","innerRef"]),r=W.exports.Children.only(e),o=g7.exports.isForwardRef(r)?hT:fT,i=r&&u&&Object.keys(u).length>0?W.exports.cloneElement(r,u):r;return W.exports.createElement(o,{innerRef:t},i)},pT=Array.isArray,L2=pT,gT=typeof global=="object"&&global&&global.Object===Object&&global,Sd=gT,mT=typeof self=="object"&&self&&self.Object===Object&&self,vT=Sd||mT||Function("return this")(),bl=vT,yT=bl.Symbol,G3=yT,xd=Object.prototype,wT=xd.hasOwnProperty,ST=xd.toString,N5=G3?G3.toStringTag:void 0;function xT(l){var n=wT.call(l,N5),e=l[N5];try{l[N5]=void 0;var t=!0}catch{}var u=ST.call(l);return t&&(n?l[N5]=e:delete l[N5]),u}var TT=Object.prototype,ET=TT.toString;function CT(l){return ET.call(l)}var bT="[object Null]",OT="[object Undefined]",No=G3?G3.toStringTag:void 0;function Z3(l){return l==null?l===void 0?OT:bT:No&&No in Object(l)?xT(l):CT(l)}function $3(l){return l!=null&&typeof l=="object"}var kT="[object Symbol]";function D6(l){return typeof l=="symbol"||$3(l)&&Z3(l)==kT}var PT=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,AT=/^\w*$/;function uu(l,n){if(L2(l))return!1;var e=typeof l;return e=="number"||e=="symbol"||e=="boolean"||l==null||D6(l)?!0:AT.test(l)||!PT.test(l)||n!=null&&l in Object(n)}function Xl(l){var n=typeof l;return l!=null&&(n=="object"||n=="function")}var _T="[object AsyncFunction]",RT="[object Function]",IT="[object GeneratorFunction]",NT="[object Proxy]";function L4(l){if(!Xl(l))return!1;var n=Z3(l);return n==RT||n==IT||n==_T||n==NT}var MT=bl["__core-js_shared__"],M8=MT,Mo=function(){var l=/[^.]+$/.exec(M8&&M8.keys&&M8.keys.IE_PROTO||"");return l?"Symbol(src)_1."+l:""}();function FT(l){return!!Mo&&Mo in l}var LT=Function.prototype,DT=LT.toString;function Gn(l){if(l!=null){try{return DT.call(l)}catch{}try{return l+""}catch{}}return""}var $T=/[\\^$.*+?()[\]{}|]/g,jT=/^\[object .+?Constructor\]$/,BT=Function.prototype,UT=Object.prototype,HT=BT.toString,zT=UT.hasOwnProperty,VT=RegExp("^"+HT.call(zT).replace($T,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function WT(l){if(!Xl(l)||FT(l))return!1;var n=L4(l)?VT:jT;return n.test(Gn(l))}function GT(l,n){return l==null?void 0:l[n]}function Kn(l,n){var e=GT(l,n);return WT(e)?e:void 0}var KT=Kn(Object,"create"),Ne=KT;function qT(){this.__data__=Ne?Ne(null):{},this.size=0}function QT(l){var n=this.has(l)&&delete this.__data__[l];return this.size-=n?1:0,n}var YT="__lodash_hash_undefined__",XT=Object.prototype,JT=XT.hasOwnProperty;function ZT(l){var n=this.__data__;if(Ne){var e=n[l];return e===YT?void 0:e}return JT.call(n,l)?n[l]:void 0}var lE=Object.prototype,nE=lE.hasOwnProperty;function eE(l){var n=this.__data__;return Ne?n[l]!==void 0:nE.call(n,l)}var tE="__lodash_hash_undefined__";function uE(l,n){var e=this.__data__;return this.size+=this.has(l)?0:1,e[l]=Ne&&n===void 0?tE:n,this}function Ln(l){var n=-1,e=l==null?0:l.length;for(this.clear();++n<e;){var t=l[n];this.set(t[0],t[1])}}Ln.prototype.clear=qT;Ln.prototype.delete=QT;Ln.prototype.get=ZT;Ln.prototype.has=eE;Ln.prototype.set=uE;function rE(){this.__data__=[],this.size=0}function $6(l,n){return l===n||l!==l&&n!==n}function j6(l,n){for(var e=l.length;e--;)if($6(l[e][0],n))return e;return-1}var oE=Array.prototype,iE=oE.splice;function aE(l){var n=this.__data__,e=j6(n,l);if(e<0)return!1;var t=n.length-1;return e==t?n.pop():iE.call(n,e,1),--this.size,!0}function sE(l){var n=this.__data__,e=j6(n,l);return e<0?void 0:n[e][1]}function cE(l){return j6(this.__data__,l)>-1}function dE(l,n){var e=this.__data__,t=j6(e,l);return t<0?(++this.size,e.push([l,n])):e[t][1]=n,this}function Ol(l){var n=-1,e=l==null?0:l.length;for(this.clear();++n<e;){var t=l[n];this.set(t[0],t[1])}}Ol.prototype.clear=rE;Ol.prototype.delete=aE;Ol.prototype.get=sE;Ol.prototype.has=cE;Ol.prototype.set=dE;var fE=Kn(bl,"Map"),Me=fE;function hE(){this.size=0,this.__data__={hash:new Ln,map:new(Me||Ol),string:new Ln}}function pE(l){var n=typeof l;return n=="string"||n=="number"||n=="symbol"||n=="boolean"?l!=="__proto__":l===null}function B6(l,n){var e=l.__data__;return pE(n)?e[typeof n=="string"?"string":"hash"]:e.map}function gE(l){var n=B6(this,l).delete(l);return this.size-=n?1:0,n}function mE(l){return B6(this,l).get(l)}function vE(l){return B6(this,l).has(l)}function yE(l,n){var e=B6(this,l),t=e.size;return e.set(l,n),this.size+=e.size==t?0:1,this}function kl(l){var n=-1,e=l==null?0:l.length;for(this.clear();++n<e;){var t=l[n];this.set(t[0],t[1])}}kl.prototype.clear=hE;kl.prototype.delete=gE;kl.prototype.get=mE;kl.prototype.has=vE;kl.prototype.set=yE;var wE="Expected a function";function ru(l,n){if(typeof l!="function"||n!=null&&typeof n!="function")throw new TypeError(wE);var e=function(){var t=arguments,u=n?n.apply(this,t):t[0],r=e.cache;if(r.has(u))return r.get(u);var o=l.apply(this,t);return e.cache=r.set(u,o)||r,o};return e.cache=new(ru.Cache||kl),e}ru.Cache=kl;var SE=500;function xE(l){var n=ru(l,function(t){return e.size===SE&&e.clear(),t}),e=n.cache;return n}var TE=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,EE=/\\(\\)?/g,CE=xE(function(l){var n=[];return l.charCodeAt(0)===46&&n.push(""),l.replace(TE,function(e,t,u,r){n.push(u?r.replace(EE,"$1"):t||e)}),n}),bE=CE;function U6(l,n){for(var e=-1,t=l==null?0:l.length,u=Array(t);++e<t;)u[e]=n(l[e],e,l);return u}var OE=1/0,Fo=G3?G3.prototype:void 0,Lo=Fo?Fo.toString:void 0;function Td(l){if(typeof l=="string")return l;if(L2(l))return U6(l,Td)+"";if(D6(l))return Lo?Lo.call(l):"";var n=l+"";return n=="0"&&1/l==-OE?"-0":n}function d1(l){return l==null?"":Td(l)}function f1(l,n){return L2(l)?l:uu(l,n)?[l]:bE(d1(l))}var kE="[object Arguments]";function Do(l){return $3(l)&&Z3(l)==kE}var Ed=Object.prototype,PE=Ed.hasOwnProperty,AE=Ed.propertyIsEnumerable,_E=Do(function(){return arguments}())?Do:function(l){return $3(l)&&PE.call(l,"callee")&&!AE.call(l,"callee")},H6=_E,RE=9007199254740991,IE=/^(?:0|[1-9]\d*)$/;function z6(l,n){var e=typeof l;return n=n==null?RE:n,!!n&&(e=="number"||e!="symbol"&&IE.test(l))&&l>-1&&l%1==0&&l<n}var NE=9007199254740991;function ou(l){return typeof l=="number"&&l>-1&&l%1==0&&l<=NE}var ME=1/0;function d5(l){if(typeof l=="string"||D6(l))return l;var n=l+"";return n=="0"&&1/l==-ME?"-0":n}function FE(l,n,e){n=f1(n,l);for(var t=-1,u=n.length,r=!1;++t<u;){var o=d5(n[t]);if(!(r=l!=null&&e(l,o)))break;l=l[o]}return r||++t!=u?r:(u=l==null?0:l.length,!!u&&ou(u)&&z6(o,u)&&(L2(l)||H6(l)))}function Cd(l,n,e){switch(e.length){case 0:return l.call(n);case 1:return l.call(n,e[0]);case 2:return l.call(n,e[0],e[1]);case 3:return l.call(n,e[0],e[1],e[2])}return l.apply(n,e)}function LE(l){var n=l==null?0:l.length;return n?l[n-1]:void 0}function V6(l,n){n=f1(n,l);for(var e=0,t=n.length;l!=null&&e<t;)l=l[d5(n[e++])];return e&&e==t?l:void 0}function iu(l,n,e){var t=-1,u=l.length;n<0&&(n=-n>u?0:u+n),e=e>u?u:e,e<0&&(e+=u),u=n>e?0:e-n>>>0,n>>>=0;for(var r=Array(u);++t<u;)r[t]=l[t+n];return r}function DE(l,n){return n.length<2?l:V6(l,iu(n,0,-1))}function $E(l,n,e){n=f1(n,l),l=DE(l,n);var t=l==null?l:l[d5(LE(n))];return t==null?void 0:Cd(t,l,e)}function W6(l){return l}var $o=Math.max;function bd(l,n,e){return n=$o(n===void 0?l.length-1:n,0),function(){for(var t=arguments,u=-1,r=$o(t.length-n,0),o=Array(r);++u<r;)o[u]=t[n+u];u=-1;for(var i=Array(n+1);++u<n;)i[u]=t[u];return i[n]=e(o),Cd(l,this,i)}}function jE(l){return function(){return l}}var BE=function(){try{var l=Kn(Object,"defineProperty");return l({},"",{}),l}catch{}}(),z0=BE,UE=z0?function(l,n){return z0(l,"toString",{configurable:!0,enumerable:!1,value:jE(n),writable:!0})}:W6,HE=UE,zE=800,VE=16,WE=Date.now;function GE(l){var n=0,e=0;return function(){var t=WE(),u=VE-(t-e);if(e=t,u>0){if(++n>=zE)return arguments[0]}else n=0;return l.apply(void 0,arguments)}}var KE=GE(HE),Od=KE;function G6(l,n){return Od(bd(l,n,W6),l+"")}var qE=G6($E),l2=qE;function QE(l){if(l===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return l}function au(l){return l===void 0}var YE=/\s/;function XE(l){for(var n=l.length;n--&&YE.test(l.charAt(n)););return n}var JE=/^\s+/;function ZE(l){return l&&l.slice(0,XE(l)+1).replace(JE,"")}var jo=0/0,lC=/^[-+]0x[0-9a-f]+$/i,nC=/^0b[01]+$/i,eC=/^0o[0-7]+$/i,tC=parseInt;function kd(l){if(typeof l=="number")return l;if(D6(l))return jo;if(Xl(l)){var n=typeof l.valueOf=="function"?l.valueOf():l;l=Xl(n)?n+"":n}if(typeof l!="string")return l===0?l:+l;l=ZE(l);var e=nC.test(l);return e||eC.test(l)?tC(l.slice(2),e?2:8):lC.test(l)?jo:+l}var Bo=1/0,uC=17976931348623157e292;function Z9(l){if(!l)return l===0?l:0;if(l=kd(l),l===Bo||l===-Bo){var n=l<0?-1:1;return n*uC}return l===l?l:0}function su(l){var n=Z9(l),e=n%1;return n===n?e?n-e:n:0}function Pd(l,n){for(var e=-1,t=l==null?0:l.length,u=0,r=[];++e<t;){var o=l[e];n(o,e,l)&&(r[u++]=o)}return r}function rC(l){return function(n,e,t){for(var u=-1,r=Object(n),o=t(n),i=o.length;i--;){var a=o[l?i:++u];if(e(r[a],a,r)===!1)break}return n}}var oC=rC(),iC=oC;function aC(l,n){for(var e=-1,t=Array(l);++e<l;)t[e]=n(e);return t}function sC(){return!1}var Ad=typeof al=="object"&&al&&!al.nodeType&&al,Uo=Ad&&typeof sl=="object"&&sl&&!sl.nodeType&&sl,cC=Uo&&Uo.exports===Ad,Ho=cC?bl.Buffer:void 0,dC=Ho?Ho.isBuffer:void 0,fC=dC||sC,V0=fC,hC="[object Arguments]",pC="[object Array]",gC="[object Boolean]",mC="[object Date]",vC="[object Error]",yC="[object Function]",wC="[object Map]",SC="[object Number]",xC="[object Object]",TC="[object RegExp]",EC="[object Set]",CC="[object String]",bC="[object WeakMap]",OC="[object ArrayBuffer]",kC="[object DataView]",PC="[object Float32Array]",AC="[object Float64Array]",_C="[object Int8Array]",RC="[object Int16Array]",IC="[object Int32Array]",NC="[object Uint8Array]",MC="[object Uint8ClampedArray]",FC="[object Uint16Array]",LC="[object Uint32Array]",b2={};b2[PC]=b2[AC]=b2[_C]=b2[RC]=b2[IC]=b2[NC]=b2[MC]=b2[FC]=b2[LC]=!0;b2[hC]=b2[pC]=b2[OC]=b2[gC]=b2[kC]=b2[mC]=b2[vC]=b2[yC]=b2[wC]=b2[SC]=b2[xC]=b2[TC]=b2[EC]=b2[CC]=b2[bC]=!1;function DC(l){return $3(l)&&ou(l.length)&&!!b2[Z3(l)]}function _d(l){return function(n){return l(n)}}var Rd=typeof al=="object"&&al&&!al.nodeType&&al,de=Rd&&typeof sl=="object"&&sl&&!sl.nodeType&&sl,$C=de&&de.exports===Rd,F8=$C&&Sd.process,jC=function(){try{var l=de&&de.require&&de.require("util").types;return l||F8&&F8.binding&&F8.binding("util")}catch{}}(),zo=jC,Vo=zo&&zo.isTypedArray,BC=Vo?_d(Vo):DC,cu=BC,UC=Object.prototype,HC=UC.hasOwnProperty;function zC(l,n){var e=L2(l),t=!e&&H6(l),u=!e&&!t&&V0(l),r=!e&&!t&&!u&&cu(l),o=e||t||u||r,i=o?aC(l.length,String):[],a=i.length;for(var s in l)(n||HC.call(l,s))&&!(o&&(s=="length"||u&&(s=="offset"||s=="parent")||r&&(s=="buffer"||s=="byteLength"||s=="byteOffset")||z6(s,a)))&&i.push(s);return i}var VC=Object.prototype;function Id(l){var n=l&&l.constructor,e=typeof n=="function"&&n.prototype||VC;return l===e}function Nd(l,n){return function(e){return l(n(e))}}var WC=Nd(Object.keys,Object),GC=WC,KC=Object.prototype,qC=KC.hasOwnProperty;function du(l){if(!Id(l))return GC(l);var n=[];for(var e in Object(l))qC.call(l,e)&&e!="constructor"&&n.push(e);return n}function Pl(l){return l!=null&&ou(l.length)&&!L4(l)}function h1(l){return Pl(l)?zC(l):du(l)}function QC(l,n){return l&&iC(l,n,h1)}function YC(l,n){return function(e,t){if(e==null)return e;if(!Pl(e))return l(e,t);for(var u=e.length,r=n?u:-1,o=Object(e);(n?r--:++r<u)&&t(o[r],r,o)!==!1;);return e}}var XC=YC(QC),f5=XC;function JC(l,n){var e=[];return f5(l,function(t,u,r){n(t,u,r)&&e.push(t)}),e}function ZC(){this.__data__=new Ol,this.size=0}function lb(l){var n=this.__data__,e=n.delete(l);return this.size=n.size,e}function nb(l){return this.__data__.get(l)}function eb(l){return this.__data__.has(l)}var tb=200;function ub(l,n){var e=this.__data__;if(e instanceof Ol){var t=e.__data__;if(!Me||t.length<tb-1)return t.push([l,n]),this.size=++e.size,this;e=this.__data__=new kl(t)}return e.set(l,n),this.size=e.size,this}function pl(l){var n=this.__data__=new Ol(l);this.size=n.size}pl.prototype.clear=ZC;pl.prototype.delete=lb;pl.prototype.get=nb;pl.prototype.has=eb;pl.prototype.set=ub;var rb="__lodash_hash_undefined__";function ob(l){return this.__data__.set(l,rb),this}function ib(l){return this.__data__.has(l)}function D4(l){var n=-1,e=l==null?0:l.length;for(this.__data__=new kl;++n<e;)this.add(l[n])}D4.prototype.add=D4.prototype.push=ob;D4.prototype.has=ib;function Md(l,n){for(var e=-1,t=l==null?0:l.length;++e<t;)if(n(l[e],e,l))return!0;return!1}function fu(l,n){return l.has(n)}var ab=1,sb=2;function Fd(l,n,e,t,u,r){var o=e&ab,i=l.length,a=n.length;if(i!=a&&!(o&&a>i))return!1;var s=r.get(l),c=r.get(n);if(s&&c)return s==n&&c==l;var f=-1,d=!0,h=e&sb?new D4:void 0;for(r.set(l,n),r.set(n,l);++f<i;){var p=l[f],y=n[f];if(t)var m=o?t(y,p,f,n,l,r):t(p,y,f,l,n,r);if(m!==void 0){if(m)continue;d=!1;break}if(h){if(!Md(n,function(g,v){if(!fu(h,v)&&(p===g||u(p,g,e,t,r)))return h.push(v)})){d=!1;break}}else if(!(p===y||u(p,y,e,t,r))){d=!1;break}}return r.delete(l),r.delete(n),d}var cb=bl.Uint8Array,Wo=cb;function db(l){var n=-1,e=Array(l.size);return l.forEach(function(t,u){e[++n]=[u,t]}),e}function hu(l){var n=-1,e=Array(l.size);return l.forEach(function(t){e[++n]=t}),e}var fb=1,hb=2,pb="[object Boolean]",gb="[object Date]",mb="[object Error]",vb="[object Map]",yb="[object Number]",wb="[object RegExp]",Sb="[object Set]",xb="[object String]",Tb="[object Symbol]",Eb="[object ArrayBuffer]",Cb="[object DataView]",Go=G3?G3.prototype:void 0,L8=Go?Go.valueOf:void 0;function bb(l,n,e,t,u,r,o){switch(e){case Cb:if(l.byteLength!=n.byteLength||l.byteOffset!=n.byteOffset)return!1;l=l.buffer,n=n.buffer;case Eb:return!(l.byteLength!=n.byteLength||!r(new Wo(l),new Wo(n)));case pb:case gb:case yb:return $6(+l,+n);case mb:return l.name==n.name&&l.message==n.message;case wb:case xb:return l==n+"";case vb:var i=db;case Sb:var a=t&fb;if(i||(i=hu),l.size!=n.size&&!a)return!1;var s=o.get(l);if(s)return s==n;t|=hb,o.set(l,n);var c=Fd(i(l),i(n),t,u,r,o);return o.delete(l),c;case Tb:if(L8)return L8.call(l)==L8.call(n)}return!1}function Ld(l,n){for(var e=-1,t=n.length,u=l.length;++e<t;)l[u+e]=n[e];return l}function Ob(l,n,e){var t=n(l);return L2(l)?t:Ld(t,e(l))}function kb(){return[]}var Pb=Object.prototype,Ab=Pb.propertyIsEnumerable,Ko=Object.getOwnPropertySymbols,_b=Ko?function(l){return l==null?[]:(l=Object(l),Pd(Ko(l),function(n){return Ab.call(l,n)}))}:kb,Rb=_b;function qo(l){return Ob(l,h1,Rb)}var Ib=1,Nb=Object.prototype,Mb=Nb.hasOwnProperty;function Fb(l,n,e,t,u,r){var o=e&Ib,i=qo(l),a=i.length,s=qo(n),c=s.length;if(a!=c&&!o)return!1;for(var f=a;f--;){var d=i[f];if(!(o?d in n:Mb.call(n,d)))return!1}var h=r.get(l),p=r.get(n);if(h&&p)return h==n&&p==l;var y=!0;r.set(l,n),r.set(n,l);for(var m=o;++f<a;){d=i[f];var g=l[d],v=n[d];if(t)var w=o?t(v,g,d,n,l,r):t(g,v,d,l,n,r);if(!(w===void 0?g===v||u(g,v,e,t,r):w)){y=!1;break}m||(m=d=="constructor")}if(y&&!m){var S=l.constructor,I=n.constructor;S!=I&&"constructor"in l&&"constructor"in n&&!(typeof S=="function"&&S instanceof S&&typeof I=="function"&&I instanceof I)&&(y=!1)}return r.delete(l),r.delete(n),y}var Lb=Kn(bl,"DataView"),lt=Lb,Db=Kn(bl,"Promise"),nt=Db,$b=Kn(bl,"Set"),O4=$b,jb=Kn(bl,"WeakMap"),et=jb,Qo="[object Map]",Bb="[object Object]",Yo="[object Promise]",Xo="[object Set]",Jo="[object WeakMap]",Zo="[object DataView]",Ub=Gn(lt),Hb=Gn(Me),zb=Gn(nt),Vb=Gn(O4),Wb=Gn(et),vn=Z3;(lt&&vn(new lt(new ArrayBuffer(1)))!=Zo||Me&&vn(new Me)!=Qo||nt&&vn(nt.resolve())!=Yo||O4&&vn(new O4)!=Xo||et&&vn(new et)!=Jo)&&(vn=function(l){var n=Z3(l),e=n==Bb?l.constructor:void 0,t=e?Gn(e):"";if(t)switch(t){case Ub:return Zo;case Hb:return Qo;case zb:return Yo;case Vb:return Xo;case Wb:return Jo}return n});var W0=vn,Gb=1,li="[object Arguments]",ni="[object Array]",U1="[object Object]",Kb=Object.prototype,ei=Kb.hasOwnProperty;function qb(l,n,e,t,u,r){var o=L2(l),i=L2(n),a=o?ni:W0(l),s=i?ni:W0(n);a=a==li?U1:a,s=s==li?U1:s;var c=a==U1,f=s==U1,d=a==s;if(d&&V0(l)){if(!V0(n))return!1;o=!0,c=!1}if(d&&!c)return r||(r=new pl),o||cu(l)?Fd(l,n,e,t,u,r):bb(l,n,a,e,t,u,r);if(!(e&Gb)){var h=c&&ei.call(l,"__wrapped__"),p=f&&ei.call(n,"__wrapped__");if(h||p){var y=h?l.value():l,m=p?n.value():n;return r||(r=new pl),u(y,m,e,t,r)}}return d?(r||(r=new pl),Fb(l,n,e,t,u,r)):!1}function K6(l,n,e,t,u){return l===n?!0:l==null||n==null||!$3(l)&&!$3(n)?l!==l&&n!==n:qb(l,n,e,t,K6,u)}var Qb=1,Yb=2;function Xb(l,n,e,t){var u=e.length,r=u,o=!t;if(l==null)return!r;for(l=Object(l);u--;){var i=e[u];if(o&&i[2]?i[1]!==l[i[0]]:!(i[0]in l))return!1}for(;++u<r;){i=e[u];var a=i[0],s=l[a],c=i[1];if(o&&i[2]){if(s===void 0&&!(a in l))return!1}else{var f=new pl;if(t)var d=t(s,c,a,l,n,f);if(!(d===void 0?K6(c,s,Qb|Yb,t,f):d))return!1}}return!0}function Dd(l){return l===l&&!Xl(l)}function Jb(l){for(var n=h1(l),e=n.length;e--;){var t=n[e],u=l[t];n[e]=[t,u,Dd(u)]}return n}function $d(l,n){return function(e){return e==null?!1:e[l]===n&&(n!==void 0||l in Object(e))}}function Zb(l){var n=Jb(l);return n.length==1&&n[0][2]?$d(n[0][0],n[0][1]):function(e){return e===l||Xb(e,l,n)}}function gl(l,n,e){var t=l==null?void 0:V6(l,n);return t===void 0?e:t}function lO(l,n){return l!=null&&n in Object(l)}function jd(l,n){return l!=null&&FE(l,n,lO)}var nO=1,eO=2;function tO(l,n){return uu(l)&&Dd(n)?$d(d5(l),n):function(e){var t=gl(e,l);return t===void 0&&t===n?jd(e,l):K6(n,t,nO|eO)}}function Bd(l){return function(n){return n==null?void 0:n[l]}}function uO(l){return function(n){return V6(n,l)}}function rO(l){return uu(l)?Bd(d5(l)):uO(l)}function qn(l){return typeof l=="function"?l:l==null?W6:typeof l=="object"?L2(l)?tO(l[0],l[1]):Zb(l):rO(l)}function ti(l,n){var e=L2(l)?Pd:JC;return e(l,qn(n))}var oO="[object Map]",iO="[object Set]",aO=Object.prototype,sO=aO.hasOwnProperty;function V5(l){if(l==null)return!0;if(Pl(l)&&(L2(l)||typeof l=="string"||typeof l.splice=="function"||V0(l)||cu(l)||H6(l)))return!l.length;var n=W0(l);if(n==oO||n==iO)return!l.size;if(Id(l))return!du(l).length;for(var e in l)if(sO.call(l,e))return!1;return!0}function Ud(l,n,e,t){for(var u=l.length,r=e+(t?1:-1);t?r--:++r<u;)if(n(l[r],r,l))return r;return-1}function cO(l){return l!==l}function dO(l,n,e){for(var t=e-1,u=l.length;++t<u;)if(l[t]===n)return t;return-1}function Hd(l,n,e){return n===n?dO(l,n,e):Ud(l,cO,e)}function zd(l,n){var e=l==null?0:l.length;return!!e&&Hd(l,n,0)>-1}function Vd(l,n,e){for(var t=-1,u=l==null?0:l.length;++t<u;)if(e(n,l[t]))return!0;return!1}function G0(l){return $3(l)&&Pl(l)}function fO(l,n){for(var e=-1,t=l==null?0:l.length;++e<t&&n(l[e],e,l)!==!1;);return l}function hO(l){return typeof l=="function"?l:W6}function pO(l,n){var e=L2(l)?fO:f5;return e(l,hO(n))}var gO=function(n){return"default"+(n[0].toUpperCase()+n.slice(1))},mO=function(n,e,t,u){u===void 0&&(u=!1);var r=e[n];if(r!==void 0)return r;if(u){var o=e[gO(n)];if(o!==void 0)return o;if(t){var i=t[n];if(i!==void 0)return i}}if(n==="checked")return!1;if(n==="value")return e.multiple?[]:""},p1=function(l){w2(n,l);function n(){for(var e,t=arguments.length,u=new Array(t),r=0;r<t;r++)u[r]=arguments[r];e=l.call.apply(l,[this].concat(u))||this;var o=e.constructor,i=o.autoControlledProps,a=o.getAutoControlledStateFromProps,s=l2(QE(e),"getInitialAutoControlledState",e.props)||{},c=i.reduce(function(f,d){return f[d]=mO(d,e.props,s,!0),f},{});return e.state=H({},s,c,{autoControlledProps:i,getAutoControlledStateFromProps:a}),e}return n.getDerivedStateFromProps=function(t,u){var r=u.autoControlledProps,o=u.getAutoControlledStateFromProps,i=r.reduce(function(s,c){var f=!au(t[c]);return f&&(s[c]=t[c]),s},{});if(o){var a=o(t,H({},u,i),u);return H({},i,a)}return i},n.getAutoControlledStateFromProps=function(){return null},n}($.Component);function vO(l){return function(n,e,t){var u=Object(n);if(!Pl(n)){var r=qn(e);n=h1(n),e=function(i){return r(u[i],i,u)}}var o=l(n,e,t);return o>-1?u[r?n[o]:o]:void 0}}var yO=Math.max;function tt(l,n,e){var t=l==null?0:l.length;if(!t)return-1;var u=e==null?0:su(e);return u<0&&(u=yO(t+u,0)),Ud(l,qn(n),u)}var wO=vO(tt),Wd=wO;function SO(l,n){var e;return f5(l,function(t,u,r){return e=n(t,u,r),!e}),!!e}function Gd(l,n,e){if(!Xl(e))return!1;var t=typeof n;return(t=="number"?Pl(e)&&z6(n,e.length):t=="string"&&n in e)?$6(e[n],l):!1}function fe(l,n,e){var t=L2(l)?Md:SO;return e&&Gd(l,n,e)&&(n=void 0),t(l,qn(n))}var xO=function(n,e){return fe(W.exports.Children.toArray(n),{type:e})},f2=function(n){return n==null||Array.isArray(n)&&n.length===0},TO={1:"one",2:"two",3:"three",4:"four",5:"five",6:"six",7:"seven",8:"eight",9:"nine",10:"ten",11:"eleven",12:"twelve",13:"thirteen",14:"fourteen",15:"fifteen",16:"sixteen"};function ui(l){var n=typeof l;return n==="string"||n==="number"?TO[l]||l:""}var E=function(n,e){return n&&e},o3=function(n,e){return n&&n!==!0&&n+" "+e},M2=function(n,e){return n&&(n===!0?e:n+" "+e)},g1=function(n){return n==="justified"?"justified":o3(n,"aligned")},m1=function(n){return o3(n,"aligned")},Qn=function(n,e,t){if(e===void 0&&(e=""),t===void 0&&(t=!1),t&&n==="equal")return"equal width";var u=typeof n;return(u==="string"||u==="number")&&e?ui(n)+" "+e:ui(n)},EO=200;function Kd(l,n,e,t){var u=-1,r=zd,o=!0,i=l.length,a=[],s=n.length;if(!i)return a;e&&(n=U6(n,_d(e))),t?(r=Vd,o=!1):n.length>=EO&&(r=fu,o=!1,n=new D4(n));l:for(;++u<i;){var c=l[u],f=e==null?c:e(c);if(c=t||c!==0?c:0,o&&f===f){for(var d=s;d--;)if(n[d]===f)continue l;a.push(c)}else r(n,f,t)||a.push(c)}return a}var ri=G3?G3.isConcatSpreadable:void 0;function CO(l){return L2(l)||H6(l)||!!(ri&&l&&l[ri])}function q6(l,n,e,t,u){var r=-1,o=l.length;for(e||(e=CO),u||(u=[]);++r<o;){var i=l[r];n>0&&e(i)?n>1?q6(i,n-1,e,t,u):Ld(u,i):t||(u[u.length]=i)}return u}var bO=G6(function(l,n){return G0(l)?Kd(l,q6(n,1,G0,!0)):[]}),oi=bO;function OO(l,n,e){var t=l.length;return e=e===void 0?t:e,!n&&e>=t?l:iu(l,n,e)}function kO(l){return l.split("")}var PO="\\ud800-\\udfff",AO="\\u0300-\\u036f",_O="\\ufe20-\\ufe2f",RO="\\u20d0-\\u20ff",IO=AO+_O+RO,NO="\\ufe0e\\ufe0f",MO="\\u200d",FO=RegExp("["+MO+PO+IO+NO+"]");function pu(l){return FO.test(l)}var qd="\\ud800-\\udfff",LO="\\u0300-\\u036f",DO="\\ufe20-\\ufe2f",$O="\\u20d0-\\u20ff",jO=LO+DO+$O,BO="\\ufe0e\\ufe0f",UO="["+qd+"]",ut="["+jO+"]",rt="\\ud83c[\\udffb-\\udfff]",HO="(?:"+ut+"|"+rt+")",Qd="[^"+qd+"]",Yd="(?:\\ud83c[\\udde6-\\uddff]){2}",Xd="[\\ud800-\\udbff][\\udc00-\\udfff]",zO="\\u200d",Jd=HO+"?",Zd="["+BO+"]?",VO="(?:"+zO+"(?:"+[Qd,Yd,Xd].join("|")+")"+Zd+Jd+")*",WO=Zd+Jd+VO,GO="(?:"+[Qd+ut+"?",ut,Yd,Xd,UO].join("|")+")",KO=RegExp(rt+"(?="+rt+")|"+GO+WO,"g");function qO(l){return l.match(KO)||[]}function QO(l){return pu(l)?qO(l):kO(l)}function YO(l,n,e){n=="__proto__"&&z0?z0(l,n,{configurable:!0,enumerable:!0,value:e,writable:!0}):l[n]=e}var XO=Object.prototype,JO=XO.hasOwnProperty;function ZO(l,n,e){var t=l[n];(!(JO.call(l,n)&&$6(t,e))||e===void 0&&!(n in l))&&YO(l,n,e)}function lf(l,n,e,t){if(!Xl(l))return l;n=f1(n,l);for(var u=-1,r=n.length,o=r-1,i=l;i!=null&&++u<r;){var a=d5(n[u]),s=e;if(a==="__proto__"||a==="constructor"||a==="prototype")return l;if(u!=o){var c=i[a];s=t?t(c,a,i):void 0,s===void 0&&(s=Xl(c)?c:z6(n[u+1])?[]:{})}ZO(i,a,s),i=i[a]}return l}function lk(l,n,e){for(var t=-1,u=n.length,r={};++t<u;){var o=n[t],i=V6(l,o);e(i,o)&&lf(r,f1(o,l),i)}return r}function nk(l,n){return lk(l,n,function(e,t){return jd(l,t)})}function ek(l){var n=l==null?0:l.length;return n?q6(l,1):[]}function tk(l){return Od(bd(l,void 0,ek),l+"")}var uk=tk(function(l,n){return l==null?{}:nk(l,n)}),nf=uk,rk=Nd(Object.getPrototypeOf,Object),ok=rk,ik="[object Object]",ak=Function.prototype,sk=Object.prototype,ef=ak.toString,ck=sk.hasOwnProperty,dk=ef.call(Object);function tf(l){if(!$3(l)||Z3(l)!=ik)return!1;var n=ok(l);if(n===null)return!0;var e=ck.call(n,"constructor")&&n.constructor;return typeof e=="function"&&e instanceof e&&ef.call(e)==dk}function v2(l){return l==null}function fk(l,n){var e=-1,t=Pl(l)?Array(l.length):[];return f5(l,function(u,r,o){t[++e]=n(u,r,o)}),t}function D3(l,n){var e=L2(l)?U6:fk;return e(l,qn(n))}var gu={exports:{}},K0={},uf={exports:{}};/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/(function(l){(function(){var n=!!(typeof window!="undefined"&&window.document&&window.document.createElement),e={canUseDOM:n,canUseWorkers:typeof Worker!="undefined",canUseEventListeners:n&&!!(window.addEventListener||window.attachEvent),canUseViewport:n&&!!window.screen};l.exports?l.exports=e:window.ExecutionEnvironment=e})()})(uf);Object.defineProperty(K0,"__esModule",{value:!0});var ii=uf.exports,hk=W.exports;function rf(l){return(rf=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(l)}function v1(l,n){if(!(l instanceof n))throw new TypeError("Cannot call a class as a function")}function ai(l,n){for(var e=0;e<n.length;e++){var t=n[e];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(l,t.key,t)}}function y1(l,n,e){return n&&ai(l.prototype,n),e&&ai(l,e),l}function T3(l,n,e){return n in l?Object.defineProperty(l,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):l[n]=e,l}function pk(l,n){if(typeof n!="function"&&n!==null)throw new TypeError("Super expression must either be null or a function");l.prototype=Object.create(n&&n.prototype,{constructor:{value:l,writable:!0,configurable:!0}}),n&&af(l,n)}function of(l){return(of=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(l)}function af(l,n){return(af=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(l,n)}function gk(l){if(l===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return l}function mk(l,n){return!n||typeof n!="object"&&typeof n!="function"?gk(l):n}var sf=function(){function l(n){v1(this,l),T3(this,"handlers",void 0),this.handlers=n.slice(0)}return y1(l,[{key:"addHandlers",value:function(n){for(var e=this.handlers.slice(0),t=n.length,u=0;u<t;u+=1)e.push(n[u]);return new l(e)}},{key:"dispatchEvent",value:function(n,e){var t=this.handlers.length-1;if(e){for(var u=t;u>=0;u-=1)this.handlers[u].called||(this.handlers[u].called=!0,this.handlers[u](n));for(var r=t;r>=0;r-=1)this.handlers[r].called=!1}else(0,this.handlers[t])(n)}},{key:"hasHandlers",value:function(){return this.handlers.length>0}},{key:"removeHandlers",value:function(n){for(var e=[],t=this.handlers.length,u=0;u<t;u+=1){var r=this.handlers[u];n.indexOf(r)===-1&&e.push(r)}return new l(e)}}]),l}();function si(l){var n=new Map;return l.forEach(function(e,t){n.set(t,e)}),n}function ci(l){return Array.isArray(l)?l:[l]}var vk=function(l){return l!==null&&rf(l)==="object"&&l.hasOwnProperty("current")};function di(l){return l==="document"?document:l==="window"?window:vk(l)?l.current||document:l||document}var ot=function(){function l(n,e){v1(this,l),T3(this,"handlerSets",void 0),T3(this,"poolName",void 0),this.handlerSets=e,this.poolName=n}return y1(l,[{key:"addHandlers",value:function(n,e){var t=si(this.handlerSets);if(t.has(n)){var u=t.get(n);t.set(n,u.addHandlers(e))}else t.set(n,new sf(e));return new l(this.poolName,t)}},{key:"dispatchEvent",value:function(n,e){var t=this.handlerSets.get(n),u=this.poolName==="default";t&&t.dispatchEvent(e,u)}},{key:"hasHandlers",value:function(n){if(!n)return this.handlerSets.size>0;var e=this.handlerSets.get(n);return!!e&&e.hasHandlers()}},{key:"removeHandlers",value:function(n,e){var t=si(this.handlerSets);if(!t.has(n))return new l(this.poolName,t);var u=t.get(n).removeHandlers(e);return u.hasHandlers()?t.set(n,u):t.delete(n),new l(this.poolName,t)}}]),l}();T3(ot,"createByType",function(l,n,e){var t=new Map;return t.set(n,new sf(e)),new ot(l,t)});var yk=function(){function l(n){var e=this;v1(this,l),T3(this,"handlers",new Map),T3(this,"pools",new Map),T3(this,"target",void 0),T3(this,"createEmitter",function(t){return function(u){e.pools.forEach(function(r){r.dispatchEvent(t,u)})}}),this.target=n}return y1(l,[{key:"addHandlers",value:function(n,e,t){if(this.pools.has(n)){var u=this.pools.get(n);this.pools.set(n,u.addHandlers(e,t))}else this.pools.set(n,ot.createByType(n,e,t));this.handlers.has(e)||this.addTargetHandler(e)}},{key:"hasHandlers",value:function(){return this.handlers.size>0}},{key:"removeHandlers",value:function(n,e,t){if(this.pools.has(n)){var u=this.pools.get(n).removeHandlers(e,t);u.hasHandlers()?this.pools.set(n,u):this.pools.delete(n);var r=!1;this.pools.forEach(function(o){return r=r||o.hasHandlers(e)}),r||this.removeTargetHandler(e)}}},{key:"addTargetHandler",value:function(n){var e=this.createEmitter(n);this.handlers.set(n,e),this.target.addEventListener(n,e,!0)}},{key:"removeTargetHandler",value:function(n){this.handlers.has(n)&&(this.target.removeEventListener(n,this.handlers.get(n),!0),this.handlers.delete(n))}}]),l}(),wk=function(){function l(){var n=this;v1(this,l),T3(this,"targets",new Map),T3(this,"getTarget",function(e){var t=!(arguments.length>1&&arguments[1]!==void 0)||arguments[1],u=di(e);if(n.targets.has(u))return n.targets.get(u);if(!t)return null;var r=new yk(u);return n.targets.set(u,r),r}),T3(this,"removeTarget",function(e){n.targets.delete(di(e))})}return y1(l,[{key:"sub",value:function(n,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(ii.canUseDOM){var u=t.target,r=u===void 0?document:u,o=t.pool,i=o===void 0?"default":o;this.getTarget(r).addHandlers(i,n,ci(e))}}},{key:"unsub",value:function(n,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(ii.canUseDOM){var u=t.target,r=u===void 0?document:u,o=t.pool,i=o===void 0?"default":o,a=this.getTarget(r,!1);a&&(a.removeHandlers(i,n,ci(e)),a.hasHandlers()||this.removeTarget(r))}}}]),l}(),it=new wk,D8=function(l){function n(){return v1(this,n),mk(this,of(n).apply(this,arguments))}return pk(n,hk.PureComponent),y1(n,[{key:"componentDidMount",value:function(){this.subscribe(this.props)}},{key:"componentDidUpdate",value:function(e){this.unsubscribe(e),this.subscribe(this.props)}},{key:"componentWillUnmount",value:function(){this.unsubscribe(this.props)}},{key:"subscribe",value:function(e){var t=e.name,u=e.on,r=e.pool,o=e.target;it.sub(t,u,{pool:r,target:o})}},{key:"unsubscribe",value:function(e){var t=e.name,u=e.on,r=e.pool,o=e.target;it.unsub(t,u,{pool:r,target:o})}},{key:"render",value:function(){return null}}]),n}();T3(D8,"defaultProps",{pool:"default",target:"document"}),D8.propTypes={},K0.instance=it,K0.default=D8;var mu;mu=K0;gu.exports=mu.default;var Sk=gu.exports.instance=mu.instance,Rl=gu.exports,H1=Sk;function cf(){}var xk=1/0,Tk=O4&&1/hu(new O4([,-0]))[1]==xk?function(l){return new O4(l)}:cf,Ek=Tk,Ck=200;function df(l,n,e){var t=-1,u=zd,r=l.length,o=!0,i=[],a=i;if(e)o=!1,u=Vd;else if(r>=Ck){var s=n?null:Ek(l);if(s)return hu(s);o=!1,u=fu,a=new D4}else a=n?[]:i;l:for(;++t<r;){var c=l[t],f=n?n(c):c;if(c=e||c!==0?c:0,o&&f===f){for(var d=a.length;d--;)if(a[d]===f)continue l;n&&a.push(f),i.push(c)}else u(a,f,e)||(a!==i&&a.push(f),i.push(c))}return i}function bk(l){return l&&l.length?df(l):[]}var Ok="[object Number]";function kk(l){return typeof l=="number"||$3(l)&&Z3(l)==Ok}var Pk="[object String]";function vu(l){return typeof l=="string"||!L2(l)&&$3(l)&&Z3(l)==Pk}var Ak="[object Boolean]";function _k(l){return l===!0||l===!1||$3(l)&&Z3(l)==Ak}function ff(l){var n,e,t="";if(typeof l=="string"||typeof l=="number")t+=l;else if(typeof l=="object")if(Array.isArray(l))for(n=0;n<l.length;n++)l[n]&&(e=ff(l[n]))&&(t&&(t+=" "),t+=e);else for(n in l)l[n]&&(t&&(t+=" "),t+=n);return t}function u2(){for(var l,n,e=0,t="";e<arguments.length;)(l=arguments[e++])&&(n=ff(l))&&(t&&(t+=" "),t+=n);return t}function at(l,n,e,t){if(t===void 0&&(t={}),typeof l!="function"&&typeof l!="string")throw new Error("createShorthand() Component must be a string or function.");if(v2(e)||_k(e))return null;var u=vu(e),r=kk(e),o=L4(e),i=W.exports.isValidElement(e),a=tf(e),s=u||r||L2(e);if(!o&&!i&&!a&&!s)return null;var c=t,f=c.defaultProps,d=f===void 0?{}:f,h=i&&e.props||a&&e||s&&n(e),p=t,y=p.overrideProps,m=y===void 0?{}:y;m=L4(m)?m(H({},d,h)):m;var g=H({},d,h,m);if(d.className||m.className||h.className){var v=u2(d.className,m.className,h.className);g.className=bk(v.split(" ")).join(" ")}if((d.style||m.style||h.style)&&(g.style=H({},d.style,h.style,m.style)),v2(g.key)){var w=g.childKey,S=t,I=S.autoGenerateKey,C=I===void 0?!0:I;v2(w)?C&&(u||r)&&(g.key=e):(g.key=typeof w=="function"?w(g):w,delete g.childKey)}if(i)return W.exports.cloneElement(e,g);if(typeof g.children=="function")return g.children(l,H({},g,{children:void 0}));if(s||a)return W.exports.createElement(l,g);if(o)return e(l,g,g.children)}function T2(l,n){if(typeof l!="function"&&typeof l!="string")throw new Error("createShorthandFactory() Component must be a string or function.");return function(e,t){return at(l,n,e,t)}}var Rk=T2("input",function(l){return{type:l}}),st=T2("label",function(l){return{children:l}}),Ik=T2("p",function(l){return{children:l}}),Nk=function(n,e){var t=n.handledProps,u=t===void 0?[]:t;return Object.keys(e).reduce(function(r,o){return o==="childKey"||u.indexOf(o)===-1&&(r[o]=e[o]),r},{})},r2=Nk;function i2(l,n,e){var t=l.defaultProps,u=t===void 0?{}:t;if(n.as&&n.as!==u.as)return n.as;if(e){var r=e();if(r)return r}return n.href?"a":u.as||"div"}function Mk(l,n){return U6(n,function(e){return l[e]})}function Fk(l){return l==null?[]:Mk(l,h1(l))}var Lk=Math.max;function h5(l,n,e,t){l=Pl(l)?l:Fk(l),e=e&&!t?su(e):0;var u=l.length;return e<0&&(e=Lk(u+e,0)),vu(l)?e<=u&&l.indexOf(n,e)>-1:!!u&&Hd(l,n,e)>-1}var hf=["selected","defaultValue","defaultChecked","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","checked","disabled","form","id","inputMode","lang","list","max","maxLength","min","minLength","multiple","name","pattern","placeholder","readOnly","required","step","title","type","value"],Dk=["onKeyDown","onKeyPress","onKeyUp","onFocus","onBlur","onChange","onInput","onClick","onContextMenu","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onSelect","onTouchCancel","onTouchEnd","onTouchMove","onTouchStart"],$k=[].concat(hf,Dk),jk=["alt","height","src","srcSet","width","loading"],yu=function(n,e){e===void 0&&(e={});var t=e,u=t.htmlProps,r=u===void 0?$k:u,o=t.includeAria,i=o===void 0?!0:o,a={},s={};return pO(n,function(c,f){var d=i&&(/^aria-.*$/.test(f)||f==="role"),h=h5(r,f)||d?a:s;h[f]=c}),[a,s]},Bk=typeof document=="object"&&document!==null,Uk=typeof window=="object"&&window!==null&&window.self===window,Hk=function l(){return v2(l.override)?Bk&&Uk:l.override},_n=Hk,zk=Math.max,Vk=Math.min;function Wk(l,n,e){return l>=Vk(n,e)&&l<zk(n,e)}function fi(l,n,e){return n=Z9(n),e===void 0?(e=n,n=0):e=Z9(e),l=kd(l),Wk(l,n,e)}function Gk(l){return l&&l.length?l[0]:void 0}var Kk=function(n,e){if(fe([e,n],v2))return!1;if(e.target&&(l2(e.target,"setAttribute","data-suir-click-target",!0),document.querySelector("[data-suir-click-target=true]")))return l2(e.target,"removeAttribute","data-suir-click-target"),n.contains(e.target);var t=e.clientX,u=e.clientY;if(fe([t,u],v2))return!1;var r=n.getClientRects();if(!n.offsetWidth||!n.offsetHeight||!r||!r.length)return!1;var o=Gk(r),i=o.top,a=o.bottom,s=o.left,c=o.right;return fe([i,a,s,c],v2)?!1:fi(u,i,a+.001)&&fi(t,s,c+.001)},Rn=Kk;function qk(l,n){return K6(l,n)}var Qk=_n()?$.useLayoutEffect:$.useEffect,hi=Qk,Yk=/\s+/;function Xk(l){var n=[];return l?(l.forEach(function(e){if(typeof e.current=="string"){var t=e.current.split(Yk);t.forEach(function(u){n.push(u)})}}),n.filter(function(e,t,u){return e.length>0&&u.indexOf(e)===t})):[]}function Jk(l,n){return[n.filter(function(e){return l.indexOf(e)===-1}),l.filter(function(e){return n.indexOf(e)===-1})]}var pi=new Map,$8=function(n,e){var t=Xk(e),u=Jk(pi.get(n)||[],t),r=u[0],o=u[1];n&&(r.forEach(function(i){return n.classList.add(i)}),o.forEach(function(i){return n.classList.remove(i)})),pi.set(n,t)},Zk=function(){var n=this;this.add=function(e,t){if(n.nodes.has(e)){var u=n.nodes.get(e);u.add(t);return}var r=new Set;r.add(t),n.nodes.set(e,r)},this.del=function(e,t){if(!!n.nodes.has(e)){var u=n.nodes.get(e);if(u.size===1){n.nodes.delete(e);return}u.delete(t)}},this.emit=function(e,t){t(e,n.nodes.get(e))},this.nodes=new Map},M5=new Zk;function lP(l,n){var e=$.useRef(),t=$.useRef(!1);hi(function(){if(e.current=n,t.current){var u=Io(l)?l.current:l;M5.emit(u,$8)}t.current=!0},[n]),hi(function(){var u=Io(l)?l.current:l;return M5.add(u,e),M5.emit(u,$8),function(){M5.del(u,e),M5.emit(u,$8)}},[l])}var nP=G6(function(l,n){return G0(l)?Kd(l,n):[]}),eP=nP;function $4(l){var n=l.children,e=l.className,t=l.content,u=l.size,r=u2(u,"icons",e),o=r2($4,l),i=i2($4,l);return $.createElement(i,H({},o,{className:r}),f2(n)?t:n)}$4.handledProps=["as","children","className","content","size"];$4.propTypes={};$4.defaultProps={as:"i"};var Q6={exports:{}},w1={};/** @license React v17.0.2
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var tP=W.exports,pf=60103;w1.Fragment=60107;if(typeof Symbol=="function"&&Symbol.for){var gi=Symbol.for;pf=gi("react.element"),w1.Fragment=gi("react.fragment")}var uP=tP.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,rP=Object.prototype.hasOwnProperty,oP={key:!0,ref:!0,__self:!0,__source:!0};function gf(l,n,e){var t,u={},r=null,o=null;e!==void 0&&(r=""+e),n.key!==void 0&&(r=""+n.key),n.ref!==void 0&&(o=n.ref);for(t in n)rP.call(n,t)&&!oP.hasOwnProperty(t)&&(u[t]=n[t]);if(l&&l.defaultProps)for(t in n=l.defaultProps,n)u[t]===void 0&&(u[t]=n[t]);return{$$typeof:pf,type:l,key:r,ref:o,props:u,_owner:uP.current}}w1.jsx=gf;w1.jsxs=gf;Q6.exports=w1;const R=Q6.exports.jsx,t2=Q6.exports.jsxs,Y6=Q6.exports.Fragment;var Dn=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleClick=function(i){var a=t.props.disabled;if(a){i.preventDefault();return}l2(t.props,"onClick",i,t.props)},t}var e=n.prototype;return e.getIconAriaOptions=function(){var u={},r=this.props,o=r["aria-label"],i=r["aria-hidden"];return v2(o)?u["aria-hidden"]="true":u["aria-label"]=o,v2(i)||(u["aria-hidden"]=i),u},e.render=function(){var u=this.props,r=u.bordered,o=u.circular,i=u.className,a=u.color,s=u.corner,c=u.disabled,f=u.fitted,d=u.flipped,h=u.inverted,p=u.link,y=u.loading,m=u.name,g=u.rotated,v=u.size,w=u2(a,m,v,E(r,"bordered"),E(o,"circular"),E(c,"disabled"),E(f,"fitted"),E(h,"inverted"),E(p,"link"),E(y,"loading"),M2(s,"corner"),o3(d,"flipped"),o3(g,"rotated"),"icon",i),S=r2(n,this.props),I=i2(n,this.props),C=this.getIconAriaOptions();return R(I,{...S,...C,className:w,onClick:this.handleClick})},n}(W.exports.PureComponent);Dn.handledProps=["aria-hidden","aria-label","as","bordered","circular","className","color","corner","disabled","fitted","flipped","inverted","link","loading","name","rotated","size"];Dn.propTypes={};Dn.defaultProps={as:"i"};Dn.Group=$4;Dn.create=T2(Dn,function(l){return{name:l}});var W2=Dn,mi=function(n){return n!==null&&!Array.isArray(n)&&typeof n=="object"},q0={3:"Cancel",6:"Help",8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",28:"Convert",29:"NonConvert",30:"Accept",31:"ModeChange",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",41:"Select",42:"Print",43:"Execute",44:"PrintScreen",45:"Insert",46:"Delete",48:["0",")"],49:["1","!"],50:["2","@"],51:["3","#"],52:["4","$"],53:["5","%"],54:["6","^"],55:["7","&"],56:["8","*"],57:["9","("],91:"OS",93:"ContextMenu",144:"NumLock",145:"ScrollLock",181:"VolumeMute",182:"VolumeDown",183:"VolumeUp",186:[";",":"],187:["=","+"],188:[",","<"],189:["-","_"],190:[".",">"],191:["/","?"],192:["`","~"],219:["[","{"],220:["\\","|"],221:["]","}"],222:["'",'"'],224:"Meta",225:"AltGraph",246:"Attn",247:"CrSel",248:"ExSel",249:"EraseEof",250:"Play",251:"ZoomOut"};for(var z1=0;z1<24;z1+=1)q0[112+z1]="F"+(z1+1);for(var j8=0;j8<26;j8+=1){var B8=j8+65;q0[B8]=[String.fromCharCode(B8+32),String.fromCharCode(B8)]}var Q={codes:q0,getCode:function(n){return mi(n)?n.keyCode||n.which||this[n.key]:this[n]},getKey:function(n){var e=mi(n);if(e&&n.key)return n.key;var t=q0[e?n.keyCode||n.which:n];return Array.isArray(t)&&(e?t=t[n.shiftKey?1:0]:t=t[0]),t},Cancel:3,Help:6,Backspace:8,Tab:9,Clear:12,Enter:13,Shift:16,Control:17,Alt:18,Pause:19,CapsLock:20,Escape:27,Convert:28,NonConvert:29,Accept:30,ModeChange:31," ":32,PageUp:33,PageDown:34,End:35,Home:36,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,Select:41,Print:42,Execute:43,PrintScreen:44,Insert:45,Delete:46,0:48,")":48,1:49,"!":49,2:50,"@":50,3:51,"#":51,4:52,$:52,5:53,"%":53,6:54,"^":54,7:55,"&":55,8:56,"*":56,9:57,"(":57,a:65,A:65,b:66,B:66,c:67,C:67,d:68,D:68,e:69,E:69,f:70,F:70,g:71,G:71,h:72,H:72,i:73,I:73,j:74,J:74,k:75,K:75,l:76,L:76,m:77,M:77,n:78,N:78,o:79,O:79,p:80,P:80,q:81,Q:81,r:82,R:82,s:83,S:83,t:84,T:84,u:85,U:85,v:86,V:86,w:87,W:87,x:88,X:88,y:89,Y:89,z:90,Z:90,OS:91,ContextMenu:93,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,F13:124,F14:125,F15:126,F16:127,F17:128,F18:129,F19:130,F20:131,F21:132,F22:133,F23:134,F24:135,NumLock:144,ScrollLock:145,VolumeMute:181,VolumeDown:182,VolumeUp:183,";":186,":":186,"=":187,"+":187,",":188,"<":188,"-":189,_:189,".":190,">":190,"/":191,"?":191,"`":192,"~":192,"[":219,"{":219,"\\":220,"|":220,"]":221,"}":221,"'":222,'"':222,Meta:224,AltGraph:225,Attn:246,CrSel:247,ExSel:248,EraseEof:249,Play:250,ZoomOut:251};Q.Spacebar=Q[" "];Q.Digit0=Q[0];Q.Digit1=Q[1];Q.Digit2=Q[2];Q.Digit3=Q[3];Q.Digit4=Q[4];Q.Digit5=Q[5];Q.Digit6=Q[6];Q.Digit7=Q[7];Q.Digit8=Q[8];Q.Digit9=Q[9];Q.Tilde=Q["~"];Q.GraveAccent=Q["`"];Q.ExclamationPoint=Q["!"];Q.AtSign=Q["@"];Q.PoundSign=Q["#"];Q.PercentSign=Q["%"];Q.Caret=Q["^"];Q.Ampersand=Q["&"];Q.PlusSign=Q["+"];Q.MinusSign=Q["-"];Q.EqualsSign=Q["="];Q.DivisionSign=Q["/"];Q.MultiplicationSign=Q["*"];Q.Comma=Q[","];Q.Decimal=Q["."];Q.Colon=Q[":"];Q.Semicolon=Q[";"];Q.Pipe=Q["|"];Q.BackSlash=Q["\\"];Q.QuestionMark=Q["?"];Q.SingleQuote=Q["'"];Q.DoubleQuote=Q['"'];Q.LeftCurlyBrace=Q["{"];Q.RightCurlyBrace=Q["}"];Q.LeftParenthesis=Q["("];Q.RightParenthesis=Q[")"];Q.LeftAngleBracket=Q["<"];Q.RightAngleBracket=Q[">"];Q.LeftSquareBracket=Q["["];Q.RightSquareBracket=Q["]"];var j2=Q,wu=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleRef=function(i){z3(t.props.innerRef,i)},t}var e=n.prototype;return e.componentDidMount=function(){l2(this.props,"onMount",null,this.props)},e.componentWillUnmount=function(){l2(this.props,"onUnmount",null,this.props)},e.render=function(){if(!_n())return null;var u=this.props,r=u.children,o=u.mountNode,i=o===void 0?document.body:o;return he.exports.createPortal(R(d3,{innerRef:this.handleRef,children:r}),i)},n}(W.exports.Component);wu.handledProps=["children","innerRef","mountNode","onMount","onUnmount"];wu.propTypes={};var mf=wu,p5=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.contentRef=$.createRef(),t.triggerRef=$.createRef(),t.latestDocumentMouseDownEvent=null,t.handleDocumentMouseDown=function(i){t.latestDocumentMouseDownEvent=i},t.handleDocumentClick=function(i){var a=t.props.closeOnDocumentClick,s=t.latestDocumentMouseDownEvent;t.latestDocumentMouseDownEvent=null,!(!t.contentRef.current||Rn(t.triggerRef.current,i)||s&&Rn(t.contentRef.current,s)||Rn(t.contentRef.current,i))&&a&&t.close(i)},t.handleEscape=function(i){!t.props.closeOnEscape||j2.getCode(i)===j2.Escape&&t.close(i)},t.handlePortalMouseLeave=function(i){var a=t.props,s=a.closeOnPortalMouseLeave,c=a.mouseLeaveDelay;!s||i.target===t.contentRef.current&&(t.mouseLeaveTimer=t.closeWithTimeout(i,c))},t.handlePortalMouseEnter=function(){var i=t.props.closeOnPortalMouseLeave;!i||clearTimeout(t.mouseLeaveTimer)},t.handleTriggerBlur=function(i){for(var a=t.props,s=a.trigger,c=a.closeOnTriggerBlur,f=arguments.length,d=new Array(f>1?f-1:0),h=1;h<f;h++)d[h-1]=arguments[h];l2.apply(void 0,[s,"props.onBlur",i].concat(d));var p=i.relatedTarget||document.activeElement,y=l2(t.contentRef.current,"contains",p);!c||y||t.close(i)},t.handleTriggerClick=function(i){for(var a=t.props,s=a.trigger,c=a.closeOnTriggerClick,f=a.openOnTriggerClick,d=t.state.open,h=arguments.length,p=new Array(h>1?h-1:0),y=1;y<h;y++)p[y-1]=arguments[y];l2.apply(void 0,[s,"props.onClick",i].concat(p)),d&&c?t.close(i):!d&&f&&t.open(i)},t.handleTriggerFocus=function(i){for(var a=t.props,s=a.trigger,c=a.openOnTriggerFocus,f=arguments.length,d=new Array(f>1?f-1:0),h=1;h<f;h++)d[h-1]=arguments[h];l2.apply(void 0,[s,"props.onFocus",i].concat(d)),c&&t.open(i)},t.handleTriggerMouseLeave=function(i){clearTimeout(t.mouseEnterTimer);for(var a=t.props,s=a.trigger,c=a.closeOnTriggerMouseLeave,f=a.mouseLeaveDelay,d=arguments.length,h=new Array(d>1?d-1:0),p=1;p<d;p++)h[p-1]=arguments[p];l2.apply(void 0,[s,"props.onMouseLeave",i].concat(h)),c&&(t.mouseLeaveTimer=t.closeWithTimeout(i,f))},t.handleTriggerMouseEnter=function(i){clearTimeout(t.mouseLeaveTimer);for(var a=t.props,s=a.trigger,c=a.mouseEnterDelay,f=a.openOnTriggerMouseEnter,d=arguments.length,h=new Array(d>1?d-1:0),p=1;p<d;p++)h[p-1]=arguments[p];l2.apply(void 0,[s,"props.onMouseEnter",i].concat(h)),f&&(t.mouseEnterTimer=t.openWithTimeout(i,c))},t.open=function(i){l2(t.props,"onOpen",i,H({},t.props,{open:!0})),t.setState({open:!0})},t.openWithTimeout=function(i,a){var s=H({},i);return setTimeout(function(){return t.open(s)},a||0)},t.close=function(i){l2(t.props,"onClose",i,H({},t.props,{open:!1})),t.setState({open:!1})},t.closeWithTimeout=function(i,a){var s=H({},i);return setTimeout(function(){return t.close(s)},a||0)},t.handleMount=function(){l2(t.props,"onMount",null,t.props)},t.handleUnmount=function(){l2(t.props,"onUnmount",null,t.props)},t.handleTriggerRef=function(i){t.triggerRef.current=i,z3(t.props.triggerRef,i)},t}var e=n.prototype;return e.componentWillUnmount=function(){clearTimeout(this.mouseEnterTimer),clearTimeout(this.mouseLeaveTimer)},e.render=function(){var u=this.props,r=u.children,o=u.eventPool,i=u.mountNode,a=u.trigger,s=this.state.open;return $.createElement($.Fragment,null,s&&$.createElement($.Fragment,null,$.createElement(mf,{innerRef:this.contentRef,mountNode:i,onMount:this.handleMount,onUnmount:this.handleUnmount},r),$.createElement(Rl,{name:"mouseleave",on:this.handlePortalMouseLeave,pool:o,target:this.contentRef}),$.createElement(Rl,{name:"mouseenter",on:this.handlePortalMouseEnter,pool:o,target:this.contentRef}),$.createElement(Rl,{name:"mousedown",on:this.handleDocumentMouseDown,pool:o}),$.createElement(Rl,{name:"click",on:this.handleDocumentClick,pool:o}),$.createElement(Rl,{name:"keydown",on:this.handleEscape,pool:o})),a&&$.createElement(d3,{innerRef:this.handleTriggerRef},$.cloneElement(a,{onBlur:this.handleTriggerBlur,onClick:this.handleTriggerClick,onFocus:this.handleTriggerFocus,onMouseLeave:this.handleTriggerMouseLeave,onMouseEnter:this.handleTriggerMouseEnter})))},n}(p1);p5.handledProps=["children","closeOnDocumentClick","closeOnEscape","closeOnPortalMouseLeave","closeOnTriggerBlur","closeOnTriggerClick","closeOnTriggerMouseLeave","defaultOpen","eventPool","mountNode","mouseEnterDelay","mouseLeaveDelay","onClose","onMount","onOpen","onUnmount","open","openOnTriggerClick","openOnTriggerFocus","openOnTriggerMouseEnter","trigger","triggerRef"];p5.propTypes={};p5.defaultProps={closeOnDocumentClick:!0,closeOnEscape:!0,eventPool:"default",openOnTriggerClick:!0};p5.autoControlledProps=["open"];p5.Inner=mf;var ct=p5;function Fe(l){var n=l.blurring,e=l.className,t=l.children,u=l.content,r=l.dimmed,o=u2(E(n,"blurring"),E(r,"dimmed"),"dimmable",e),i=r2(Fe,l),a=i2(Fe,l);return $.createElement(a,H({},i,{className:o}),f2(t)?u:t)}Fe.handledProps=["as","blurring","children","className","content","dimmed"];Fe.propTypes={};var Le=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.containerRef=W.exports.createRef(),t.contentRef=W.exports.createRef(),t.handleClick=function(i){var a=t.contentRef.current;l2(t.props,"onClick",i,t.props),!(a&&a!==i.target&&Rn(a,i))&&l2(t.props,"onClickOutside",i,t.props)},t}var e=n.prototype;return e.componentDidMount=function(){var u=this.props.active;this.toggleStyles(u)},e.componentDidUpdate=function(u){var r=this.props.active,o=u.active;o!==r&&this.toggleStyles(r)},e.toggleStyles=function(u){var r=this.containerRef.current;!r||!r.style||(u?r.style.setProperty("display","flex","important"):r.style.removeProperty("display"))},e.render=function(){var u=this.props,r=u.active,o=u.children,i=u.className,a=u.content,s=u.disabled,c=u.inverted,f=u.page,d=u.simple,h=u.verticalAlign,p=u2("ui",E(r,"active transition visible"),E(s,"disabled"),E(c,"inverted"),E(f,"page"),E(d,"simple"),m1(h),"dimmer",i),y=r2(n,this.props),m=i2(n,this.props),g=f2(o)?a:o;return R(d3,{innerRef:this.containerRef,children:R(m,{...y,className:p,onClick:this.handleClick,children:g&&R("div",{className:"content",ref:this.contentRef,children:g})})})},n}(W.exports.Component);Le.handledProps=["active","as","children","className","content","disabled","inverted","onClick","onClickOutside","page","simple","verticalAlign"];Le.propTypes={};var $n=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handlePortalMount=function(){!_n()||(document.body.classList.add("dimmed"),document.body.classList.add("dimmable"))},t.handlePortalUnmount=function(){!_n()||(document.body.classList.remove("dimmed"),document.body.classList.remove("dimmable"))},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.active,o=u.page,i=r2(n,this.props);return o?R(ct,{closeOnEscape:!1,closeOnDocumentClick:!1,onMount:this.handlePortalMount,onUnmount:this.handlePortalUnmount,open:r,openOnTriggerClick:!1,children:R(Le,{...i,active:r,page:o})}):R(Le,{...i,active:r,page:o})},n}(W.exports.Component);$n.handledProps=["active","page"];$n.propTypes={};$n.Dimmable=Fe;$n.Inner=Le;$n.create=T2($n,function(l){return{content:l}});function De(l){var n=l.children,e=l.className,t=l.content,u=l.size,r=u2("ui",u,e,"images"),o=r2(De,l),i=i2(De,l);return $.createElement(i,H({},o,{className:r}),f2(n)?t:n)}De.handledProps=["as","children","className","content","size"];De.propTypes={};function f3(l){var n=l.avatar,e=l.bordered,t=l.centered,u=l.children,r=l.circular,o=l.className,i=l.content,a=l.dimmer,s=l.disabled,c=l.floated,f=l.fluid,d=l.hidden,h=l.href,p=l.inline,y=l.label,m=l.rounded,g=l.size,v=l.spaced,w=l.verticalAlign,S=l.wrapped,I=l.ui,C=u2(E(I,"ui"),g,E(n,"avatar"),E(e,"bordered"),E(r,"circular"),E(t,"centered"),E(s,"disabled"),E(f,"fluid"),E(d,"hidden"),E(p,"inline"),E(m,"rounded"),M2(v,"spaced"),o3(c,"floated"),m1(w),"image",o),D=r2(f3,l),F=yu(D,{htmlProps:jk}),j=F[0],K=F[1],X=i2(f3,l,function(){if(!v2(a)||!v2(y)||!v2(S)||!f2(u))return"div"});return f2(u)?f2(i)?X==="img"?$.createElement(X,H({},K,j,{className:C})):$.createElement(X,H({},K,{className:C,href:h}),$n.create(a,{autoGenerateKey:!1}),A3.create(y,{autoGenerateKey:!1}),$.createElement("img",j)):$.createElement(X,H({},D,{className:C}),i):$.createElement(X,H({},D,{className:C}),u)}f3.handledProps=["as","avatar","bordered","centered","children","circular","className","content","dimmer","disabled","floated","fluid","hidden","href","inline","label","rounded","size","spaced","ui","verticalAlign","wrapped"];f3.Group=De;f3.propTypes={};f3.defaultProps={as:"img",ui:!0};f3.create=T2(f3,function(l){return{src:l}});function Jl(l){var n=l.children,e=l.className,t=l.content,u=u2("detail",e),r=r2(Jl,l),o=i2(Jl,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}Jl.handledProps=["as","children","className","content"];Jl.propTypes={};Jl.create=T2(Jl,function(l){return{content:l}});function $e(l){var n=l.children,e=l.circular,t=l.className,u=l.color,r=l.content,o=l.size,i=l.tag,a=u2("ui",u,o,E(e,"circular"),E(i,"tag"),"labels",t),s=r2($e,l),c=i2($e,l);return $.createElement(c,H({},s,{className:a}),f2(n)?r:n)}$e.handledProps=["as","children","circular","className","color","content","size","tag"];$e.propTypes={};var A3=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleClick=function(i){var a=t.props.onClick;a&&a(i,t.props)},t.handleIconOverrides=function(i){return{onClick:function(s){l2(i,"onClick",s),l2(t.props,"onRemove",s,t.props)}}},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.active,o=u.attached,i=u.basic,a=u.children,s=u.circular,c=u.className,f=u.color,d=u.content,h=u.corner,p=u.detail,y=u.empty,m=u.floating,g=u.horizontal,v=u.icon,w=u.image,S=u.onRemove,I=u.pointing,C=u.prompt,D=u.removeIcon,F=u.ribbon,j=u.size,K=u.tag,X=I===!0&&"pointing"||(I==="left"||I==="right")&&I+" pointing"||(I==="above"||I==="below")&&"pointing "+I,n2=u2("ui",f,X,j,E(r,"active"),E(i,"basic"),E(s,"circular"),E(y,"empty"),E(m,"floating"),E(g,"horizontal"),E(w===!0,"image"),E(C,"prompt"),E(K,"tag"),M2(h,"corner"),M2(F,"ribbon"),o3(o,"attached"),"label",c),Z=r2(n,this.props),b=i2(n,this.props);if(!f2(a))return R(b,{...Z,className:n2,onClick:this.handleClick,children:a});var L=au(D)?"delete":D;return t2(b,{className:n2,onClick:this.handleClick,...Z,children:[W2.create(v,{autoGenerateKey:!1}),typeof w!="boolean"&&f3.create(w,{autoGenerateKey:!1}),d,Jl.create(p,{autoGenerateKey:!1}),S&&W2.create(L,{autoGenerateKey:!1,overrideProps:this.handleIconOverrides})]})},n}(W.exports.Component);A3.handledProps=["active","as","attached","basic","children","circular","className","color","content","corner","detail","empty","floating","horizontal","icon","image","onClick","onRemove","pointing","prompt","removeIcon","ribbon","size","tag"];A3.propTypes={};A3.Detail=Jl;A3.Group=$e;A3.create=T2(A3,function(l){return{content:l}});function je(l){var n=l.children,e=l.className,t=l.content,u=l.hidden,r=l.visible,o=u2(E(r,"visible"),E(u,"hidden"),"content",e),i=r2(je,l),a=i2(je,l);return $.createElement(a,H({},i,{className:o}),f2(n)?t:n)}je.handledProps=["as","children","className","content","hidden","visible"];je.propTypes={};function Be(l){var n=l.attached,e=l.basic,t=l.buttons,u=l.children,r=l.className,o=l.color,i=l.compact,a=l.content,s=l.floated,c=l.fluid,f=l.icon,d=l.inverted,h=l.labeled,p=l.negative,y=l.positive,m=l.primary,g=l.secondary,v=l.size,w=l.toggle,S=l.vertical,I=l.widths,C=u2("ui",o,v,E(e,"basic"),E(i,"compact"),E(c,"fluid"),E(f,"icon"),E(d,"inverted"),E(h,"labeled"),E(p,"negative"),E(y,"positive"),E(m,"primary"),E(g,"secondary"),E(w,"toggle"),E(S,"vertical"),M2(n,"attached"),o3(s,"floated"),Qn(I),"buttons",r),D=r2(Be,l),F=i2(Be,l);return v2(t)?$.createElement(F,H({},D,{className:C}),f2(u)?a:u):$.createElement(F,H({},D,{className:C}),D3(t,function(j){return K3.create(j)}))}Be.handledProps=["as","attached","basic","buttons","children","className","color","compact","content","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths"];Be.propTypes={};function Ue(l){var n=l.className,e=l.text,t=u2("or",n),u=r2(Ue,l),r=i2(Ue,l);return $.createElement(r,H({},u,{className:t,"data-text":e}))}Ue.handledProps=["as","className","text"];Ue.propTypes={};var yl=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.ref=W.exports.createRef(),t.computeElementType=function(){var i=t.props,a=i.attached,s=i.label;if(!v2(a)||!v2(s))return"div"},t.computeTabIndex=function(i){var a=t.props,s=a.disabled,c=a.tabIndex;if(!v2(c))return c;if(s)return-1;if(i==="div")return 0},t.focus=function(){return l2(t.ref.current,"focus")},t.handleClick=function(i){var a=t.props.disabled;if(a){i.preventDefault();return}l2(t.props,"onClick",i,t.props)},t.hasIconClass=function(){var i=t.props,a=i.labelPosition,s=i.children,c=i.content,f=i.icon;return f===!0?!0:f&&(a||f2(s)&&v2(c))},t}var e=n.prototype;return e.computeButtonAriaRole=function(u){var r=this.props.role;if(!v2(r))return r;if(u!=="button")return"button"},e.render=function(){var u=this.props,r=u.active,o=u.animated,i=u.attached,a=u.basic,s=u.children,c=u.circular,f=u.className,d=u.color,h=u.compact,p=u.content,y=u.disabled,m=u.floated,g=u.fluid,v=u.icon,w=u.inverted,S=u.label,I=u.labelPosition,C=u.loading,D=u.negative,F=u.positive,j=u.primary,K=u.secondary,X=u.size,n2=u.toggle,Z=u2(d,X,E(r,"active"),E(a,"basic"),E(c,"circular"),E(h,"compact"),E(g,"fluid"),E(this.hasIconClass(),"icon"),E(w,"inverted"),E(C,"loading"),E(D,"negative"),E(F,"positive"),E(j,"primary"),E(K,"secondary"),E(n2,"toggle"),M2(o,"animated"),M2(i,"attached")),b=u2(M2(I||!!S,"labeled")),L=u2(E(y,"disabled"),o3(m,"floated")),Y=r2(n,this.props),c2=i2(n,this.props,this.computeElementType),a2=this.computeTabIndex(c2);if(!v2(S)){var _=u2("ui",Z,"button",f),A=u2("ui",b,"button",f,L),x=A3.create(S,{defaultProps:{basic:!0,pointing:I==="left"?"right":"left"},autoGenerateKey:!1});return t2(c2,{...Y,className:A,onClick:this.handleClick,children:[I==="left"&&x,R(d3,{innerRef:this.ref,children:t2("button",{className:_,"aria-pressed":n2?!!r:void 0,disabled:y,tabIndex:a2,children:[W2.create(v,{autoGenerateKey:!1})," ",p]})}),(I==="right"||!I)&&x]})}var N=u2("ui",Z,L,b,"button",f),B=!f2(s),U=this.computeButtonAriaRole(c2);return R(d3,{innerRef:this.ref,children:t2(c2,{...Y,className:N,"aria-pressed":n2?!!r:void 0,disabled:y&&c2==="button"||void 0,onClick:this.handleClick,role:U,tabIndex:a2,children:[B&&s,!B&&W2.create(v,{autoGenerateKey:!1}),!B&&p]})})},n}(W.exports.Component);yl.handledProps=["active","animated","as","attached","basic","children","circular","className","color","compact","content","disabled","floated","fluid","icon","inverted","label","labelPosition","loading","negative","onClick","positive","primary","role","secondary","size","tabIndex","toggle"];yl.propTypes={};yl.defaultProps={as:"button"};yl.Content=je;yl.Group=Be;yl.Or=Ue;yl.create=T2(yl,function(l){return{content:l}});var K3=yl;function vf(l,n,e,t){var u=-1,r=l==null?0:l.length;for(t&&r&&(e=l[++u]);++u<r;)e=n(e,l[u],u,l);return e}function iP(l,n,e,t,u){return u(l,function(r,o,i){e=t?(t=!1,r):n(e,r,o,i)}),e}function yf(l,n,e){var t=L2(l)?vf:iP,u=arguments.length<3;return t(l,qn(n),e,u,f5)}var f0=function(n,e,t,u){var r=t?t.call(u,n,e):void 0;if(r!==void 0)return!!r;if(n===e)return!0;if(typeof n!="object"||!n||typeof e!="object"||!e)return!1;var o=Object.keys(n),i=Object.keys(e);if(o.length!==i.length)return!1;for(var a=Object.prototype.hasOwnProperty.bind(e),s=0;s<o.length;s++){var c=o[s];if(!a(c))return!1;var f=n[c],d=e[c];if(r=t?t.call(u,f,d,c):void 0,r===!1||r===void 0&&f!==d)return!1}return!0},j4=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleButtonOverrides=function(i){return{onClick:function(s,c){l2(i,"onClick",s,c),l2(t.props,"onActionClick",s,c)}}},t}var e=n.prototype;return e.render=function(){var u=this,r=this.props,o=r.actions,i=r.children,a=r.className,s=r.content,c=u2("actions",a),f=r2(n,this.props),d=i2(n,this.props);return f2(i)?f2(s)?R(d,{...f,className:c,children:D3(o,function(h){return K3.create(h,{overrideProps:u.handleButtonOverrides})})}):R(d,{...f,className:c,children:s}):R(d,{...f,className:c,children:i})},n}(W.exports.Component);j4.handledProps=["actions","as","children","className","content","onActionClick"];j4.propTypes={};j4.create=T2(j4,function(l){return{actions:l}});function Zl(l){var n=l.children,e=l.className,t=l.content,u=l.image,r=l.scrolling,o=u2(e,E(u,"image"),E(r,"scrolling"),"content"),i=r2(Zl,l),a=i2(Zl,l);return $.createElement(a,H({},i,{className:o}),f2(n)?t:n)}Zl.handledProps=["as","children","className","content","image","scrolling"];Zl.propTypes={};Zl.create=T2(Zl,function(l){return{content:l}});function He(l){var n=l.children,e=l.className,t=l.content,u=u2("description",e),r=r2(He,l),o=i2(He,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}He.handledProps=["as","children","className","content"];He.propTypes={};function ln(l){var n=l.blurring,e=l.children,t=l.className,u=l.centered,r=l.content,o=l.inverted,i=l.mountNode,a=l.scrolling,s=$.useRef(),c=u2("ui",E(o,"inverted"),E(!u,"top aligned"),"page modals dimmer transition visible active",t),f=u2("dimmable dimmed",E(n,"blurring"),E(a,"scrolling")),d=r2(ln,l),h=i2(ln,l);return lP(i,f),$.useEffect(function(){s.current&&s.current.style&&s.current.style.setProperty("display","flex","important")},[]),$.createElement(d3,{innerRef:s},$.createElement(h,H({},d,{className:c}),f2(e)?r:e))}ln.handledProps=["as","blurring","centered","children","className","content","inverted","mountNode","scrolling"];ln.propTypes={};ln.create=T2(ln,function(l){return{content:l}});function nn(l){var n=l.children,e=l.className,t=l.content,u=u2("header",e),r=r2(nn,l),o=i2(nn,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}nn.handledProps=["as","children","className","content"];nn.propTypes={};nn.create=T2(nn,function(l){return{content:l}});var vi=0,aP=50,sP=function(n){var e=n.height+vi,t=n.height+vi,u=window.innerHeight,r=u/2,o=-(t/2),i=aP,a=r+o;return a+e+i<u},cP=function(n,e,t){var u=e&&n?-(t.height/2):0,r=-(t.width/2);return{marginLeft:r,marginTop:u}},dP=function(){return!window.ActiveXObject&&"ActiveXObject"in window},ll=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.legacy=_n()&&dP(),t.ref=W.exports.createRef(),t.dimmerRef=W.exports.createRef(),t.latestDocumentMouseDownEvent=null,t.getMountNode=function(){return _n()?t.props.mountNode||document.body:null},t.handleActionsOverrides=function(i){return{onActionClick:function(s,c){l2(i,"onActionClick",s,c),l2(t.props,"onActionClick",s,t.props),t.handleClose(s)}}},t.handleClose=function(i){l2(t.props,"onClose",i,H({},t.props,{open:!1})),t.setState({open:!1})},t.handleDocumentMouseDown=function(i){t.latestDocumentMouseDownEvent=i},t.handleDocumentClick=function(i){var a=t.props.closeOnDimmerClick,s=t.latestDocumentMouseDownEvent;t.latestDocumentMouseDownEvent=null,!(!a||Rn(t.ref.current,s)||Rn(t.ref.current,i))&&(l2(t.props,"onClose",i,H({},t.props,{open:!1})),t.setState({open:!1}))},t.handleIconOverrides=function(i){return{onClick:function(s){l2(i,"onClick",s),t.handleClose(s)}}},t.handleOpen=function(i){l2(t.props,"onOpen",i,H({},t.props,{open:!0})),t.setState({open:!0})},t.handlePortalMount=function(i){var a=t.props.eventPool;t.setState({scrolling:!1}),t.setPositionAndClassNames(),H1.sub("mousedown",t.handleDocumentMouseDown,{pool:a,target:t.dimmerRef.current}),H1.sub("click",t.handleDocumentClick,{pool:a,target:t.dimmerRef.current}),l2(t.props,"onMount",i,t.props)},t.handlePortalUnmount=function(i){var a=t.props.eventPool;cancelAnimationFrame(t.animationRequestId),H1.unsub("mousedown",t.handleDocumentMouseDown,{pool:a,target:t.dimmerRef.current}),H1.unsub("click",t.handleDocumentClick,{pool:a,target:t.dimmerRef.current}),l2(t.props,"onUnmount",i,t.props)},t.setPositionAndClassNames=function(){var i=t.props.centered,a,s={};if(t.ref.current){var c=t.ref.current.getBoundingClientRect(),f=sP(c);a=!f;var d=t.legacy?cP(f,i,c):{};f0(t.state.legacyStyles,d)||(s.legacyStyles=d),t.state.scrolling!==a&&(s.scrolling=a)}V5(s)||t.setState(s),t.animationRequestId=requestAnimationFrame(t.setPositionAndClassNames)},t.renderContent=function(i){var a=t.props,s=a.actions,c=a.basic,f=a.children,d=a.className,h=a.closeIcon,p=a.content,y=a.header,m=a.size,g=a.style,v=t.state,w=v.legacyStyles,S=v.scrolling,I=u2("ui",m,E(c,"basic"),E(t.legacy,"legacy"),E(S,"scrolling"),"modal transition visible active",d),C=i2(n,t.props),D=h===!0?"close":h,F=W2.create(D,{overrideProps:t.handleIconOverrides});return R(d3,{innerRef:t.ref,children:t2(C,{...i,className:I,style:H({},w,g),children:[F,f2(f)?t2(Y6,{children:[nn.create(y,{autoGenerateKey:!1}),Zl.create(p,{autoGenerateKey:!1}),j4.create(s,{overrideProps:t.handleActionsOverrides})]}):f]})})},t}var e=n.prototype;return e.componentWillUnmount=function(){this.handlePortalUnmount()},e.render=function(){var u=this.props,r=u.centered,o=u.closeOnDocumentClick,i=u.dimmer,a=u.eventPool,s=u.trigger,c=this.state,f=c.open,d=c.scrolling,h=this.getMountNode();if(!_n())return W.exports.isValidElement(s)?s:null;var p=r2(n,this.props),y=ct.handledProps,m=yf(p,function(v,w,S){return h5(y,S)||(v[S]=w),v},{}),g=nf(p,y);return R(ct,{closeOnDocumentClick:o,...g,trigger:s,eventPool:a,mountNode:h,open:f,onClose:this.handleClose,onMount:this.handlePortalMount,onOpen:this.handleOpen,onUnmount:this.handlePortalUnmount,children:R(d3,{innerRef:this.dimmerRef,children:ln.create(tf(i)?i:{},{autoGenerateKey:!1,defaultProps:{blurring:i==="blurring",inverted:i==="inverted"},overrideProps:{children:this.renderContent(m),centered:r,mountNode:h,scrolling:d}})})})},n}(p1);ll.handledProps=["actions","as","basic","centered","children","className","closeIcon","closeOnDimmerClick","closeOnDocumentClick","content","defaultOpen","dimmer","eventPool","header","mountNode","onActionClick","onClose","onMount","onOpen","onUnmount","open","size","style","trigger"];ll.propTypes={};ll.defaultProps={centered:!0,dimmer:!0,closeOnDimmerClick:!0,closeOnDocumentClick:!1,eventPool:"Modal"};ll.autoControlledProps=["open"];ll.Actions=j4;ll.Content=Zl;ll.Description=He;ll.Dimmer=ln;ll.Header=nn;var rl=ll;function ze(l){var n=l.children,e=l.className,t=l.content,u=u2("header",e),r=r2(ze,l),o=i2(ze,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}ze.handledProps=["as","children","className","content"];ze.propTypes={};function fP(l){return function(n){return l==null?void 0:l[n]}}var hP={\u00C0:"A",\u00C1:"A",\u00C2:"A",\u00C3:"A",\u00C4:"A",\u00C5:"A",\u00E0:"a",\u00E1:"a",\u00E2:"a",\u00E3:"a",\u00E4:"a",\u00E5:"a",\u00C7:"C",\u00E7:"c",\u00D0:"D",\u00F0:"d",\u00C8:"E",\u00C9:"E",\u00CA:"E",\u00CB:"E",\u00E8:"e",\u00E9:"e",\u00EA:"e",\u00EB:"e",\u00CC:"I",\u00CD:"I",\u00CE:"I",\u00CF:"I",\u00EC:"i",\u00ED:"i",\u00EE:"i",\u00EF:"i",\u00D1:"N",\u00F1:"n",\u00D2:"O",\u00D3:"O",\u00D4:"O",\u00D5:"O",\u00D6:"O",\u00D8:"O",\u00F2:"o",\u00F3:"o",\u00F4:"o",\u00F5:"o",\u00F6:"o",\u00F8:"o",\u00D9:"U",\u00DA:"U",\u00DB:"U",\u00DC:"U",\u00F9:"u",\u00FA:"u",\u00FB:"u",\u00FC:"u",\u00DD:"Y",\u00FD:"y",\u00FF:"y",\u00C6:"Ae",\u00E6:"ae",\u00DE:"Th",\u00FE:"th",\u00DF:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010A:"C",\u010C:"C",\u0107:"c",\u0109:"c",\u010B:"c",\u010D:"c",\u010E:"D",\u0110:"D",\u010F:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011A:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011B:"e",\u011C:"G",\u011E:"G",\u0120:"G",\u0122:"G",\u011D:"g",\u011F:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012A:"I",\u012C:"I",\u012E:"I",\u0130:"I",\u0129:"i",\u012B:"i",\u012D:"i",\u012F:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013B:"L",\u013D:"L",\u013F:"L",\u0141:"L",\u013A:"l",\u013C:"l",\u013E:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014A:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014B:"n",\u014C:"O",\u014E:"O",\u0150:"O",\u014D:"o",\u014F:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015A:"S",\u015C:"S",\u015E:"S",\u0160:"S",\u015B:"s",\u015D:"s",\u015F:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016A:"U",\u016C:"U",\u016E:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016B:"u",\u016D:"u",\u016F:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017B:"Z",\u017D:"Z",\u017A:"z",\u017C:"z",\u017E:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017F:"s"},pP=fP(hP),gP=pP,mP=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,vP="\\u0300-\\u036f",yP="\\ufe20-\\ufe2f",wP="\\u20d0-\\u20ff",SP=vP+yP+wP,xP="["+SP+"]",TP=RegExp(xP,"g");function dt(l){return l=d1(l),l&&l.replace(mP,gP).replace(TP,"")}var EP=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;function CP(l){return l.match(EP)||[]}var bP=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;function OP(l){return bP.test(l)}var wf="\\ud800-\\udfff",kP="\\u0300-\\u036f",PP="\\ufe20-\\ufe2f",AP="\\u20d0-\\u20ff",_P=kP+PP+AP,Sf="\\u2700-\\u27bf",xf="a-z\\xdf-\\xf6\\xf8-\\xff",RP="\\xac\\xb1\\xd7\\xf7",IP="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",NP="\\u2000-\\u206f",MP=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Tf="A-Z\\xc0-\\xd6\\xd8-\\xde",FP="\\ufe0e\\ufe0f",Ef=RP+IP+NP+MP,Cf="['\u2019]",yi="["+Ef+"]",LP="["+_P+"]",bf="\\d+",DP="["+Sf+"]",Of="["+xf+"]",kf="[^"+wf+Ef+bf+Sf+xf+Tf+"]",$P="\\ud83c[\\udffb-\\udfff]",jP="(?:"+LP+"|"+$P+")",BP="[^"+wf+"]",Pf="(?:\\ud83c[\\udde6-\\uddff]){2}",Af="[\\ud800-\\udbff][\\udc00-\\udfff]",u4="["+Tf+"]",UP="\\u200d",wi="(?:"+Of+"|"+kf+")",HP="(?:"+u4+"|"+kf+")",Si="(?:"+Cf+"(?:d|ll|m|re|s|t|ve))?",xi="(?:"+Cf+"(?:D|LL|M|RE|S|T|VE))?",_f=jP+"?",Rf="["+FP+"]?",zP="(?:"+UP+"(?:"+[BP,Pf,Af].join("|")+")"+Rf+_f+")*",VP="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",WP="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",GP=Rf+_f+zP,KP="(?:"+[DP,Pf,Af].join("|")+")"+GP,qP=RegExp([u4+"?"+Of+"+"+Si+"(?="+[yi,u4,"$"].join("|")+")",HP+"+"+xi+"(?="+[yi,u4+wi,"$"].join("|")+")",u4+"?"+wi+"+"+Si,u4+"+"+xi,WP,VP,bf,KP].join("|"),"g");function QP(l){return l.match(qP)||[]}function YP(l,n,e){return l=d1(l),n=e?void 0:n,n===void 0?OP(l)?QP(l):CP(l):l.match(n)||[]}var XP="['\u2019]",JP=RegExp(XP,"g");function ZP(l){return function(n){return vf(YP(dt(n).replace(JP,"")),l,"")}}function lA(l){return function(n){n=d1(n);var e=pu(n)?QO(n):void 0,t=e?e[0]:n.charAt(0),u=e?OO(e,1).join(""):n.slice(1);return t[l]()+u}}var nA=lA("toUpperCase"),eA=nA,tA=ZP(function(l,n,e){return l+(e?" ":"")+eA(n)}),uA=tA,B4=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleClick=function(i){var a=t.props.disabled;a||l2(t.props,"onClick",i,t.props)},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.active,o=u.children,i=u.className,a=u.color,s=u.content,c=u.disabled,f=u.fitted,d=u.header,h=u.icon,p=u.link,y=u.name,m=u.onClick,g=u.position,v=u2(a,g,E(r,"active"),E(c,"disabled"),E(h===!0||h&&!(y||s),"icon"),E(d,"header"),E(p,"link"),M2(f,"fitted"),"item",i),w=i2(n,this.props,function(){if(m)return"a"}),S=r2(n,this.props);return f2(o)?t2(w,{...S,className:v,onClick:this.handleClick,children:[W2.create(h,{autoGenerateKey:!1}),f2(s)?uA(y):s]}):R(w,{...S,className:v,onClick:this.handleClick,children:o})},n}(W.exports.Component);B4.handledProps=["active","as","children","className","color","content","disabled","fitted","header","icon","index","link","name","onClick","position"];B4.propTypes={};B4.create=T2(B4,function(l){return{content:l,name:l}});function Ve(l){var n=l.children,e=l.className,t=l.content,u=l.position,r=u2(u,"menu",e),o=r2(Ve,l),i=i2(Ve,l);return $.createElement(i,H({},o,{className:r}),f2(n)?t:n)}Ve.handledProps=["as","children","className","content","position"];Ve.propTypes={};var wl=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleItemOverrides=function(i){return{onClick:function(s,c){var f=c.index;t.setState({activeIndex:f}),l2(i,"onClick",s,c),l2(t.props,"onItemClick",s,c)}}},t}var e=n.prototype;return e.renderItems=function(){var u=this,r=this.props.items,o=this.state.activeIndex;return D3(r,function(i,a){return B4.create(i,{defaultProps:{active:parseInt(o,10)===a,index:a},overrideProps:u.handleItemOverrides})})},e.render=function(){var u=this.props,r=u.attached,o=u.borderless,i=u.children,a=u.className,s=u.color,c=u.compact,f=u.fixed,d=u.floated,h=u.fluid,p=u.icon,y=u.inverted,m=u.pagination,g=u.pointing,v=u.secondary,w=u.size,S=u.stackable,I=u.tabular,C=u.text,D=u.vertical,F=u.widths,j=u2("ui",s,w,E(o,"borderless"),E(c,"compact"),E(h,"fluid"),E(y,"inverted"),E(m,"pagination"),E(g,"pointing"),E(v,"secondary"),E(S,"stackable"),E(C,"text"),E(D,"vertical"),M2(r,"attached"),M2(d,"floated"),M2(p,"icon"),M2(I,"tabular"),o3(f,"fixed"),Qn(F,"item"),a,"menu"),K=r2(n,this.props),X=i2(n,this.props);return $.createElement(X,H({},K,{className:j}),f2(i)?this.renderItems():i)},n}(p1);wl.handledProps=["activeIndex","as","attached","borderless","children","className","color","compact","defaultActiveIndex","fixed","floated","fluid","icon","inverted","items","onItemClick","pagination","pointing","secondary","size","stackable","tabular","text","vertical","widths"];wl.propTypes={};wl.autoControlledProps=["activeIndex"];wl.Header=ze;wl.Item=B4;wl.Menu=Ve;wl.create=T2(wl,function(l){return{items:l}});var l4=wl;function rA(l,n,e){return l==null?l:lf(l,n,e)}var Yn=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.inputRef=W.exports.createRef(),t.labelRef=W.exports.createRef(),t.canToggle=function(){var i=t.props,a=i.disabled,s=i.radio,c=i.readOnly,f=t.state.checked;return!a&&!c&&!(s&&f)},t.computeTabIndex=function(){var i=t.props,a=i.disabled,s=i.tabIndex;return v2(s)?a?-1:0:s},t.handleClick=function(i){var a=t.props.id,s=t.state,c=s.checked,f=s.indeterminate,d=l2(t.inputRef.current,"contains",i.target),h=l2(t.labelRef.current,"contains",i.target),p=!h&&!d,y=!v2(a),m=h&&y;m||l2(t.props,"onClick",i,H({},t.props,{checked:!c,indeterminate:!!f})),t.isClickFromMouse&&(t.isClickFromMouse=!1,h&&!y&&t.handleChange(i),p&&t.handleChange(i),h&&y&&i.stopPropagation())},t.handleChange=function(i){var a=t.state.checked;!t.canToggle()||(l2(t.props,"onChange",i,H({},t.props,{checked:!a,indeterminate:!1})),t.setState({checked:!a,indeterminate:!1}))},t.handleMouseDown=function(i){var a=t.state,s=a.checked,c=a.indeterminate;l2(t.props,"onMouseDown",i,H({},t.props,{checked:!!s,indeterminate:!!c})),i.defaultPrevented||l2(t.inputRef.current,"focus"),i.preventDefault()},t.handleMouseUp=function(i){var a=t.state,s=a.checked,c=a.indeterminate;t.isClickFromMouse=!0,l2(t.props,"onMouseUp",i,H({},t.props,{checked:!!s,indeterminate:!!c}))},t.setIndeterminate=function(){var i=t.state.indeterminate;rA(t.inputRef,"current.indeterminate",!!i)},t}var e=n.prototype;return e.componentDidMount=function(){this.setIndeterminate()},e.componentDidUpdate=function(){this.setIndeterminate()},e.render=function(){var u=this.props,r=u.className,o=u.disabled,i=u.label,a=u.id,s=u.name,c=u.radio,f=u.readOnly,d=u.slider,h=u.toggle,p=u.type,y=u.value,m=this.state,g=m.checked,v=m.indeterminate,w=u2("ui",E(g,"checked"),E(o,"disabled"),E(v,"indeterminate"),E(v2(i),"fitted"),E(c,"radio"),E(f,"read-only"),E(d,"slider"),E(h,"toggle"),"checkbox",r),S=r2(n,this.props),I=i2(n,this.props),C=yu(S,{htmlProps:hf}),D=C[0],F=C[1],j=st(i,{defaultProps:{htmlFor:a},autoGenerateKey:!1})||R("label",{htmlFor:a});return t2(I,{...F,className:w,onClick:this.handleClick,onChange:this.handleChange,onMouseDown:this.handleMouseDown,onMouseUp:this.handleMouseUp,children:[R(d3,{innerRef:this.inputRef,children:R("input",{...D,checked:g,className:"hidden",disabled:o,id:a,name:s,readOnly:!0,tabIndex:this.computeTabIndex(),type:p,value:y})}),R(d3,{innerRef:this.labelRef,children:j})]})},n}(p1);Yn.handledProps=["as","checked","className","defaultChecked","defaultIndeterminate","disabled","fitted","id","indeterminate","label","name","onChange","onClick","onMouseDown","onMouseUp","radio","readOnly","slider","tabIndex","toggle","type","value"];Yn.propTypes={};Yn.defaultProps={type:"checkbox"};Yn.autoControlledProps=["checked","indeterminate"];function g5(l){var n=l.slider,e=l.toggle,t=l.type,u=r2(g5,l),r=!(n||e)||void 0;return $.createElement(Yn,H({},u,{type:t,radio:r,slider:n,toggle:e}))}g5.handledProps=["slider","toggle","type"];g5.propTypes={};g5.defaultProps={type:"radio"};function oA(l){for(var n=-1,e=l==null?0:l.length,t=0,u=[];++n<e;){var r=l[n];r&&(u[t++]=r)}return u}function iA(l,n){for(var e=-1,t=l==null?0:l.length;++e<t;)if(!n(l[e],e,l))return!1;return!0}function aA(l,n){var e=!0;return f5(l,function(t,u,r){return e=!!n(t,u,r),e}),e}function sA(l,n,e){var t=L2(l)?iA:aA;return e&&Gd(l,n,e)&&(n=void 0),t(l,qn(n))}function cA(l,n,e){var t=l==null?0:l.length;return t?(n=e||n===void 0?1:su(n),n=t-n,iu(l,0,n<0?0:n)):[]}var dA=Bd("length"),fA=dA,If="\\ud800-\\udfff",hA="\\u0300-\\u036f",pA="\\ufe20-\\ufe2f",gA="\\u20d0-\\u20ff",mA=hA+pA+gA,vA="\\ufe0e\\ufe0f",yA="["+If+"]",ft="["+mA+"]",ht="\\ud83c[\\udffb-\\udfff]",wA="(?:"+ft+"|"+ht+")",Nf="[^"+If+"]",Mf="(?:\\ud83c[\\udde6-\\uddff]){2}",Ff="[\\ud800-\\udbff][\\udc00-\\udfff]",SA="\\u200d",Lf=wA+"?",Df="["+vA+"]?",xA="(?:"+SA+"(?:"+[Nf,Mf,Ff].join("|")+")"+Df+Lf+")*",TA=Df+Lf+xA,EA="(?:"+[Nf+ft+"?",ft,Mf,Ff,yA].join("|")+")",Ti=RegExp(ht+"(?="+ht+")|"+EA+TA,"g");function CA(l){for(var n=Ti.lastIndex=0;Ti.test(l);)++n;return n}function bA(l){return pu(l)?CA(l):fA(l)}var OA="[object Map]",kA="[object Set]";function PA(l){if(l==null)return 0;if(Pl(l))return vu(l)?bA(l):l.length;var n=W0(l);return n==OA||n==kA?l.size:du(l).length}var AA=G6(function(l){return df(q6(l,1,G0,!0))}),Ei=AA,U4=function(l){w2(n,l);function n(){return l.apply(this,arguments)||this}var e=n.prototype;return e.render=function(){var u=this.props,r=u.className,o=u.name,i=u2(o,"flag",r),a=r2(n,this.props),s=i2(n,this.props);return R(s,{...a,className:i})},n}(W.exports.PureComponent);U4.handledProps=["as","className","name"];U4.propTypes={};U4.defaultProps={as:"i"};U4.create=T2(U4,function(l){return{name:l}});var $f=U4;function We(l){var n=l.className,e=u2("divider",n),t=r2(We,l),u=i2(We,l);return $.createElement(u,H({},t,{className:e}))}We.handledProps=["as","className"];We.propTypes={};var Ge=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleClick=function(i){l2(t.props,"onClick",i,t.props)},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.active,o=u.children,i=u.className,a=u.content,s=u.disabled,c=u.description,f=u.flag,d=u.icon,h=u.image,p=u.label,y=u.selected,m=u.text,g=u2(E(r,"active"),E(s,"disabled"),E(y,"selected"),"item",i),v=v2(d)?xO(o,"DropdownMenu")&&"dropdown":d,w=r2(n,this.props),S=i2(n,this.props),I={role:"option","aria-disabled":s,"aria-checked":r,"aria-selected":y};if(!f2(o))return R(S,{...w,...I,className:g,onClick:this.handleClick,children:o});var C=$f.create(f,{autoGenerateKey:!1}),D=W2.create(v,{autoGenerateKey:!1}),F=f3.create(h,{autoGenerateKey:!1}),j=A3.create(p,{autoGenerateKey:!1}),K=at("span",function(n2){return{children:n2}},c,{defaultProps:{className:"description"},autoGenerateKey:!1}),X=at("span",function(n2){return{children:n2}},f2(a)?m:a,{defaultProps:{className:"text"},autoGenerateKey:!1});return t2(S,{...w,...I,className:g,onClick:this.handleClick,children:[F,D,C,j,K,X]})},n}(W.exports.Component);Ge.handledProps=["active","as","children","className","content","description","disabled","flag","icon","image","label","onClick","selected","text","value"];Ge.propTypes={};Ge.create=T2(Ge,function(l){return l});var jf=Ge;function en(l){var n=l.children,e=l.className,t=l.content,u=l.icon,r=u2("header",e),o=r2(en,l),i=i2(en,l);return f2(n)?$.createElement(i,H({},o,{className:r}),W2.create(u,{autoGenerateKey:!1}),t):$.createElement(i,H({},o,{className:r}),n)}en.handledProps=["as","children","className","content","icon"];en.propTypes={};en.create=T2(en,function(l){return{content:l}});function H4(l){var n=l.children,e=l.className,t=l.content,u=l.direction,r=l.open,o=l.scrolling,i=u2(u,E(r,"visible"),E(o,"scrolling"),"menu transition",e),a=r2(H4,l),s=i2(H4,l);return $.createElement(s,H({},a,{className:i}),f2(n)?t:n)}H4.handledProps=["as","children","className","content","direction","open","scrolling"];H4.propTypes={};var z4=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleChange=function(i){var a=gl(i,"target.value");l2(t.props,"onChange",i,H({},t.props,{value:a}))},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.autoComplete,o=u.className,i=u.tabIndex,a=u.type,s=u.value,c=u2("search",o),f=r2(n,this.props);return R("input",{...f,"aria-autocomplete":"list",autoComplete:r,className:c,onChange:this.handleChange,tabIndex:i,type:a,value:s})},n}(W.exports.Component);z4.handledProps=["as","autoComplete","className","tabIndex","type","value"];z4.propTypes={};z4.defaultProps={autoComplete:"off",type:"text"};z4.create=T2(z4,function(l){return{type:l}});var Bf=z4;function tn(l){var n=l.children,e=l.className,t=l.content,u=u2("divider",e),r=r2(tn,l),o=i2(tn,l);return $.createElement(o,H({"aria-atomic":!0,"aria-live":"polite",role:"alert"},r,{className:u}),f2(n)?t:n)}tn.handledProps=["as","children","className","content"];tn.propTypes={};tn.create=T2(tn,function(l){return{content:l}});var Uf=/[\\^$.*+?()[\]{}|]/g,_A=RegExp(Uf.source);function RA(l){return l=d1(l),l&&_A.test(l)?l.replace(Uf,"\\$&"):l}function f4(l){var n=l.additionLabel,e=l.additionPosition,t=l.allowAdditions,u=l.deburr,r=l.multiple,o=l.options,i=l.search,a=l.searchQuery,s=l.value,c=o;if(r&&(c=ti(c,function(y){return!h5(s,y.value)})),i&&a)if(L4(i))c=i(c,a);else{var f=u?dt(a):a,d=new RegExp(RA(f),"i");c=ti(c,function(y){return d.test(u?dt(y.text):y.text)})}if(t&&i&&a&&!fe(c,{text:a})){var h=$.isValidElement(n)?$.cloneElement(n,{key:"addition-label"}):n||"",p={key:"addition",text:[h,$.createElement("b",{key:"addition-query"},a)],value:a,className:"addition","data-additional":!0};e==="top"?c.unshift(p):c.push(p)}return c}f4.handledProps=[];function Ci(l){var n=l.additionLabel,e=l.additionPosition,t=l.allowAdditions,u=l.deburr,r=l.multiple,o=l.options,i=l.search,a=l.searchQuery,s=l.selectedIndex,c=l.value,f=f4({value:c,options:o,searchQuery:a,additionLabel:n,additionPosition:e,allowAdditions:t,deburr:u,multiple:r,search:i}),d=yf(f,function(m,g,v){return g.disabled||m.push(v),m},[]),h;if(!s||s<0){var p=d[0];h=r?p:tt(f,["value",c])||d[0]}else if(r)h=Wd(d,function(m){return m>=s}),s>=f.length-1&&(h=d[d.length-1]);else{var y=tt(f,["value",c]);h=h5(d,y)?y:void 0}return(!h||h<0)&&(h=d[0]),h}var bi=function(n,e){return v2(n)?e:n},Oi=function(n){return n&&n.map(function(e){return nf(e,["key","value"])})};function Hf(l){var n=l.flag,e=l.image,t=l.text;return L4(t)?t:{content:t2(Y6,{children:[$f.create(n),f3.create(e),t]})}}var Y2=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.searchRef=W.exports.createRef(),t.sizerRef=W.exports.createRef(),t.ref=W.exports.createRef(),t.handleChange=function(i,a){l2(t.props,"onChange",i,H({},t.props,{value:a}))},t.closeOnChange=function(i){var a=t.props,s=a.closeOnChange,c=a.multiple,f=au(s)?!c:s;f&&t.close(i,cf)},t.closeOnEscape=function(i){!t.props.closeOnEscape||j2.getCode(i)===j2.Escape&&(i.preventDefault(),t.close(i))},t.moveSelectionOnKeyDown=function(i){var a,s=t.props,c=s.multiple,f=s.selectOnNavigation,d=t.state.open;if(!!d){var h=(a={},a[j2.ArrowDown]=1,a[j2.ArrowUp]=-1,a),p=h[j2.getCode(i)];if(p!==void 0){i.preventDefault();var y=t.getSelectedIndexAfterMove(p);!c&&f&&t.makeSelectedItemActive(i,y),t.setState({selectedIndex:y})}}},t.openOnSpace=function(i){var a,s,c,f=t.state.focus&&!t.state.open&&j2.getCode(i)===j2.Spacebar,d=((a=i.target)==null?void 0:a.tagName)!=="INPUT"&&((s=i.target)==null?void 0:s.tagName)!=="TEXTAREA"&&((c=i.target)==null?void 0:c.isContentEditable)!==!0;f&&(d&&i.preventDefault(),t.open(i))},t.openOnArrow=function(i){var a=t.state,s=a.focus,c=a.open;if(s&&!c){var f=j2.getCode(i);(f===j2.ArrowDown||f===j2.ArrowUp)&&(i.preventDefault(),t.open(i))}},t.makeSelectedItemActive=function(i,a){var s=t.state,c=s.open,f=s.value,d=t.props.multiple,h=t.getSelectedItem(a),p=gl(h,"value");if(v2(p)||!c)return f;var y=d?Ei(f,[p]):p,m=d?!!oi(y,f).length:y!==f;return m&&(t.setState({value:y}),t.handleChange(i,y),h["data-additional"]&&l2(t.props,"onAddItem",i,H({},t.props,{value:p}))),f},t.selectItemOnEnter=function(i){var a=t.props.search,s=t.state,c=s.open,f=s.selectedIndex;if(!!c){var d=j2.getCode(i)===j2.Enter||!a&&j2.getCode(i)===j2.Spacebar;if(!!d){i.preventDefault();var h=PA(f4({value:t.state.value,options:t.props.options,searchQuery:t.state.searchQuery,additionLabel:t.props.additionLabel,additionPosition:t.props.additionPosition,allowAdditions:t.props.allowAdditions,deburr:t.props.deburr,multiple:t.props.multiple,search:t.props.search}));if(!(a&&h===0)){var p=t.makeSelectedItemActive(i,f);t.setState({selectedIndex:Ci({additionLabel:t.props.additionLabel,additionPosition:t.props.additionPosition,allowAdditions:t.props.allowAdditions,deburr:t.props.deburr,multiple:t.props.multiple,search:t.props.search,selectedIndex:f,value:p,options:t.props.options,searchQuery:""})}),t.closeOnChange(i),t.clearSearchQuery(),a&&l2(t.searchRef.current,"focus")}}}},t.removeItemOnBackspace=function(i){var a=t.props,s=a.multiple,c=a.search,f=t.state,d=f.searchQuery,h=f.value;if(j2.getCode(i)===j2.Backspace&&!(d||!c||!s||V5(h))){i.preventDefault();var p=cA(h);t.setState({value:p}),t.handleChange(i,p)}},t.closeOnDocumentClick=function(i){!t.props.closeOnBlur||t.ref.current&&Rn(t.ref.current,i)||t.close()},t.handleMouseDown=function(i){t.isMouseDown=!0,l2(t.props,"onMouseDown",i,t.props),document.addEventListener("mouseup",t.handleDocumentMouseUp)},t.handleDocumentMouseUp=function(){t.isMouseDown=!1,document.removeEventListener("mouseup",t.handleDocumentMouseUp)},t.handleClick=function(i){var a=t.props,s=a.minCharacters,c=a.search,f=t.state,d=f.open,h=f.searchQuery;if(l2(t.props,"onClick",i,t.props),i.stopPropagation(),!c)return t.toggle(i);if(d){l2(t.searchRef.current,"focus");return}if(h.length>=s||s===1){t.open(i);return}l2(t.searchRef.current,"focus")},t.handleIconClick=function(i){var a=t.props.clearable,s=t.hasValue();l2(t.props,"onClick",i,t.props),i.stopPropagation(),a&&s?t.clearValue(i):t.toggle(i)},t.handleItemClick=function(i,a){var s=t.props,c=s.multiple,f=s.search,d=t.state.value,h=a.value;if(i.stopPropagation(),(c||a.disabled)&&i.nativeEvent.stopImmediatePropagation(),!a.disabled){var p=a["data-additional"],y=c?Ei(t.state.value,[h]):h,m=c?!!oi(y,d).length:y!==d;m&&(t.setState({value:y}),t.handleChange(i,y)),t.clearSearchQuery(),l2(f?t.searchRef.current:t.ref.current,"focus"),t.closeOnChange(i),p&&l2(t.props,"onAddItem",i,H({},t.props,{value:h}))}},t.handleFocus=function(i){var a=t.state.focus;a||(l2(t.props,"onFocus",i,t.props),t.setState({focus:!0}))},t.handleBlur=function(i){var a=gl(i,"currentTarget");if(!(a&&a.contains(document.activeElement))){var s=t.props,c=s.closeOnBlur,f=s.multiple,d=s.selectOnBlur;t.isMouseDown||(l2(t.props,"onBlur",i,t.props),d&&!f&&(t.makeSelectedItemActive(i,t.state.selectedIndex),c&&t.close()),t.setState({focus:!1}),t.clearSearchQuery())}},t.handleSearchChange=function(i,a){var s=a.value;i.stopPropagation();var c=t.props.minCharacters,f=t.state.open,d=s;if(l2(t.props,"onSearchChange",i,H({},t.props,{searchQuery:d})),t.setState({searchQuery:d,selectedIndex:0}),!f&&d.length>=c){t.open();return}f&&c!==1&&d.length<c&&t.close()},t.handleKeyDown=function(i){t.moveSelectionOnKeyDown(i),t.openOnArrow(i),t.openOnSpace(i),t.selectItemOnEnter(i),l2(t.props,"onKeyDown",i)},t.getSelectedItem=function(i){var a=f4({value:t.state.value,options:t.props.options,searchQuery:t.state.searchQuery,additionLabel:t.props.additionLabel,additionPosition:t.props.additionPosition,allowAdditions:t.props.allowAdditions,deburr:t.props.deburr,multiple:t.props.multiple,search:t.props.search});return gl(a,"["+i+"]")},t.getItemByValue=function(i){var a=t.props.options;return Wd(a,{value:i})},t.getDropdownAriaOptions=function(){var i=t.props,a=i.loading,s=i.disabled,c=i.search,f=i.multiple,d=t.state.open,h={role:c?"combobox":"listbox","aria-busy":a,"aria-disabled":s,"aria-expanded":!!d};return h.role==="listbox"&&(h["aria-multiselectable"]=f),h},t.clearSearchQuery=function(){var i=t.state.searchQuery;i===void 0||i===""||t.setState({searchQuery:""})},t.handleLabelClick=function(i,a){i.stopPropagation(),t.setState({selectedLabel:a.value}),l2(t.props,"onLabelClick",i,a)},t.handleLabelRemove=function(i,a){i.stopPropagation();var s=t.state.value,c=eP(s,a.value);t.setState({value:c}),t.handleChange(i,c)},t.getSelectedIndexAfterMove=function(i,a){a===void 0&&(a=t.state.selectedIndex);var s=f4({value:t.state.value,options:t.props.options,searchQuery:t.state.searchQuery,additionLabel:t.props.additionLabel,additionPosition:t.props.additionPosition,allowAdditions:t.props.allowAdditions,deburr:t.props.deburr,multiple:t.props.multiple,search:t.props.search});if(!(s===void 0||sA(s,"disabled"))){var c=s.length-1,f=t.props.wrapSelection,d=a+i;return!f&&(d>c||d<0)?d=a:d>c?d=0:d<0&&(d=c),s[d].disabled?t.getSelectedIndexAfterMove(i,d):d}},t.handleIconOverrides=function(i){var a=t.props.clearable,s=u2(a&&t.hasValue()&&"clear",i.className);return{className:s,onClick:function(f){l2(i,"onClick",f,i),t.handleIconClick(f)}}},t.clearValue=function(i){var a=t.props.multiple,s=a?[]:"";t.setState({value:s}),t.handleChange(i,s)},t.computeSearchInputTabIndex=function(){var i=t.props,a=i.disabled,s=i.tabIndex;return v2(s)?a?-1:0:s},t.computeSearchInputWidth=function(){var i=t.state.searchQuery;if(t.sizerRef.current&&i){t.sizerRef.current.style.display="inline",t.sizerRef.current.textContent=i;var a=Math.ceil(t.sizerRef.current.getBoundingClientRect().width);return t.sizerRef.current.style.removeProperty("display"),a}},t.computeTabIndex=function(){var i=t.props,a=i.disabled,s=i.search,c=i.tabIndex;if(!s)return a?-1:v2(c)?0:c},t.handleSearchInputOverrides=function(i){return{onChange:function(s,c){l2(i,"onChange",s,c),t.handleSearchChange(s,c)}}},t.hasValue=function(){var i=t.props.multiple,a=t.state.value;return i?!V5(a):!v2(a)&&a!==""},t.scrollSelectedItemIntoView=function(){if(!!t.ref.current){var i=t.ref.current.querySelector(".menu.visible");if(!!i){var a=i.querySelector(".item.selected");if(!!a){var s=a.offsetTop<i.scrollTop,c=a.offsetTop+a.clientHeight>i.scrollTop+i.clientHeight;s?i.scrollTop=a.offsetTop:c&&(i.scrollTop=a.offsetTop+a.clientHeight-i.clientHeight)}}}},t.setOpenDirection=function(){if(!!t.ref.current){var i=t.ref.current.querySelector(".menu.visible");if(!!i){var a=t.ref.current.getBoundingClientRect(),s=i.clientHeight,c=document.documentElement.clientHeight-a.top-a.height-s,f=a.top-s,d=c<0&&f>c;!d!=!t.state.upward&&t.setState({upward:d})}}},t.open=function(i,a){i===void 0&&(i=null),a===void 0&&(a=!0);var s=t.props,c=s.disabled,f=s.search;c||(f&&l2(t.searchRef.current,"focus"),l2(t.props,"onOpen",i,t.props),a&&t.setState({open:!0}),t.scrollSelectedItemIntoView())},t.close=function(i,a){a===void 0&&(a=t.handleClose),t.state.open&&(l2(t.props,"onClose",i,t.props),t.setState({open:!1},a))},t.handleClose=function(){var i=document.activeElement===t.searchRef.current;!i&&t.ref.current&&t.ref.current.blur();var a=document.activeElement===t.ref.current,s=i||a;t.setState({focus:s})},t.toggle=function(i){return t.state.open?t.close(i):t.open(i)},t.renderText=function(){var i=t.props,a=i.multiple,s=i.placeholder,c=i.search,f=i.text,d=t.state,h=d.searchQuery,p=d.selectedIndex,y=d.value,m=d.open,g=t.hasValue(),v=u2(s&&!g&&"default","text",c&&h&&"filtered"),w=s,S;return f?w=f:m&&!a?S=t.getSelectedItem(p):g&&(S=t.getItemByValue(y)),tn.create(S?Hf(S):w,{defaultProps:{className:v}})},t.renderSearchInput=function(){var i=t.props,a=i.search,s=i.searchInput,c=t.state.searchQuery;return a&&R(d3,{innerRef:t.searchRef,children:Bf.create(s,{defaultProps:{style:{width:t.computeSearchInputWidth()},tabIndex:t.computeSearchInputTabIndex(),value:c},overrideProps:t.handleSearchInputOverrides})})},t.renderSearchSizer=function(){var i=t.props,a=i.search,s=i.multiple;return a&&s&&R("span",{className:"sizer",ref:t.sizerRef})},t.renderLabels=function(){var i=t.props,a=i.multiple,s=i.renderLabel,c=t.state,f=c.selectedLabel,d=c.value;if(!(!a||V5(d))){var h=D3(d,t.getItemByValue);return D3(oA(h),function(p,y){var m={active:p.value===f,as:"a",key:bi(p.key,p.value),onClick:t.handleLabelClick,onRemove:t.handleLabelRemove,value:p.value};return A3.create(s(p,y,m),{defaultProps:m})})}},t.renderOptions=function(){var i=t.props,a=i.lazyLoad,s=i.multiple,c=i.search,f=i.noResultsMessage,d=t.state,h=d.open,p=d.selectedIndex,y=d.value;if(a&&!h)return null;var m=f4({value:t.state.value,options:t.props.options,searchQuery:t.state.searchQuery,additionLabel:t.props.additionLabel,additionPosition:t.props.additionPosition,allowAdditions:t.props.allowAdditions,deburr:t.props.deburr,multiple:t.props.multiple,search:t.props.search});if(f!==null&&c&&V5(m))return R("div",{className:"message",children:f});var g=s?function(v){return h5(y,v)}:function(v){return v===y};return D3(m,function(v,w){return jf.create(H({active:g(v.value),onClick:t.handleItemClick,selected:p===w},v,{key:bi(v.key,v.value),style:H({},v.style,{pointerEvents:"all"})}))})},t.renderMenu=function(){var i=t.props,a=i.children,s=i.direction,c=i.header,f=t.state.open,d=t.getDropdownMenuAriaOptions();if(!f2(a)){var h=W.exports.Children.only(a),p=u2(s,E(f,"visible"),h.props.className);return W.exports.cloneElement(h,H({className:p},d))}return t2(H4,{...d,direction:s,open:f,children:[en.create(c,{autoGenerateKey:!1}),t.renderOptions()]})},t}var e=n.prototype;return e.getInitialAutoControlledState=function(){return{focus:!1,searchQuery:""}},n.getAutoControlledStateFromProps=function(u,r,o){var i={__options:u.options,__value:r.value},a=!f0(o.__value,r.value)||!qk(Oi(u.options),Oi(o.__options));return a&&(i.selectedIndex=Ci({additionLabel:u.additionLabel,additionPosition:u.additionPosition,allowAdditions:u.allowAdditions,deburr:u.deburr,multiple:u.multiple,search:u.search,selectedIndex:r.selectedIndex,value:r.value,options:u.options,searchQuery:r.searchQuery})),i},e.componentDidMount=function(){var u=this.state.open;u&&this.open(null,!1)},e.shouldComponentUpdate=function(u,r){return!f0(u,this.props)||!f0(r,this.state)},e.componentDidUpdate=function(u,r){var o=this.props,i=o.closeOnBlur,a=o.minCharacters,s=o.openOnFocus,c=o.search;if(!r.focus&&this.state.focus){if(!this.isMouseDown){var f=!c||c&&a===1&&!this.state.open;s&&f&&this.open()}}else r.focus&&!this.state.focus&&!this.isMouseDown&&i&&this.close();!r.open&&this.state.open?(this.setOpenDirection(),this.scrollSelectedItemIntoView()):r.open&&this.state.open,r.selectedIndex!==this.state.selectedIndex&&this.scrollSelectedItemIntoView()},e.getDropdownMenuAriaOptions=function(){var u=this.props,r=u.search,o=u.multiple,i={};return r&&(i["aria-multiselectable"]=o,i.role="listbox"),i},e.render=function(){var u=this.props,r=u.basic,o=u.button,i=u.className,a=u.compact,s=u.disabled,c=u.error,f=u.fluid,d=u.floating,h=u.icon,p=u.inline,y=u.item,m=u.labeled,g=u.loading,v=u.multiple,w=u.pointing,S=u.search,I=u.selection,C=u.scrolling,D=u.simple,F=u.trigger,j=this.state,K=j.focus,X=j.open,n2=j.upward,Z=u2("ui",E(X,"active visible"),E(s,"disabled"),E(c,"error"),E(g,"loading"),E(r,"basic"),E(o,"button"),E(a,"compact"),E(f,"fluid"),E(d,"floating"),E(p,"inline"),E(m,"labeled"),E(y,"item"),E(v,"multiple"),E(S,"search"),E(I,"selection"),E(D,"simple"),E(C,"scrolling"),E(n2,"upward"),M2(w,"pointing"),"dropdown",i),b=r2(n,this.props),L=i2(n,this.props),Y=this.getDropdownAriaOptions(L,this.props);return R(d3,{innerRef:this.ref,children:t2(L,{...b,...Y,className:Z,onBlur:this.handleBlur,onClick:this.handleClick,onKeyDown:this.handleKeyDown,onMouseDown:this.handleMouseDown,onFocus:this.handleFocus,onChange:this.handleChange,tabIndex:this.computeTabIndex(),children:[this.renderLabels(),this.renderSearchInput(),this.renderSearchSizer(),F||this.renderText(),W2.create(h,{overrideProps:this.handleIconOverrides,autoGenerateKey:!1}),this.renderMenu(),X&&R(Rl,{name:"keydown",on:this.closeOnEscape}),X&&R(Rl,{name:"click",on:this.closeOnDocumentClick}),K&&R(Rl,{name:"keydown",on:this.removeItemOnBackspace})]})})},n}(p1);Y2.handledProps=["additionLabel","additionPosition","allowAdditions","as","basic","button","children","className","clearable","closeOnBlur","closeOnChange","closeOnEscape","compact","deburr","defaultOpen","defaultSearchQuery","defaultSelectedLabel","defaultUpward","defaultValue","direction","disabled","error","floating","fluid","header","icon","inline","item","labeled","lazyLoad","loading","minCharacters","multiple","noResultsMessage","onAddItem","onBlur","onChange","onClick","onClose","onFocus","onLabelClick","onMouseDown","onOpen","onSearchChange","open","openOnFocus","options","placeholder","pointing","renderLabel","scrolling","search","searchInput","searchQuery","selectOnBlur","selectOnNavigation","selectedLabel","selection","simple","tabIndex","text","trigger","upward","value","wrapSelection"];Y2.propTypes={};Y2.defaultProps={additionLabel:"Add ",additionPosition:"top",closeOnBlur:!0,closeOnEscape:!0,deburr:!1,icon:"dropdown",minCharacters:1,noResultsMessage:"No results found.",openOnFocus:!0,renderLabel:Hf,searchInput:"text",selectOnBlur:!0,selectOnNavigation:!0,wrapSelection:!0};Y2.autoControlledProps=["open","searchQuery","selectedLabel","value","upward"];Y2.Divider=We;Y2.Header=en;Y2.Item=jf;Y2.Menu=H4;Y2.SearchInput=Bf;Y2.Text=tn;function Xn(l){return $.createElement(Y2,H({},l,{selection:!0}))}Xn.handledProps=["options"];Xn.propTypes={};Xn.Divider=Y2.Divider;Xn.Header=Y2.Header;Xn.Item=Y2.Item;Xn.Menu=Y2.Menu;var X6=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.ref=W.exports.createRef(),t.focus=function(){return t.ref.current.focus()},t.handleChange=function(i){var a=gl(i,"target.value");l2(t.props,"onChange",i,H({},t.props,{value:a}))},t.handleInput=function(i){var a=gl(i,"target.value");l2(t.props,"onInput",i,H({},t.props,{value:a}))},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.rows,o=u.value,i=r2(n,this.props),a=i2(n,this.props);return R(d3,{innerRef:this.ref,children:R(a,{...i,onChange:this.handleChange,onInput:this.handleInput,rows:r,value:o})})},n}(W.exports.Component);X6.handledProps=["as","onChange","onInput","rows","value"];X6.propTypes={};X6.defaultProps={as:"textarea",rows:3};var IA=X6;function _3(l){var n=l.children,e=l.className,t=l.content,u=l.control,r=l.disabled,o=l.error,i=l.inline,a=l.label,s=l.required,c=l.type,f=l.width,d=l.id,h=u2(E(r,"disabled"),E(o,"error"),E(i,"inline"),E(s,"required"),Qn(f,"wide"),"field",e),p=r2(_3,l),y=i2(_3,l),m=gl(o,"pointing","above"),g=A3.create(o,{autoGenerateKey:!1,defaultProps:{prompt:!0,pointing:m,id:d?d+"-error-message":void 0,role:"alert","aria-atomic":!0}}),v=(m==="below"||m==="right")&&g,w=(m==="above"||m==="left")&&g;if(v2(u))return v2(a)?R(y,{...p,className:h,id:d,children:f2(n)?t:n}):t2(y,{...p,className:h,id:d,children:[v,st(a,{autoGenerateKey:!1}),w]});var S=d&&o?d+"-error-message":null,I={"aria-describedby":S,"aria-invalid":o?!0:void 0},C=H({},p,{content:t,children:n,disabled:r,required:s,type:c,id:d});return u==="input"&&(c==="checkbox"||c==="radio")?R(y,{className:h,children:t2("label",{children:[v,W.exports.createElement(u,H({},I,C))," ",a,w]})}):u===Yn||u===g5?t2(y,{className:h,children:[v,W.exports.createElement(u,H({},I,C,{label:a})),w]}):t2(y,{className:h,children:[st(a,{defaultProps:{htmlFor:d},autoGenerateKey:!1}),v,W.exports.createElement(u,H({},I,C)),w]})}_3.handledProps=["as","children","className","content","control","disabled","error","id","inline","label","required","type","width"];_3.propTypes={};function V4(l){var n=l.control,e=r2(V4,l),t=i2(V4,l);return $.createElement(t,H({},e,{control:n}))}V4.handledProps=["as","control"];V4.propTypes={};V4.defaultProps={as:_3,control:K3};function W4(l){var n=l.control,e=r2(W4,l),t=i2(W4,l);return $.createElement(t,H({},e,{control:n}))}W4.handledProps=["as","control"];W4.propTypes={};W4.defaultProps={as:_3,control:Yn};function G4(l){var n=l.control,e=r2(G4,l),t=i2(G4,l);return $.createElement(t,H({},e,{control:n}))}G4.handledProps=["as","control"];G4.propTypes={};G4.defaultProps={as:_3,control:Y2};function Ke(l){var n=l.children,e=l.className,t=l.grouped,u=l.inline,r=l.unstackable,o=l.widths,i=u2(E(t,"grouped"),E(u,"inline"),E(r,"unstackable"),Qn(o,null,!0),"fields",e),a=r2(Ke,l),s=i2(Ke,l);return $.createElement(s,H({},a,{className:i}),n)}Ke.handledProps=["as","children","className","grouped","inline","unstackable","widths"];Ke.propTypes={};var K4=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.inputRef=W.exports.createRef(),t.computeIcon=function(){var i=t.props,a=i.loading,s=i.icon;if(!v2(s))return s;if(a)return"spinner"},t.computeTabIndex=function(){var i=t.props,a=i.disabled,s=i.tabIndex;if(!v2(s))return s;if(a)return-1},t.focus=function(){return t.inputRef.current.focus()},t.select=function(){return t.inputRef.current.select()},t.handleChange=function(i){var a=gl(i,"target.value");l2(t.props,"onChange",i,H({},t.props,{value:a}))},t.handleChildOverrides=function(i,a){return H({},a,i.props,{ref:function(c){z3(i.ref,c),t.inputRef.current=c}})},t.partitionProps=function(){var i=t.props,a=i.disabled,s=i.type,c=t.computeTabIndex(),f=r2(n,t.props),d=yu(f),h=d[0],p=d[1];return[H({},h,{disabled:a,type:s,tabIndex:c,onChange:t.handleChange,ref:t.inputRef}),p]},t}var e=n.prototype;return e.render=function(){var u=this,r=this.props,o=r.action,i=r.actionPosition,a=r.children,s=r.className,c=r.disabled,f=r.error,d=r.fluid,h=r.focus,p=r.icon,y=r.iconPosition,m=r.input,g=r.inverted,v=r.label,w=r.labelPosition,S=r.loading,I=r.size,C=r.transparent,D=r.type,F=u2("ui",I,E(c,"disabled"),E(f,"error"),E(d,"fluid"),E(h,"focus"),E(g,"inverted"),E(S,"loading"),E(C,"transparent"),o3(i,"action")||E(o,"action"),o3(y,"icon")||E(p||S,"icon"),o3(w,"labeled")||E(v,"labeled"),"input",s),j=i2(n,this.props),K=this.partitionProps(),X=K[0],n2=K[1];if(!f2(a)){var Z=D3(W.exports.Children.toArray(a),function(Y){return Y.type!=="input"?Y:W.exports.cloneElement(Y,u.handleChildOverrides(Y,X))});return R(j,{...n2,className:F,children:Z})}var b=K3.create(o,{autoGenerateKey:!1}),L=A3.create(v,{defaultProps:{className:u2("label",h5(w,"corner")&&w)},autoGenerateKey:!1});return t2(j,{...n2,className:F,children:[i==="left"&&b,w!=="right"&&L,Rk(m||D,{defaultProps:X,autoGenerateKey:!1}),W2.create(this.computeIcon(),{autoGenerateKey:!1}),i!=="left"&&b,w==="right"&&L]})},n}(W.exports.Component);K4.handledProps=["action","actionPosition","as","children","className","disabled","error","fluid","focus","icon","iconPosition","input","inverted","label","labelPosition","loading","onChange","size","tabIndex","transparent","type"];K4.propTypes={};K4.defaultProps={type:"text"};K4.create=T2(K4,function(l){return{type:l}});var NA=K4;function q4(l){var n=l.control,e=r2(q4,l),t=i2(q4,l);return $.createElement(t,H({},e,{control:n}))}q4.handledProps=["as","control"];q4.propTypes={};q4.defaultProps={as:_3,control:NA};function Q4(l){var n=l.control,e=r2(Q4,l),t=i2(Q4,l);return $.createElement(t,H({},e,{control:n}))}Q4.handledProps=["as","control"];Q4.propTypes={};Q4.defaultProps={as:_3,control:g5};function Y4(l){var n=l.control,e=l.options,t=r2(Y4,l),u=i2(Y4,l);return $.createElement(u,H({},t,{control:n,options:e}))}Y4.handledProps=["as","control","options"];Y4.propTypes={};Y4.defaultProps={as:_3,control:Xn};function X4(l){var n=l.control,e=r2(X4,l),t=i2(X4,l);return $.createElement(t,H({},e,{control:n}))}X4.handledProps=["as","control"];X4.propTypes={};X4.defaultProps={as:_3,control:IA};var v3=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleSubmit=function(i){var a=t.props.action;typeof a!="string"&&l2(i,"preventDefault");for(var s=arguments.length,c=new Array(s>1?s-1:0),f=1;f<s;f++)c[f-1]=arguments[f];l2.apply(void 0,[t.props,"onSubmit",i,t.props].concat(c))},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.action,o=u.children,i=u.className,a=u.error,s=u.inverted,c=u.loading,f=u.reply,d=u.size,h=u.success,p=u.unstackable,y=u.warning,m=u.widths,g=u2("ui",d,E(a,"error"),E(s,"inverted"),E(c,"loading"),E(f,"reply"),E(h,"success"),E(p,"unstackable"),E(y,"warning"),Qn(m,null,!0),"form",i),v=r2(n,this.props),w=i2(n,this.props);return R(w,{...v,action:r,className:g,onSubmit:this.handleSubmit,children:o})},n}(W.exports.Component);v3.handledProps=["action","as","children","className","error","inverted","loading","onSubmit","reply","size","success","unstackable","warning","widths"];v3.propTypes={};v3.defaultProps={as:"form"};v3.Field=_3;v3.Button=V4;v3.Checkbox=W4;v3.Dropdown=G4;v3.Group=Ke;v3.Input=q4;v3.Radio=Q4;v3.Select=Y4;v3.TextArea=X4;var Il=v3;function J4(l){var n=l.children,e=l.className,t=l.content,u=u2("content",e),r=r2(J4,l),o=i2(J4,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}J4.handledProps=["as","children","className","content"];J4.propTypes={};function un(l){var n=l.children,e=l.className,t=l.content,u=u2("header",e),r=r2(un,l),o=i2(un,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}un.handledProps=["as","children","className","content"];un.propTypes={};un.create=T2(un,function(l){return{content:l}});function Sl(l){var n=l.children,e=l.className,t=l.content,u=u2("content",e),r=r2(Sl,l),o=i2(Sl,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}Sl.handledProps=["as","children","className","content"];Sl.propTypes={};Sl.defaultProps={as:"li"};Sl.create=T2(Sl,function(l){return{content:l}});function xl(l){var n=l.children,e=l.className,t=l.items,u=u2("list",e),r=r2(xl,l),o=i2(xl,l);return $.createElement(o,H({},r,{className:u}),f2(n)?D3(t,Sl.create):n)}xl.handledProps=["as","children","className","items"];xl.propTypes={};xl.defaultProps={as:"ul"};xl.create=T2(xl,function(l){return{items:l}});var q3=function(l){w2(n,l);function n(){for(var t,u=arguments.length,r=new Array(u),o=0;o<u;o++)r[o]=arguments[o];return t=l.call.apply(l,[this].concat(r))||this,t.handleDismiss=function(i){var a=t.props.onDismiss;a&&a(i,t.props)},t}var e=n.prototype;return e.render=function(){var u=this.props,r=u.attached,o=u.children,i=u.className,a=u.color,s=u.compact,c=u.content,f=u.error,d=u.floating,h=u.header,p=u.hidden,y=u.icon,m=u.info,g=u.list,v=u.negative,w=u.onDismiss,S=u.positive,I=u.size,C=u.success,D=u.visible,F=u.warning,j=u2("ui",a,I,E(s,"compact"),E(f,"error"),E(d,"floating"),E(p,"hidden"),E(y,"icon"),E(m,"info"),E(v,"negative"),E(S,"positive"),E(C,"success"),E(D,"visible"),E(F,"warning"),M2(r,"attached"),"message",i),K=w&&R(W2,{name:"close",onClick:this.handleDismiss}),X=r2(n,this.props),n2=i2(n,this.props);return f2(o)?t2(n2,{...X,className:j,children:[K,W2.create(y,{autoGenerateKey:!1}),(!v2(h)||!v2(c)||!v2(g))&&t2(J4,{children:[un.create(h,{autoGenerateKey:!1}),xl.create(g,{autoGenerateKey:!1}),Ik(c,{autoGenerateKey:!1})]})]}):t2(n2,{...X,className:j,children:[K,o]})},n}(W.exports.Component);q3.handledProps=["as","attached","children","className","color","compact","content","error","floating","header","hidden","icon","info","list","negative","onDismiss","positive","size","success","visible","warning"];q3.propTypes={};q3.Content=J4;q3.Header=un;q3.List=xl;q3.Item=Sl;function jn(l){var n=l.children,e=l.className,t=u2(e),u=r2(jn,l),r=i2(jn,l);return $.createElement(r,H({},u,{className:t}),n)}jn.handledProps=["as","children","className"];jn.defaultProps={as:"tbody"};jn.propTypes={};function Q3(l){var n=l.active,e=l.children,t=l.className,u=l.collapsing,r=l.content,o=l.disabled,i=l.error,a=l.icon,s=l.negative,c=l.positive,f=l.selectable,d=l.singleLine,h=l.textAlign,p=l.verticalAlign,y=l.warning,m=l.width,g=u2(E(n,"active"),E(u,"collapsing"),E(o,"disabled"),E(i,"error"),E(s,"negative"),E(c,"positive"),E(f,"selectable"),E(d,"single line"),E(y,"warning"),g1(h),m1(p),Qn(m,"wide"),t),v=r2(Q3,l),w=i2(Q3,l);return f2(e)?$.createElement(w,H({},v,{className:g}),W2.create(a),r):$.createElement(w,H({},v,{className:g}),e)}Q3.handledProps=["active","as","children","className","collapsing","content","disabled","error","icon","negative","positive","selectable","singleLine","textAlign","verticalAlign","warning","width"];Q3.defaultProps={as:"td"};Q3.propTypes={};Q3.create=T2(Q3,function(l){return{content:l}});function rn(l){var n=l.children,e=l.className,t=l.content,u=l.fullWidth,r=u2(E(u,"full-width"),e),o=r2(rn,l),i=i2(rn,l);return $.createElement(i,H({},o,{className:r}),f2(n)?t:n)}rn.handledProps=["as","children","className","content","fullWidth"];rn.defaultProps={as:"thead"};rn.propTypes={};function m5(l){var n=l.as,e=r2(m5,l);return $.createElement(rn,H({},e,{as:n}))}m5.handledProps=["as"];m5.propTypes={};m5.defaultProps={as:"tfoot"};function S1(l){var n=l.as,e=l.className,t=l.sorted,u=u2(o3(t,"sorted"),e),r=r2(S1,l);return $.createElement(Q3,H({},r,{as:n,className:u}))}S1.handledProps=["as","className","sorted"];S1.propTypes={};S1.defaultProps={as:"th"};function E3(l){var n=l.active,e=l.cellAs,t=l.cells,u=l.children,r=l.className,o=l.disabled,i=l.error,a=l.negative,s=l.positive,c=l.textAlign,f=l.verticalAlign,d=l.warning,h=u2(E(n,"active"),E(o,"disabled"),E(i,"error"),E(a,"negative"),E(s,"positive"),E(d,"warning"),g1(c),m1(f),r),p=r2(E3,l),y=i2(E3,l);return f2(u)?$.createElement(y,H({},p,{className:h}),D3(t,function(m){return Q3.create(m,{defaultProps:{as:e}})})):$.createElement(y,H({},p,{className:h}),u)}E3.handledProps=["active","as","cellAs","cells","children","className","disabled","error","negative","positive","textAlign","verticalAlign","warning"];E3.defaultProps={as:"tr",cellAs:"td"};E3.propTypes={};E3.create=T2(E3,function(l){return{cells:l}});function h3(l){var n=l.attached,e=l.basic,t=l.celled,u=l.children,r=l.className,o=l.collapsing,i=l.color,a=l.columns,s=l.compact,c=l.definition,f=l.fixed,d=l.footerRow,h=l.headerRow,p=l.headerRows,y=l.inverted,m=l.padded,g=l.renderBodyRow,v=l.selectable,w=l.singleLine,S=l.size,I=l.sortable,C=l.stackable,D=l.striped,F=l.structured,j=l.tableData,K=l.textAlign,X=l.unstackable,n2=l.verticalAlign,Z=u2("ui",i,S,E(t,"celled"),E(o,"collapsing"),E(c,"definition"),E(f,"fixed"),E(y,"inverted"),E(v,"selectable"),E(w,"single line"),E(I,"sortable"),E(C,"stackable"),E(D,"striped"),E(F,"structured"),E(X,"unstackable"),M2(n,"attached"),M2(e,"basic"),M2(s,"compact"),M2(m,"padded"),g1(K),m1(n2),Qn(a,"column"),"table",r),b=r2(h3,l),L=i2(h3,l);if(!f2(u))return $.createElement(L,H({},b,{className:Z}),u);var Y=h||p,c2={defaultProps:{cellAs:"th"}},a2=Y&&$.createElement(rn,null,E3.create(h,c2),D3(p,function(_){return E3.create(_,c2)}));return $.createElement(L,H({},b,{className:Z}),a2,$.createElement(jn,null,g&&D3(j,function(_,A){return E3.create(g(_,A))})),d&&$.createElement(m5,null,E3.create(d)))}h3.handledProps=["as","attached","basic","celled","children","className","collapsing","color","columns","compact","definition","fixed","footerRow","headerRow","headerRows","inverted","padded","renderBodyRow","selectable","singleLine","size","sortable","stackable","striped","structured","tableData","textAlign","unstackable","verticalAlign"];h3.defaultProps={as:"table"};h3.propTypes={};h3.Body=jn;h3.Cell=Q3;h3.Footer=m5;h3.Header=rn;h3.HeaderCell=S1;h3.Row=E3;function Z4(l){var n=l.children,e=l.className,t=l.content,u=l.fluid,r=l.text,o=l.textAlign,i=u2("ui",E(r,"text"),E(u,"fluid"),g1(o),"container",e),a=r2(Z4,l),s=i2(Z4,l);return $.createElement(s,H({},a,{className:i}),f2(n)?t:n)}Z4.handledProps=["as","children","className","content","fluid","text","textAlign"];Z4.propTypes={};function on(l){var n=l.children,e=l.className,t=l.content,u=u2("sub header",e),r=r2(on,l),o=i2(on,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}on.handledProps=["as","children","className","content"];on.propTypes={};on.create=T2(on,function(l){return{content:l}});function l5(l){var n=l.children,e=l.className,t=l.content,u=u2("content",e),r=r2(l5,l),o=i2(l5,l);return $.createElement(o,H({},r,{className:u}),f2(n)?t:n)}l5.handledProps=["as","children","className","content"];l5.propTypes={};function Tl(l){var n=l.attached,e=l.block,t=l.children,u=l.className,r=l.color,o=l.content,i=l.disabled,a=l.dividing,s=l.floated,c=l.icon,f=l.image,d=l.inverted,h=l.size,p=l.sub,y=l.subheader,m=l.textAlign,g=u2("ui",r,h,E(e,"block"),E(i,"disabled"),E(a,"dividing"),o3(s,"floated"),E(c===!0,"icon"),E(f===!0,"image"),E(d,"inverted"),E(p,"sub"),M2(n,"attached"),g1(m),"header",u),v=r2(Tl,l),w=i2(Tl,l);if(!f2(t))return $.createElement(w,H({},v,{className:g}),t);var S=W2.create(c,{autoGenerateKey:!1}),I=f3.create(f,{autoGenerateKey:!1}),C=on.create(y,{autoGenerateKey:!1});return S||I?$.createElement(w,H({},v,{className:g}),S||I,(o||C)&&$.createElement(l5,null,o,C)):$.createElement(w,H({},v,{className:g}),o,C)}Tl.handledProps=["as","attached","block","children","className","color","content","disabled","dividing","floated","icon","image","inverted","size","sub","subheader","textAlign"];Tl.propTypes={};Tl.Content=l5;Tl.Subheader=on;const MA="0oa3nergk7ve63b1u1d7",FA="https://oiebeyondwf102.oktapreview.com/oauth2/default",LA="false",zf="",DA=`${window.location.origin}${zf}login/callback`,$A=!1;var J6={oidc:{clientId:MA,issuer:FA,redirectUri:DA,scopes:["openid","profile","email"],pkce:!0,disableHttpsCheck:LA,useInteractionCode:$A},resourceServer:{messagesUrl:"http://localhost:8000/api/messages"},app:{basename:zf}};const jA=()=>{const l=e1(),{authState:n,oktaAuth:e}=Cl(),[t,u]=W.exports.useState(null);W.exports.useEffect(()=>{if(!n||!n.isAuthenticated)u(null);else{const i=localStorage.getItem("redirect");i&&(localStorage.removeItem("redirect"),window.location=i)}},[n,e]);const r=async()=>{l.push("/login")},o=[{label:"Node/Express Resource Server Example",url:"https://github.com/okta/samples-nodejs-express-4/tree/master/resource-server"},{label:"Java/Spring MVC Resource Server Example",url:"https://github.com/okta/samples-java-spring/tree/master/resource-server"},{label:"ASP.NET Core Resource Server Example",url:"https://github.com/okta/samples-aspnetcore/tree/master/samples-aspnetcore-3x/resource-server"}];return n?R("div",{id:"home",children:t2("div",{children:[R(Tl,{as:"h1",children:"PKCE Flow w/ Custom Login Page"}),n.isAuthenticated&&!t&&R("div",{children:"Loading user information..."}),n.isAuthenticated&&t&&t2("div",{children:[t2("p",{id:"welcome",children:["Welcome, \xA0",t.name,"!"]}),t2("p",{children:["You have successfully authenticated against your Okta org, and have been redirected back to this application.  You now have an ID token and access token in local storage. Visit the"," ",R("a",{href:"/profile",children:"My Profile"})," ","page to take a look inside the ID token."]}),R("h3",{children:"Next Steps"}),R("p",{children:"Currently this application is a stand-alone front end application.  At this point you can use the access token to authenticate yourself against resource servers that you control."}),R("p",{children:"This sample is designed to work with one of our resource server examples.  To see access token authentication in action, please download one of these resource server examples:"}),R("ul",{children:o.map(i=>R("li",{children:R("a",{href:i.url,children:i.label})},i.url))}),t2("p",{children:["Once you have downloaded and started the example resource server, you can visit the"," ",R("a",{href:"/messages",children:"My Messages"})," ","page to see the authentication process in action."]})]}),!n.isAuthenticated&&t2("div",{children:[R("p",{children:"If you\u2018re viewing this page then you have successfully started this React application."}),t2("p",{children:[R("span",{children:"This example shows you how to use the "}),R("a",{href:"https://github.com/okta/okta-react/tree/master",children:"Okta React Library"}),R("span",{children:" to add the "}),R("a",{href:"https://developer.okta.com/docs/guides/implement-auth-code-pkce",children:"PKCE Flow"}),R("span",{children:" to your application."})]}),R("p",{children:"When you click the login or registry button below, you will be presented the login or registry page within the application. After you authenticate, you will be logged in to this application with an ID token and access token. These tokens will be stored in local storage and can be retrieved at a later time."}),R(K3,{id:"login-button",primary:!0,onClick:r,children:"Login"})]})]})}):R("div",{children:"Loading..."})},BA="1px",UA="solid",HA="4px",zA="6px",VA="#ffffff",WA="#f5f5f6",GA="#f2f5ff",KA="#a7b5ec",qA="#00297a",QA="#ffdfe2",YA="#f88c90",XA="#da372c",JA="#faf5dc",ZA="#f9dc77",l_="#ffc61c",n_="#e5faf3",e_="#84d2b1",t_="#008055",u_="#8c8c96",r_="#d7d7dc",o_="#d7d7dc",i_="#f88c90",a_="#da372c",s_="#640019",c_="#1662dd",d_="#00297a",f_="#a7b5ec",h_="#1662dd",p_="#00297a",g_="#f88c90",m_="#da372c",v_="#640019",y_="#f9dc77",w_="#ffc61c",S_="#663800",x_="#84d2b1",T_="#00b478",E_="#6e6e78",C_="#1d1d21",b_="#ebebed",O_="#d7d7dc",k_="#8c8c96",P_="#6e6e78",A_="#1d1d21",__="#ffffff",R_="#f5f5f6",I_="#a7b5ec",N_="#788ee2",M_="#1662dd",F_="#00297a",L_="#f2f5ff",D_="#84d2b1",$_="#00b478",j_="#008055",B_="#00503c",U_="#e5faf3",H_="#f88c90",z_="#da372c",V_="#640019",W_="#ffdfe2",G_="#f9dc77",K_="#ffc61c",q_="#663800",Q_="#faf5dc",Y_="#e97107",X_="#65adb7",J_="#2d8c9e",Z_="#8d6e97",lR="#1d1d21",nR="#1d1d21",eR="#ffffff",tR="#1662dd",uR="#6e6e78",rR="#da372c",oR="#1662dd",iR="#da372c",aR="2px",sR="0",cR="solid",dR="2px",fR="1px",hR="'Public Sans', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Oxygen-Sans', 'Ubuntu', 'Cantarell', 'Helvetica Neue', 'Noto Sans Arabic', sans-serif",pR="'Inconsolata', 'SFMono-Regular', 'Consolas', 'Liberation Mono', 'Menlo', 'Courier', monospace",gR="0.857rem",mR="1rem",vR="1.143rem",yR="1.286rem",wR="1.429rem",SR="1.571rem",xR="1.786rem",TR="2rem",ER="2.286rem",CR="2.571rem",bR="2.857rem",OR="3.214rem",kR="3.643rem",PR="87.5%",AR="0.857rem",_R="1rem",RR="1.143rem",IR="1.286rem",NR="1.571rem",MR="2rem",FR="2.286rem",LR="2.571rem",DR="normal",$R="400",jR="600",BR=1.42857143,UR=1.14285714,HR=1.25,zR=1.33333333,VR=1.27272727,WR=1.28,GR=1.28571429,KR=1.25,qR="32rem",QR="0px 1px 4px rgba(29, 29, 33, 0.08), 0px 4px 6px rgba(29, 29, 33, 0.01), 0px 5px 15px rgba(29, 29, 33, 0.05)",YR="0px 1px 4px rgba(29, 29, 33, 0.08), 0px 4px 10px rgba(29, 29, 33, 0.08), 0px 8px 30px rgba(29, 29, 33, 0.1)",XR="0.28571429rem",JR="0.57142857rem",ZR="0.85714286rem",lI="1.14285714rem",nI="1.71428571rem",eI="2.28571429rem",tI="2.85714286rem",uI="3.42857143rem",rI="4rem",oI="100ms",iI="linear";var aI=Object.freeze(Object.defineProperty({__proto__:null,BorderWidthBase:BA,BorderStyleBase:UA,BorderRadiusBase:HA,BorderRadiusOuter:zA,ColorBackgroundBase:VA,ColorBackgroundDisabled:WA,ColorBackgroundPrimaryLight:GA,ColorBackgroundPrimaryBase:KA,ColorBackgroundPrimaryDark:qA,ColorBackgroundDangerLight:QA,ColorBackgroundDangerBase:YA,ColorBackgroundDangerDark:XA,ColorBackgroundCautionLight:JA,ColorBackgroundCautionBase:ZA,ColorBackgroundCautionDark:l_,ColorBackgroundSuccessLight:n_,ColorBackgroundSuccessBase:e_,ColorBackgroundSuccessDark:t_,ColorBorderUi:u_,ColorBorderDisplay:r_,ColorBorderDisabled:o_,ColorBorderDangerLight:i_,ColorBorderDangerBase:a_,ColorBorderDangerDark:s_,ColorBorderPrimaryBase:c_,ColorBorderPrimaryDark:d_,ColorPrimaryLight:f_,ColorPrimaryBase:h_,ColorPrimaryDark:p_,ColorDangerLight:g_,ColorDangerBase:m_,ColorDangerDark:v_,ColorCautionLight:y_,ColorCautionBase:w_,ColorCautionDark:S_,ColorSuccessLight:x_,ColorSuccessBase:T_,ColorNeutralBase:E_,ColorNeutralDark:C_,ColorPaletteNeutral100:b_,ColorPaletteNeutral200:O_,ColorPaletteNeutral500:k_,ColorPaletteNeutral600:P_,ColorPaletteNeutral900:A_,ColorPaletteNeutralWhite:__,ColorPaletteNeutral000:R_,ColorPaletteBlue300:I_,ColorPaletteBlue400:N_,ColorPaletteBlue500:M_,ColorPaletteBlue900:F_,ColorPaletteBlue000:L_,ColorPaletteGreen300:D_,ColorPaletteGreen500:$_,ColorPaletteGreen600:j_,ColorPaletteGreen900:B_,ColorPaletteGreen000:U_,ColorPaletteRed300:H_,ColorPaletteRed500:z_,ColorPaletteRed900:V_,ColorPaletteRed000:W_,ColorPaletteYellow300:G_,ColorPaletteYellow500:K_,ColorPaletteYellow900:q_,ColorPaletteYellow000:Q_,ColorPaletteOrange500:Y_,ColorPaletteTurquoise400:X_,ColorPaletteTurquoise500:J_,ColorPalettePurple500:Z_,ColorTextBody:lR,ColorTextHeading:nR,ColorTextBodyInverse:eR,ColorTextPrimary:tR,ColorTextSub:uR,ColorTextDanger:rR,FocusOutlineColorPrimary:oR,FocusOutlineColorDanger:iR,FocusOutlineOffsetBase:aR,FocusOutlineOffsetTight:sR,FocusOutlineStyle:cR,FocusOutlineWidthBase:dR,FocusOutlineWidthTight:fR,FontFamilyBase:hR,FontFamilyMono:pR,FontScale0:gR,FontScale1:mR,FontScale2:vR,FontScale3:yR,FontScale4:wR,FontScale5:SR,FontScale6:xR,FontScale7:TR,FontScale8:ER,FontScale9:CR,FontScale10:bR,FontScale11:OR,FontScale12:kR,FontSizeBase:PR,FontSizeCaption:AR,FontSizeBody:_R,FontSizeHeading6:RR,FontSizeHeading5:IR,FontSizeHeading4:NR,FontSizeHeading3:MR,FontSizeHeading2:FR,FontSizeHeading1:LR,FontStyleNormal:DR,FontWeightNormal:$R,FontWeightBold:jR,FontLineHeightBody:BR,FontLineHeightUi:UR,FontLineHeightHeading6:HR,FontLineHeightHeading5:zR,FontLineHeightHeading4:VR,FontLineHeightHeading3:WR,FontLineHeightHeading2:GR,FontLineHeightHeading1:KR,FontLineLengthMax:qR,ShadowScale0:QR,ShadowScale1:YR,SpaceScale0:XR,SpaceScale1:JR,SpaceScale2:ZR,SpaceScale3:lI,SpaceScale4:nI,SpaceScale5:eI,SpaceScale6:tI,SpaceScale7:uI,SpaceScale8:rI,TransitionDurationBase:oI,TransitionTimingBase:iI},Symbol.toStringTag,{value:"Module"}));/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const sI={...aI},Vf=W.exports.createContext(sI);Vf.displayName="ThemeContext";/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const cI=(()=>{try{return window.CSS.supports("--custom: properties")}catch{return!1}})();/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */class dI extends Set{constructor(){super();const n=document.createElement("style");n.setAttribute("data-ods",""),n.setAttribute("nonce",window.cspNonce),this.element=document.head.appendChild(n)}inject(n,e){return this.has(n)?!1:(this.element.innerHTML+=e,this.add(n),!0)}}const ki=new dI;function fI(l,n,e){const{__digest:t,__template:u}=n;return class extends W.exports.Component{constructor(o){super(o),typeof u=="function"&&(ki.has(t)||ki.inject(t,this.themedStyles))}get themedStyles(){return u(this.templateTheme)}get templateTheme(){const o=Object.fromEntries(Object.entries(this.componentTheme).map(this.templateThemeEntry));return new Proxy(o,{get:(i,a)=>{if(a in i)return i[a];throw new TypeError(`Missing property '${String(a)}' within ${this.displayName} style module`)}})}get componentTheme(){return l(this.reducerTheme)}get reducerTheme(){return new Proxy(this.shallowCopyTheme,{get:(o,i)=>{if(i in o)return[i,o[i]];throw new TypeError(`Missing property '${String(i)}' within ${this.displayName} theme module`)}})}get shallowCopyTheme(){return Object.assign(Object.create(null),this.props.theme)}templateThemeEntry(o){let[i,a]=o;const s=Array.isArray(a),c=s?a[1]:a,f=cI?s?`var(--${t}-${i}, var(--${a[0]}, ${c}))`:`var(--${t}-${i}, ${c})`:c;return[i,f]}get displayName(){return e.displayName||e.name||"Component"}render(){const{composedRef:o,theme:i,...a}=this.props;return R(e,{ref:o,...a})}}}function Wf(l,n){return e=>{const t=fI(l,n,e);return Ds(Object.assign(W.exports.forwardRef((u,r)=>{const o=W.exports.useCallback(i=>R(t,{...u,theme:i,composedRef:r}),[u,r]);return R(Vf.Consumer,{children:o})}),{theme:n.__digest}),e)}}/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const Pi=function(){let l="",n="";for(var e=arguments.length,t=new Array(e),u=0;u<e;u++)t[u]=arguments[u];for(const r of t)typeof r=="string"&&r&&(l+=`${n}${r}`),typeof r=="object"&&Object.entries(r).forEach(o=>{let[i,a]=o;return a&&(l+=`${n}${i}`)}),!n&&l&&(n=" ");return l},hI=function(){for(var l=arguments.length,n=new Array(l),e=0;e<l;e++)n[e]=arguments[e];return W.exports.useMemo(()=>Pi(...n),[Pi,n])};/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const pI=6,Ai=()=>Math.random().toString(36).slice(-pI),gI=l=>{const n=W.exports.useMemo(Ai,[Ai]);return l||n};/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const mI=["children","className","color","style"];function Gf(l){const n=Object.create(null);for(var e=arguments.length,t=new Array(e>1?e-1:0),u=1;u<e;u++)t[u-1]=arguments[u];for(const r in l)mI.includes(r)||t.includes(r)||!{}.hasOwnProperty.call(l,r)||(n[r]=l[r]);return n}/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */function vI(l){return l.replace(/-/,"").toUpperCase()}function d2(l){return l.replace(/(^\w|-\w)/g,vI)}/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const yI=l=>({MaxLineLength:l.FontLineLengthMax,SpaceScale0:l.SpaceScale0,SpaceScale1:l.SpaceScale1,SpaceScale3:l.SpaceScale3,SpaceScale6:l.SpaceScale6,SpaceScale8:l.SpaceScale8,BaseBoxShadow:l.ShadowScale0,HoverBoxShadow:l.ShadowScale1,PrimaryFocusOutlineColor:l.FocusOutlineColorPrimary,DangerFocusOutlineColor:l.FocusOutlineColorDanger,FocusOutlineOffset:l.FocusOutlineOffsetBase,FocusOutlineStyle:l.FocusOutlineStyle,FocusOutlineWidth:l.FocusOutlineWidthBase,FontFamily:l.FontFamilyBase,BaseFontFamily:l.FontFamilyBase,NormalFontWeight:l.FontWeightNormal,NormalFontStyle:l.FontStyleNormal,FontSize:l.FontSizeBody,BodyLineHeight:l.FontLineHeightBody,BodyTextColor:l.ColorTextBody,BaseBorderWidth:l.BorderWidthBase,BaseBorderStyle:l.BorderStyleBase,BaseBorderRadius:l.BorderRadiusBase,OuterBorderRadius:l.BorderRadiusOuter,BaseBorderColor:"transparent",UiBorderColor:l.ColorBorderUi,DisplayBorderColor:l.ColorBorderDisplay,PrimaryBorderColor:l.ColorBorderPrimaryBase,DangerBorderColor:l.ColorBorderDangerBase,BaseBackgroundColor:l.ColorBackgroundBase,DisabledBackgroundColor:l.ColorBackgroundDisabled,PrimaryLightBackgroundColor:l.ColorBackgroundPrimaryLight,PrimaryBaseBackgroundColor:l.ColorBackgroundPrimaryBase,PrimaryDarkBackgroundColor:l.ColorBackgroundPrimaryDark,DangerLightBackgroundColor:l.ColorBackgroundDangerLight,DangerBaseBackgroundColor:l.ColorBackgroundDangerBase,DangerDarkBackgroundColor:l.ColorBackgroundDangerDark,CautionLightBackgroundColor:l.ColorBackgroundCautionLight,CautionBaseBackgroundColor:l.ColorBackgroundCautionBase,CautionDarkBackgroundColor:l.ColorBackgroundCautionDark,SuccessLightBackgroundColor:l.ColorBackgroundSuccessLight,SuccessBaseBackgroundColor:l.ColorBackgroundSuccessBase,SuccessDarkBackgroundColor:l.ColorBackgroundSuccessDark}),s2={__digest:"67dd04",__template:function(l){return`.ods-WBGspT{font-feature-settings:"lnum","pnum";box-sizing:border-box;font-family:${l.FontFamily};font-variant:normal;letter-spacing:0;text-decoration-skip-ink:all}.ods-WBGspT:after,.ods-WBGspT:before{box-sizing:inherit}.ods-WBGspT *{box-sizing:border-box}.ods-WBGspT :after,.ods-WBGspT :before{box-sizing:inherit}.ods-EVsoGO{display:block}.ods-oNzz4A{display:inline}.ods-OgAnFP{display:inline-block}.ods-SJsRtZ{display:flex}.ods-stRz95{display:inline-flex}.ods-h7b6A0{display:-ms-grid;display:grid}.ods-6let23{display:-ms-inline-grid;display:inline-grid}.ods-1vxYEI{display:none}.ods-Qly7kU{position:absolute}.ods-rknelP{position:relative}.ods-YlMrxB{position:static}.ods-emI7L5{position:fixed}.ods-XBvXCM{position:sticky}.ods-JNLd89{-ms-grid-columns:1fr 1fr;grid-template-columns:1fr 1fr}.ods-xdYIAV{-ms-grid-columns:1fr 1fr 1fr;grid-template-columns:1fr 1fr 1fr}.ods-lknLGq{-ms-grid-columns:auto 1fr;grid-template-columns:auto 1fr}.ods-ExeEH9{-ms-grid-columns:auto 1fr auto;grid-template-columns:auto 1fr auto}.ods-zb2QMz{-ms-grid-column:1;grid-column:1}.ods-qqDB8f{-ms-grid-column:2;grid-column:2}.ods-P99BMD{-ms-grid-column:3;grid-column:3}.ods-Xm21dl{-ms-grid-row:1;grid-row:1}.ods-maaST9{-ms-grid-row:2;grid-row:2}.ods-k8AjIb{-ms-grid-row:3;grid-row:3}.ods-NTq9xH{-ms-grid-row:4;grid-row:4}.ods-C2T3bB{-ms-grid-row:5;grid-row:5}.ods-K1NKDz{flex-direction:row}.ods-tI7BZY{flex-direction:row-reverse}.ods-O04S2r{flex-direction:column}.ods-ofCvX7{flex-direction:column-reverse}.ods-BTEe26{flex-wrap:wrap}.ods-v2cXbd{flex-wrap:wrap-reverse}.ods-R05bzx{flex-wrap:nowrap}.ods-BWyTPo{flex:0 1 auto}.ods-0cAxtW{flex:1 1 auto}.ods-WOHC5e{flex:1 1 0%}.ods-0KEyj1{flex:none}.ods-Y7Z8IQ{flex-grow:0}.ods-SXa0g0{flex-grow:1}.ods-VDKZf9{flex-shrink:0}.ods-n94o3u{flex-shrink:1}.ods-oxajRh{align-items:flex-start}.ods-bUbzwO{align-items:flex-end}.ods-uyIogb{align-items:center}.ods-fAAfHO{align-items:baseline}.ods-0GF9LL{align-items:stretch}.ods-2iXUbJ{justify-content:flex-start}.ods-udEafa{justify-content:flex-end}.ods-UGbAoO{justify-content:center}.ods-hbg1Js{justify-content:space-between}.ods-65QkyB{justify-content:space-around}.ods-6Qb7h7{justify-content:space-evenly}.ods-KVvh0A{width:1px}.ods-QItMSa{width:1em}.ods-UngCy0{width:100%}.ods-XQZeID{width:100vw}.ods-Zo1xhu{max-width:100%}.ods-LdcPtP{max-width:${l.MaxLineLength}}.ods-W0Va1t{max-width:calc(${l.MaxLineLength} + ${l.SpaceScale3} + ${l.SpaceScale3})}.ods-MUpE65{height:1em}.ods-eYTUWl{max-height:100vh}.ods-PaDoSJ{max-height:calc(100vh - ${l.SpaceScale3})}.ods-qw32Dj{margin:0}.ods-4gEMud{margin:${l.SpaceScale0}}.ods-FpsEVU{margin:${l.SpaceScale1}}.ods-812m7k{margin:${l.SpaceScale3}}.ods-Y5qcoJ{margin:${l.SpaceScale6}}.ods-qQjAoZ{margin:${l.SpaceScale8}}.ods-3fvR7J{margin-top:${l.SpaceScale0}}.ods-y54SVG{margin-top:${l.SpaceScale1}}.ods-GIOARF{margin-top:${l.SpaceScale3}}.ods-uZgOgl{margin-top:${l.SpaceScale6}}.ods-18czDd{margin-top:${l.SpaceScale8}}.ods-BVZZD9{margin-right:${l.SpaceScale0}}.ods-njM5Kj{margin-right:${l.SpaceScale1}}.ods-40oIQ0{margin-right:${l.SpaceScale3}}.ods-0IbnKA{margin-right:${l.SpaceScale6}}.ods-jdUMcW{margin-right:${l.SpaceScale8}}.ods-ecA3qb{margin-bottom:${l.SpaceScale0}}.ods-MsqE4C{margin-bottom:${l.SpaceScale1}}.ods-9lLToX{margin-bottom:${l.SpaceScale3}}.ods-clUTRz{margin-bottom:${l.SpaceScale6}}.ods-Cq68ID{margin-bottom:${l.SpaceScale8}}.ods-jEtk1g{margin-left:${l.SpaceScale0}}.ods-oAbWJu{margin-left:${l.SpaceScale1}}.ods-dEBnXO{margin-left:${l.SpaceScale3}}.ods-Jyl57O{margin-left:${l.SpaceScale6}}.ods-Do5cz2{margin-left:${l.SpaceScale8}}.ods-Uwa53U{padding:0}.ods-1RFSO9{padding:${l.SpaceScale0}}.ods-oYl3Ep{padding:${l.SpaceScale1}}.ods-mUmPqE{padding:${l.SpaceScale3}}.ods-KSTIYr{padding:${l.SpaceScale6}}.ods-YLjYd0{padding:${l.SpaceScale8}}.ods-wu6m9F{padding-top:${l.SpaceScale0}}.ods-wafCdo{padding-top:${l.SpaceScale1}}.ods-3zyfxi{padding-top:${l.SpaceScale3}}.ods-HbBbLJ{padding-top:${l.SpaceScale6}}.ods-uQCCax{padding-top:${l.SpaceScale8}}.ods-L4WW7U{padding-right:${l.SpaceScale0}}.ods-Hezf88{padding-right:${l.SpaceScale1}}.ods-CgCG2n{padding-right:${l.SpaceScale3}}.ods-gTxlQ8{padding-right:${l.SpaceScale6}}.ods-iY3yEr{padding-right:${l.SpaceScale8}}.ods-AUBfeL{padding-bottom:${l.SpaceScale0}}.ods-YdU1dp{padding-bottom:${l.SpaceScale1}}.ods-ZIL3IB{padding-bottom:${l.SpaceScale3}}.ods-yH6dmM{padding-bottom:${l.SpaceScale6}}.ods-uwhKWs{padding-bottom:${l.SpaceScale8}}.ods-qm2rCO{padding-left:${l.SpaceScale0}}.ods-4XkiKe{padding-left:${l.SpaceScale1}}.ods-kpI9c2{padding-left:${l.SpaceScale3}}.ods-iPbVtf{padding-left:${l.SpaceScale6}}.ods-rGioJP{padding-left:${l.SpaceScale8}}.ods-eJRVeS{overflow:visible}.ods-KtqaFL{overflow:hidden}.ods-uvGmWP{overflow:clip}.ods-XHmGFh{overflow:scroll}.ods-ojjEEs{overflow:auto}.ods-cgVQpl{overflow-x:visible}.ods-SW836o{overflow-x:hidden}.ods-aPv6NW{overflow-x:clip}.ods-uJIX9g{overflow-x:scroll}.ods-EW6ea0{overflow-x:auto}.ods-fZUOsf{overflow-y:visible}.ods-EF48jU{overflow-y:hidden}.ods-jt6RVM{overflow-y:clip}.ods-wGiRfB{overflow-y:scroll}.ods-agxzoh{overflow-y:auto}.ods-OWSpcm{color:${l.BodyTextColor}}.ods-gWhIOu{color:inherit}.ods-vhS2n4{font-weight:${l.NormalFontWeight}}.ods-1EOFKG{font-weight:inherit}.ods-6fHBGU{font-style:${l.NormalFontStyle}}.ods-xipIAO{font-style:inherit}.ods-1RXKSO{font-size:${l.FontSize}}.ods-c6dSLx{font-size:inherit}.ods-pMtclx{line-height:${l.BodyLineHeight}}.ods-1GpS7a{line-height:inherit}.ods-c7hUNN{border:${l.BaseBorderWidth} ${l.BaseBorderStyle} ${l.BaseBorderColor}}.ods-htd4XS{border-color:${l.DisplayBorderColor}}.ods-jMdVId{border-color:${l.UiBorderColor}}.ods-MPXxt4{border-color:${l.DangerBorderColor}}.ods-YAmoX4{border-radius:${l.BaseBorderRadius}}.ods-XiC0n5{border-radius:${l.OuterBorderRadius}}.ods-vtcf4L{border-top-left-radius:${l.BaseBorderRadius}}.ods-YgmkkC{border-top-left-radius:${l.OuterBorderRadius}}.ods-NYAxtc{border-top-right-radius:${l.BaseBorderRadius}}.ods-Ksl1uB{border-top-right-radius:${l.OuterBorderRadius}}.ods-d0YpUa{border-bottom-left-radius:${l.BaseBorderRadius}}.ods-84kPNF{border-bottom-left-radius:${l.OuterBorderRadius}}.ods-vAifSH{border-bottom-right-radius:${l.BaseBorderRadius}}.ods-pgBh8H{border-bottom-right-radius:${l.OuterBorderRadius}}.ods-SRrh9Y{background-color:${l.BaseBackgroundColor}}.ods-80kyeJ{background-color:${l.DisabledBackgroundColor}}.ods-8ySHbb{background-color:${l.PrimaryLightBackgroundColor}}.ods-l0HuGe{background-color:${l.PrimaryBaseBackgroundColor}}.ods-TxrVkL{background-color:${l.PrimaryDarkBackgroundColor}}.ods-KKnwWI{background-color:${l.DangerLightBackgroundColor}}.ods-W5HuBe{background-color:${l.DangerBaseBackgroundColor}}.ods-Jg4ujV{background-color:${l.DangerDarkBackgroundColor}}.ods-iGrZyd{background-color:${l.CautionLightBackgroundColor}}.ods-FqTzG3{background-color:${l.CautionBaseBackgroundColor}}.ods-RbNq4e{background-color:${l.CautionDarkBackgroundColor}}.ods-LAhnPc{background-color:${l.SuccessLightBackgroundColor}}.ods-ZXDolt{background-color:${l.SuccessBaseBackgroundColor}}.ods-twRLsd{background-color:${l.SuccessDarkBackgroundColor}}.ods-C0ZTaK{box-shadow:${l.BaseBoxShadow}}.ods-h67OIM{cursor:auto}.ods-pCCmLP{cursor:default}.ods-H2EIZf{cursor:none}.ods-95Kcor{cursor:pointer}.ods-tS6ha4{cursor:context-menu}.ods-3lYn4Y{cursor:help}.ods-4OoyFC{cursor:progress}.ods-17TJQ1{cursor:wait}.ods-FvNYEZ{cursor:cell}.ods-VCF4d0{cursor:crosshair}.ods-fgdwR3{cursor:text}.ods-35OZGj{cursor:vertical-text}.ods-6r1Akj{cursor:alias}.ods-RQVZsg{cursor:copy}.ods-eaATIR{cursor:move}.ods-w9MEyF{cursor:no-drop}.ods-9xtpf5{cursor:not-allowed}.ods-96o3Af{cursor:all-scroll}.ods-PGjEkr{cursor:col-resize}.ods-nEoYSS{cursor:row-resize}.ods-8RYKQN{cursor:e-resize}.ods-rJ8smj{cursor:n-resize}.ods-WOiqiv{cursor:ne-resize}.ods-GlRsuf{cursor:nw-resize}.ods-yA7aFx{cursor:s-resize}.ods-xTXgtD{cursor:se-resize}.ods-DUsw1O{cursor:sw-resize}.ods-Nt03kA{cursor:w-resize}.ods-mWIumo{cursor:ew-resize}.ods-KHgqhx{cursor:ns-resize}.ods-6aTQuv{cursor:nesw-resize}.ods-m7VvvC{cursor:nwse-resize}.ods-OLBG1c{cursor:zoom-in}.ods-7EQ0WR{cursor:zoom-out}.ods-W9Uhj1{cursor:grab}.ods-9hjwNW{cursor:grabbing}.ods-pQ9jVM:hover{border-color:${l.UiBorderColor}}.ods-YdOSyw:hover{border-color:${l.PrimaryBorderColor}}.ods-KwPA1f:hover{box-shadow:${l.HoverBoxShadow}}.ods-mmP3vc:focus-visible{border-color:${l.PrimaryBorderColor}}.ods-B8jbCv:focus-visible{border-color:${l.DangerBorderColor}}.ods-uFtA4Z:focus-visible{outline-color:${l.PrimaryFocusOutlineColor};outline-offset:${l.FocusOutlineOffset};outline-style:${l.FocusOutlineStyle};outline-width:${l.FocusOutlineWidth}}.ods-NYUrLU:focus-visible{outline-color:${l.DangerFocusOutlineColor};outline-offset:${l.FocusOutlineOffset};outline-style:${l.FocusOutlineStyle};outline-width:${l.FocusOutlineWidth}}.ods-XgQGbu{pointer-events:none}.ods-Z7rsxR{-webkit-user-select:none;-ms-user-select:none;user-select:none}.ods-wX5ZCa{-webkit-user-select:text;-ms-user-select:text;user-select:text}.ods-rTqYws{-webkit-user-select:contain;-ms-user-select:element;user-select:contain}.ods-514R0K{-webkit-user-select:all;user-select:all}`},root:"ods-WBGspT",displayBlock:"ods-EVsoGO",displayInline:"ods-oNzz4A",displayInlineBlock:"ods-OgAnFP",displayFlex:"ods-SJsRtZ",displayInlineFlex:"ods-stRz95",displayGrid:"ods-h7b6A0",displayInlineGrid:"ods-6let23",displayNone:"ods-1vxYEI",positionAbsolute:"ods-Qly7kU",positionRelative:"ods-rknelP",positionStatic:"ods-YlMrxB",positionFixed:"ods-emI7L5",positionSticky:"ods-XBvXCM",gridTemplateColumns2:"ods-JNLd89",gridTemplateColumns3:"ods-xdYIAV",gridTemplateColumns2Auto1:"ods-lknLGq",gridTemplateColumns3Auto1Auto3:"ods-ExeEH9",gridColumn1:"ods-zb2QMz",gridColumn2:"ods-qqDB8f",gridColumn3:"ods-P99BMD",gridRow1:"ods-Xm21dl",gridRow2:"ods-maaST9",gridRow3:"ods-k8AjIb",gridRow4:"ods-NTq9xH",gridRow5:"ods-C2T3bB",flexDirectionRow:"ods-K1NKDz",flexDirectionRowReverse:"ods-tI7BZY",flexDirectionColumn:"ods-O04S2r",flexDirectionColumnReverse:"ods-ofCvX7",flexWrapWrap:"ods-BTEe26",flexWrapWrapReverse:"ods-v2cXbd",flexWrapNowrap:"ods-R05bzx",flexInitial:"ods-BWyTPo",flexAuto:"ods-0cAxtW",flexEvenly:"ods-WOHC5e",flexNone:"ods-0KEyj1",flexGrow0:"ods-Y7Z8IQ",flexGrow1:"ods-SXa0g0",flexShrink0:"ods-VDKZf9",flexShrink1:"ods-n94o3u",alignItemsFlexStart:"ods-oxajRh",alignItemsFlexEnd:"ods-bUbzwO",alignItemsCenter:"ods-uyIogb",alignItemsBaseline:"ods-fAAfHO",alignItemsStretch:"ods-0GF9LL",justifyContentFlexStart:"ods-2iXUbJ",justifyContentFlexEnd:"ods-udEafa",justifyContentCenter:"ods-UGbAoO",justifyContentSpaceBetween:"ods-hbg1Js",justifyContentSpaceAround:"ods-65QkyB",justifyContentSpaceEvenly:"ods-6Qb7h7",width1px:"ods-KVvh0A",width1em:"ods-QItMSa",widthFull:"ods-UngCy0",widthScreen:"ods-XQZeID",maxWidthFull:"ods-Zo1xhu",maxWidthMaxLineLength:"ods-LdcPtP",maxWidthMaxLineLengthPlusPadding:"ods-W0Va1t",height1em:"ods-MUpE65",maxHeightScreen:"ods-eYTUWl",maxHeightScreenMinusPadding:"ods-PaDoSJ",margin0:"ods-qw32Dj",marginXs:"ods-4gEMud",marginS:"ods-FpsEVU",marginM:"ods-812m7k",marginL:"ods-Y5qcoJ",marginXl:"ods-qQjAoZ",marginTopXs:"ods-3fvR7J",marginTopS:"ods-y54SVG",marginTopM:"ods-GIOARF",marginTopL:"ods-uZgOgl",marginTopXl:"ods-18czDd",marginRightXs:"ods-BVZZD9",marginRightS:"ods-njM5Kj",marginRightM:"ods-40oIQ0",marginRightL:"ods-0IbnKA",marginRightXl:"ods-jdUMcW",marginBottomXs:"ods-ecA3qb",marginBottomS:"ods-MsqE4C",marginBottomM:"ods-9lLToX",marginBottomL:"ods-clUTRz",marginBottomXl:"ods-Cq68ID",marginLeftXs:"ods-jEtk1g",marginLeftS:"ods-oAbWJu",marginLeftM:"ods-dEBnXO",marginLeftL:"ods-Jyl57O",marginLeftXl:"ods-Do5cz2",padding0:"ods-Uwa53U",paddingXs:"ods-1RFSO9",paddingS:"ods-oYl3Ep",paddingM:"ods-mUmPqE",paddingL:"ods-KSTIYr",paddingXl:"ods-YLjYd0",paddingTopXs:"ods-wu6m9F",paddingTopS:"ods-wafCdo",paddingTopM:"ods-3zyfxi",paddingTopL:"ods-HbBbLJ",paddingTopXl:"ods-uQCCax",paddingRightXs:"ods-L4WW7U",paddingRightS:"ods-Hezf88",paddingRightM:"ods-CgCG2n",paddingRightL:"ods-gTxlQ8",paddingRightXl:"ods-iY3yEr",paddingBottomXs:"ods-AUBfeL",paddingBottomS:"ods-YdU1dp",paddingBottomM:"ods-ZIL3IB",paddingBottomL:"ods-yH6dmM",paddingBottomXl:"ods-uwhKWs",paddingLeftXs:"ods-qm2rCO",paddingLeftS:"ods-4XkiKe",paddingLeftM:"ods-kpI9c2",paddingLeftL:"ods-iPbVtf",paddingLeftXl:"ods-rGioJP",overflowVisible:"ods-eJRVeS",overflowHidden:"ods-KtqaFL",overflowClip:"ods-uvGmWP",overflowScroll:"ods-XHmGFh",overflowAuto:"ods-ojjEEs",overflowXVisible:"ods-cgVQpl",overflowXHidden:"ods-SW836o",overflowXClip:"ods-aPv6NW",overflowXScroll:"ods-uJIX9g",overflowXAuto:"ods-EW6ea0",overflowYVisible:"ods-fZUOsf",overflowYHidden:"ods-EF48jU",overflowYClip:"ods-jt6RVM",overflowYScroll:"ods-wGiRfB",overflowYAuto:"ods-agxzoh",colorBody:"ods-OWSpcm",colorInherit:"ods-gWhIOu",fontWeightNormal:"ods-vhS2n4",fontWeightInherit:"ods-1EOFKG",fontStyleNormal:"ods-6fHBGU",fontStyleInherit:"ods-xipIAO",fontSizeBase:"ods-1RXKSO",fontSizeInherit:"ods-c6dSLx",lineHeightNormal:"ods-pMtclx",lineHeightInherit:"ods-1GpS7a",borderBase:"ods-c7hUNN",borderColorDisplay:"ods-htd4XS",borderColorUi:"ods-jMdVId",borderColorDanger:"ods-MPXxt4",borderRadiusBase:"ods-YAmoX4",borderRadiusOuter:"ods-XiC0n5",borderTopLeftRadiusBase:"ods-vtcf4L",borderTopLeftRadiusOuter:"ods-YgmkkC",borderTopRightRadiusBase:"ods-NYAxtc",borderTopRightRadiusOuter:"ods-Ksl1uB",borderBottomLeftRadiusBase:"ods-d0YpUa",borderBottomLeftRadiusOuter:"ods-84kPNF",borderBottomRightRadiusBase:"ods-vAifSH",borderBottomRightRadiusOuter:"ods-pgBh8H",backgroundColorDefault:"ods-SRrh9Y",backgroundColorDisabled:"ods-80kyeJ",backgroundColorPrimaryLight:"ods-8ySHbb",backgroundColorPrimaryBase:"ods-l0HuGe",backgroundColorPrimaryDark:"ods-TxrVkL",backgroundColorDangerLight:"ods-KKnwWI",backgroundColorDangerBase:"ods-W5HuBe",backgroundColorDangerDark:"ods-Jg4ujV",backgroundColorCautionLight:"ods-iGrZyd",backgroundColorCautionBase:"ods-FqTzG3",backgroundColorCautionDark:"ods-RbNq4e",backgroundColorSuccessLight:"ods-LAhnPc",backgroundColorSuccessBase:"ods-ZXDolt",backgroundColorSuccessDark:"ods-twRLsd",boxShadowDefault:"ods-C0ZTaK",cursorAuto:"ods-h67OIM",cursorDefault:"ods-pCCmLP",cursorNone:"ods-H2EIZf",cursorPointer:"ods-95Kcor",cursorContextMenu:"ods-tS6ha4",cursorHelp:"ods-3lYn4Y",cursorProgress:"ods-4OoyFC",cursorWait:"ods-17TJQ1",cursorCell:"ods-FvNYEZ",cursorCrosshair:"ods-VCF4d0",cursorText:"ods-fgdwR3",cursorVerticalText:"ods-35OZGj",cursorAlias:"ods-6r1Akj",cursorCopy:"ods-RQVZsg",cursorMove:"ods-eaATIR",cursorNoDrop:"ods-w9MEyF",cursorNotAllowed:"ods-9xtpf5",cursorAllScroll:"ods-96o3Af",cursorColResize:"ods-PGjEkr",cursorRowResize:"ods-nEoYSS",cursorEResize:"ods-8RYKQN",cursorNResize:"ods-rJ8smj",cursorNeResize:"ods-WOiqiv",cursorNwResize:"ods-GlRsuf",cursorSResize:"ods-yA7aFx",cursorSeResize:"ods-xTXgtD",cursorSwResize:"ods-DUsw1O",cursorWResize:"ods-Nt03kA",cursorEwResize:"ods-mWIumo",cursorNsResize:"ods-KHgqhx",cursorNeswResize:"ods-6aTQuv",cursorNwseResize:"ods-m7VvvC",cursorZoomIn:"ods-OLBG1c",cursorZoomOut:"ods-7EQ0WR",cursorGrab:"ods-W9Uhj1",cursorGrabbing:"ods-9hjwNW",hoverBorderColorUi:"ods-pQ9jVM",hoverBorderColorPrimary:"ods-YdOSyw",hoverBoxShadowDefault:"ods-KwPA1f",focusBorderColorPrimary:"ods-mmP3vc",focusBorderColorDanger:"ods-B8jbCv",focusRingPrimary:"ods-uFtA4Z",focusRingDanger:"ods-NYUrLU",pointerEventsNone:"ods-XgQGbu",userSelectNone:"ods-Z7rsxR",userSelectText:"ods-wX5ZCa",userSelectContain:"ods-rTqYws",userSelectAll:"ods-514R0K"},Su=Wf(yI,s2)(W.exports.forwardRef((l,n)=>{let{as:e="div",color:t="body",fontWeight:u="normal",fontStyle:r="normal",fontSize:o="base",lineHeight:i="normal",display:a,position:s,flexDirection:c,flexWrap:f,flex:d,flexGrow:h,flexShrink:p,alignItems:y,justifyContent:m,gridTemplateColumns:g,gridColumn:v,gridRow:w,width:S,maxWidth:I,height:C,maxHeight:D,margin:F,marginTop:j,marginRight:K,marginBottom:X,marginLeft:n2,padding:Z,paddingTop:b,paddingRight:L,paddingBottom:Y,paddingLeft:c2,overflow:a2,overflowX:_,overflowY:A,borderColor:x,hoverBorderColor:N,focusBorderColor:B,borderRadius:U,borderTopLeftRadius:o2,borderTopRightRadius:g2,borderBottomLeftRadius:m2,borderBottomRightRadius:S2,backgroundColor:A2,boxShadow:y3,hoverBoxShadow:x1,focusRing:gn,cursor:v5,pointerEvents:y5,userSelect:T1,children:Z6,className:O,...M}=l;const T=e;if(Array.isArray(F))switch(F.length){case 2:j=F[0],X=F[0],n2=F[1],K=F[1];break;case 3:j=F[0],K=F[1],n2=F[1],X=F[2];break;case 4:j=F[0],K=F[1],X=F[2],n2=F[3];break;default:F=F[0]}if(Array.isArray(Z))switch(Z.length){case 2:b=Z[0],Y=Z[0],c2=Z[1],L=Z[1];break;case 3:b=Z[0],L=Z[1],c2=Z[1],Y=Z[2];break;case 4:b=Z[0],L=Z[1],Y=Z[2],c2=Z[3];break;default:Z=Z[0]}if(Array.isArray(U))switch(U.length){case 2:o2=U[0],S2=U[0],g2=U[1],m2=U[1];break;case 3:o2=U[0],g2=U[1],m2=U[1],S2=U[2];break;case 4:o2=U[0],g2=U[1],S2=U[2],m2=U[3];break;default:U=U[0]}if(Array.isArray(a2))switch(a2.length){case 2:_=a2[0],A=a2[1];break;default:_=a2[0]}const P=hI(s2.root,a&&s2[`display${d2(a)}`],s&&s2[`position${d2(s)}`],c&&s2[`flexDirection${d2(c)}`],f&&s2[`flexWrap${d2(f)}`],d&&s2[`flex${d2(d)}`],h&&s2[`flexGrow${d2(h)}`],p&&s2[`flexShrink${d2(p)}`],y&&s2[`alignItems${d2(y)}`],m&&s2[`justifyContent${d2(m)}`],g&&s2[`gridTemplateColumns${d2(g)}`],v&&s2[`gridColumn${d2(v)}`],w&&s2[`gridRow${d2(w)}`],S&&s2[`width${d2(S)}`],I&&s2[`maxWidth${d2(I)}`],C&&s2[`height${d2(C)}`],D&&s2[`maxHeight${d2(D)}`],F&&!Array.isArray(F)&&s2[`margin${d2(F)}`],j&&s2[`marginTop${d2(j)}`],K&&s2[`marginRight${d2(K)}`],X&&s2[`marginBottom${d2(X)}`],n2&&s2[`marginLeft${d2(n2)}`],Z&&!Array.isArray(Z)&&s2[`padding${d2(Z)}`],b&&s2[`paddingTop${d2(b)}`],L&&s2[`paddingRight${d2(L)}`],Y&&s2[`paddingBottom${d2(Y)}`],c2&&s2[`paddingLeft${d2(c2)}`],a2&&!Array.isArray(a2)&&s2[`overflow${d2(a2)}`],_&&s2[`overflowX${d2(_)}`],A&&s2[`overflowY${d2(A)}`],x&&x!=="none"&&s2.borderBase,x&&s2[`borderColor${d2(x)}`],N&&N!=="none"&&s2.borderBase,N&&s2[`hoverBorderColor${d2(N)}`],B&&s2[`focusBorderColor${d2(B)}`],U&&!Array.isArray(U)&&s2[`borderRadius${d2(U)}`],o2&&s2[`borderTopLeftRadius${d2(o2)}`],g2&&s2[`borderTopRightRadius${d2(g2)}`],m2&&s2[`borderBottomLeftRadius${d2(m2)}`],S2&&s2[`borderBottomRightRadius${d2(S2)}`],A2&&s2[`backgroundColor${d2(A2)}`],y3&&s2[`boxShadow${d2(y3)}`],x1&&s2[`hoverBoxShadow${d2(x1)}`],gn&&s2[`focusRing${d2(gn)}`],v5&&s2[`cursor${d2(v5)}`],y5&&s2[`pointerEvents${d2(y5)}`],T1&&s2[`userSelect${d2(T1)}`],t&&s2[`color${d2(t)}`],u&&s2[`fontWeight${d2(u)}`],r&&s2[`fontStyle${d2(r)}`],o&&s2[`fontSize${d2(o)}`],i&&s2[`lineHeight${d2(i)}`],O),k=Gf(M);return R(T,{...k,className:P,ref:n,children:Z6})}));Su.displayName="Box";/*!
 * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.
 * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
 *
 * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and limitations under the License.
 */const wI=l=>({Size:l.SpaceScale3,TextColor:l.ColorPrimaryBase,CircleStrokeWidth:"17%",CircleStrokeColor:l.ColorPaletteNeutral100,AnimatedCircleStrokeColor:l.ColorPrimaryDark,AnimationDuration:"1.4s",AnimationTimingFunction:"cubic-bezier(0.35, -0.12, 0.09, 0.96)"}),F5={__digest:"4aea8e",__template:function(l){return`.ods-y0kw40{animation-duration:${l.AnimationDuration};animation-iteration-count:infinite;animation-name:ods-njTcZE;animation-timing-function:linear;color:${l.TextColor};display:inline-block}.ods-Jynn52{display:block;height:${l.Size};width:${l.Size}}.ods-MDqtXR{stroke-width:${l.CircleStrokeWidth};stroke:${l.CircleStrokeColor}}.ods-ake2SO{stroke-width:${l.CircleStrokeWidth};stroke-dasharray:160%,360%;stroke-dashoffset:0;stroke:${l.AnimatedCircleStrokeColor};animation-duration:${l.AnimationDuration};animation-iteration-count:infinite;animation-name:ods-281Boo;animation-timing-function:${l.AnimationTimingFunction}}@keyframes ods-njTcZE{0%{transform:rotate(0deg);transform-origin:50% 50%}to{transform:rotate(1turn)}}@keyframes ods-281Boo{0%{stroke-dasharray:1%,360%;stroke-dashoffset:0}50%{stroke-dasharray:160%,360%;stroke-dashoffset:-100%}to{stroke-dasharray:160%,360%;stroke-dashoffset:-260%}}`},root:"ods-y0kw40",rotateClockwise:"ods-njTcZE",svg:"ods-Jynn52",circle:"ods-MDqtXR",animatedCircle:"ods-ake2SO",indeterminateStroke:"ods-281Boo"},Kf=Wf(wI,F5)(W.exports.forwardRef((l,n)=>{const{"aria-label":e,"aria-valuetext":t,id:u,...r}=l,o=Gf(r),i=gI();return R(Su,{as:"span",...o,className:F5.root,role:"progressbar","aria-valuemin":0,"aria-valuemax":1,"aria-valuetext":t,"aria-label":e,ref:n,id:u||i,children:t2("svg",{className:F5.svg,viewBox:"0 0 24 24",role:"presentation",children:[R("circle",{className:F5.circle,cx:"12",cy:"12",r:"10",fill:"none"}),R("circle",{className:F5.animatedCircle,cx:"12",cy:"12",r:"10",fill:"none"})]})})}));Kf.displayName="CircularLoadIndicator";const xu=()=>R(Su,{display:"flex",alignItems:"center",justifyContent:"center",children:R(Kf,{"aria-label":"Loader","aria-valuetext":"Loading..."})}),SI=()=>{const{authState:l,oktaAuth:n}=Cl(),[e,t]=W.exports.useState(""),[u,r]=W.exports.useState(""),[o,i]=W.exports.useState(""),[a,s]=W.exports.useState(!1),[c,f]=W.exports.useState(!1);W.exports.useEffect(()=>{const p=new URLSearchParams(window.location.search).get("redirect");if(p&&localStorage.setItem("redirect",p),l)if(console.log(l),l.isAuthenticated){const y=localStorage.getItem("redirect");y&&(localStorage.removeItem("redirect"),window.location=y)}else f(!0)},[l,n]);const d=async()=>{if(sessionStorage.clear(),!e||!u)i("Please enter both username and password.");else{s(!0);try{const h=await n.signInWithCredentials({username:e,password:u});console.log(h);const{sessionToken:p}=h;p?n.signInWithRedirect({sessionToken:p}):(s(!1),i("Invalid username or password."))}catch(h){s(!1),i(h.message)}}};return a||!l||!c?R(xu,{}):R(Y6,{children:c&&t2(Il,{children:[R("h2",{children:"Login"}),t2(Il.Field,{children:[R("label",{children:"Username:"}),R("input",{type:"text",value:e,onChange:h=>t(h.target.value)})]}),t2(Il.Field,{children:[R("label",{children:"Password:"}),R("input",{type:"password",value:u,onChange:h=>r(h.target.value)})]}),R(K3,{onClick:d,children:"Login"}),o&&R(q3,{negative:!0,children:o})]})})},xI=()=>{const{oktaAuth:l}=Cl(),[n,e]=W.exports.useState(!1),t=async()=>{sessionStorage.clear(),e(!0);const r=new URLSearchParams(window.location.search).get("redirect");localStorage.setItem("redirect",r)};return W.exports.useEffect(()=>{t()},[l]),n?R(xu,{}):R("h2",{children:"Login"})},TI=()=>{const{oktaAuth:l}=Cl(),[n,e]=W.exports.useState(""),[t,u]=W.exports.useState(""),[r,o]=W.exports.useState(""),[i,a]=W.exports.useState("default"),[s,c]=W.exports.useState(""),f=e1(),[d,h]=W.exports.useState(!1),p=async()=>{if(!n||!r)c("Please enter both username and password.");else{h(!0),sessionStorage.clear();const{messages:m}=await l.idx.register({email:n,password:r,authenticator:F3.OKTA_EMAIL});m?c("Something was wrong"):(a("code"),c("")),h(!1)}},y=async()=>{h(!0),await l.idx.proceed({verificationCode:t});const m=await l.idx.proceed({authenticator:F3.WEBAUTHN}),g=m.nextStep.authenticator.contextualData.activationData,v=m.nextStep.authenticatorEnrollments,w=Y9.webauthn.buildCredentialCreationOptions(g,v),S=await navigator.credentials.create(w),I=Y9.webauthn.getAttestation(S);await l.idx.proceed({clientData:I.clientData,attestation:I.attestation});const C=await l.idx.proceed({skip:!0}),{tokens:D,status:F}=C||{};F==="SUCCESS"?(l.tokenManager.setTokens(D),f.replace("/")):c("Something was wrong"),h(!1)};return d?R(xu,{}):R(Y6,{children:i==="code"?t2(Il,{children:[R("h2",{children:"Email code"}),t2(Il.Field,{children:[R("label",{children:"Code:"}),R("input",{type:"text",value:t,onChange:m=>u(m.target.value)}),R(K3,{onClick:y,children:"Send"}),s&&R(q3,{negative:!0,children:s})]})]}):t2(Il,{children:[R("h2",{children:"Register User"}),t2(Il.Field,{children:[R("label",{children:"Username:"}),R("input",{type:"text",value:n,onChange:m=>e(m.target.value)})]}),t2(Il.Field,{children:[R("label",{children:"Password:"}),R("input",{type:"password",value:r,onChange:m=>o(m.target.value)})]}),R(K3,{onClick:p,children:"Login"}),s&&R(q3,{negative:!0,children:s})]})})},EI=()=>{const{authState:l,oktaAuth:n}=Cl(),[e,t]=W.exports.useState(null),[u,r]=W.exports.useState(!1);return W.exports.useEffect(()=>{if(l&&l.isAuthenticated){const i=n.getAccessToken();fetch(J6.resourceServer.messagesUrl,{headers:{Authorization:`Bearer ${i}`}}).then(a=>a.ok?a.json():Promise.reject()).then(a=>{let s=0;const c=a.messages.map(f=>{const d=new Date(f.date),h=d.toLocaleDateString(),p=d.toLocaleTimeString();return s+=1,{date:`${h} ${p}`,text:f.text,id:`message-${s}`}});t(c),r(!1)}).catch(a=>{r(!0),console.error(a)})}},[l]),t2("div",{children:[t2(Tl,{as:"h1",children:[R(W2,{name:"mail outline"}),"My Messages"]}),u&&R(q3,{error:!0,header:"Failed to fetch messages.  Please verify the following:",list:["You've downloaded one of our resource server examples, and it's running on port 8000.","Your resource server example is using the same Okta authorization server (issuer) that you have configured this React application to use."]}),!e&&!u&&R("p",{children:"Fetching Messages.."}),e&&t2("div",{children:[t2("p",{children:["This component makes a GET request to the resource server example, which must be running at",R("code",{children:"localhost:8000/api/messages"})]}),t2("p",{children:["It attaches your current access token in the"," ",R("code",{children:"Authorization"})," ","header on the request, and the resource server will attempt to authenticate this access token. If the token is valid the server will return a list of messages.  If the token is not valid or the resource server is incorrectly configured, you will see a 401"," ",R("code",{children:"Unauthorized response"}),"."]}),t2("p",{children:["This route is protected with the"," ",R("code",{children:"<SecureRoute>"})," ","component, which will ensure that this page cannot be accessed until you have authenticated and have an access token in local storage."]}),t2(h3,{children:[R("thead",{children:t2("tr",{children:[R("th",{children:"Date"}),R("th",{children:"Message"})]})}),R("tbody",{children:e.map(i=>t2("tr",{id:i.id,children:[R("td",{children:i.date}),R("td",{children:i.text})]},i.id))})]})]})]})};var CI="assets/digitalid.046019e2.png";const bI=({setCorsErrorModalOpen:l})=>{const n=e1(),{authState:e,oktaAuth:t}=Cl(),u=i=>i.name==="AuthApiError"&&!i.errorCode&&i.xhr.message==="Failed to fetch",r=async()=>n.push("/login"),o=async()=>{const i=window.location.origin+n.createHref({pathname:"/"});try{await t.signOut({postLogoutRedirectUri:i})}catch(a){if(u(a))l(!0);else throw a}};return e?R("div",{children:R(l4,{fixed:"top",inverted:!0,children:t2(Z4,{children:[t2(l4.Item,{header:!0,children:[R(f3,{size:"mini",src:CI}),"\xA0",R(ue,{to:"/",children:"DigitalID"})]}),e.isAuthenticated&&t2(l4.Item,{id:"messages-button",children:[R(W2,{name:"mail outline"}),R(ue,{to:"/messages",children:"Messages"})]}),e.isAuthenticated&&R(l4.Item,{id:"profile-button",children:R(ue,{to:"/profile",children:"Profile"})}),e.isAuthenticated&&R(l4.Item,{id:"logout-button",onClick:o,children:"Logout"}),!e.isPending&&!e.isAuthenticated&&R(l4.Item,{onClick:r,children:"Login"})]})})}):null},OI=()=>{const{authState:l,oktaAuth:n}=Cl(),[e,t]=W.exports.useState(null);return W.exports.useEffect(()=>{!l||!l.isAuthenticated?t(null):n.getUser().then(u=>{t(u)}).catch(u=>{console.error(u)})},[l,n]),e?R("div",{children:t2("div",{children:[t2(Tl,{as:"h1",children:[R(W2,{name:"drivers license"})," ","My User Profile (ID Token Claims)"," "]}),t2("p",{children:["Below is the information from your ID token which was obtained during the \xA0",R("a",{href:"https://developer.okta.com/docs/guides/implement-auth-code-pkce",children:"PKCE Flow"})," ","and is now stored in local storage."]}),t2("p",{children:["This route is protected with the"," ",R("code",{children:"<SecureRoute>"})," ","component, which will ensure that this page cannot be accessed until you have authenticated."]}),t2(h3,{children:[R("thead",{children:t2("tr",{children:[R("th",{children:"Claim"}),R("th",{children:"Value"})]})}),R("tbody",{children:Object.entries(e).map(u=>{const r=u[0],o=u[1],i=`claim-${r}`;return t2("tr",{children:[R("td",{children:r}),R("td",{id:i,children:o.toString()})]},r)})})]})]})}):R("div",{children:R("p",{children:"Fetching user profile..."})})},kI=({corsErrorModalOpen:l,setCorsErrorModalOpen:n})=>{const{issuer:e}=J6.oidc,t=e.split("/oauth2")[0],u=new URL(t).host.split(".");u[0]+="-admin";const o=`https://${u.join(".")}/admin/access/api/trusted_origins`,i="https://developer.okta.com/docs/guides/enable-cors/granting-cors/";return t2(rl,{onClose:()=>n(!1),open:l,closeIcon:!0,children:[R(rl.Header,{children:"Network Error"}),R(rl.Content,{children:t2(rl.Description,{children:[R("p",{children:"Seems like logout API call resulted with CORS error."}),t2("p",{children:["You may need to add your origin"," ",window.location.origin," ","to list of trusted origins in your"," ",R("a",{href:o,target:"_blank",rel:"noreferrer",children:"Okta Administrator Dashboard"})]}),t2("p",{children:["Read"," ",R("a",{href:i,target:"_blank",rel:"noreferrer",children:"this guide"})," ","for more info."]})]})})]})},PI=({authRequiredModalOpen:l,setAuthRequiredModalOpen:n,triggerLogin:e})=>{const t=()=>{n(!1)},u=()=>{n(!1),e()};return t2(rl,{onClose:t,onActionClick:u,open:l,closeOnDocumentClick:!1,closeOnDimmerClick:!1,children:[R(rl.Header,{children:"Auth required"}),R(rl.Content,{children:R(rl.Description,{children:R("p",{children:"Do you want to re-authenticate?"})})}),t2(rl.Actions,{children:[R(K3,{onClick:t,children:"No"}),R(K3,{positive:!0,onClick:u,children:"Yes"})]})]})},_i=new Y9(J6.oidc),AI=()=>{const[l,n]=$.useState(!1),[e,t]=$.useState(!1),u=e1(),r=()=>{u.push("/login")},o=async(s,c)=>{u.replace(qs(c||"/",window.location.origin))},i=async()=>{const s=_i.authStateManager.getPreviousAuthState();!s||!s.isAuthenticated?r():t(!0)},a=async()=>{u.push("/login")};return t2(aT,{oktaAuth:_i,onAuthRequired:i,restoreOriginalUri:o,children:[R(bI,{setCorsErrorModalOpen:n}),R(kI,{corsErrorModalOpen:l,setCorsErrorModalOpen:n}),R(PI,{authRequiredModalOpen:e,setAuthRequiredModalOpen:t,triggerLogin:r}),R(Z4,{text:!0,style:{marginTop:"7em"},children:t2(Bs,{children:[R(yn,{path:"/",exact:!0,component:jA}),R(yn,{path:"/login/callback",render:s=>R(sT,{...s,onAuthResume:a})}),R(yn,{path:"/login",render:()=>R(SI,{setCorsErrorModalOpen:n})}),R(yn,{path:"/requestToken",render:()=>R(xI,{})}),R(yn,{path:"/registry",render:()=>R(TI,{})}),R(Ro,{path:"/messages",component:EI}),R(Ro,{path:"/profile",component:OI})]})})]})};ng.render(R(Hs,{basename:J6.app.basename,children:R(AI,{})}),document.getElementById("root"))});export default _I();
